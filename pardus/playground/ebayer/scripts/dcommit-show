#!/usr/bin/env python

# Show which git commmits will be dcommitted to svn and optionaly
# show the patches of each commit

import sys, subprocess, os

## {{{ http://code.activestate.com/recipes/134892/ (r2)
class _Getch:
    """Gets a single character from standard input.  Does not echo to the screen."""
    def __init__(self):
        try:
            self.impl = _GetchWindows()
        except ImportError:
            self.impl = _GetchUnix()

    def __call__(self): return self.impl()


class _GetchUnix:
    def __init__(self):
        import tty, sys

    def __call__(self):
        import sys, tty, termios
        fd = sys.stdin.fileno()
        old_settings = termios.tcgetattr(fd)
        try:
            tty.setraw(sys.stdin.fileno())
            ch = sys.stdin.read(1)
        finally:
            termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
        return ch


class _GetchWindows:
    def __init__(self):
        import msvcrt

    def __call__(self):
        import msvcrt
        return msvcrt.getch()


getch = _Getch()
## end of http://code.activestate.com/recipes/134892/ }}}

output = subprocess.Popen(("/usr/bin/git", "svn", "-n", "dcommit"), shell=False, stdout=subprocess.PIPE).communicate()[0]
for line in output.splitlines():
    if line.startswith("diff-tree"):
        print
        print line
        line = line.split()
        logos = os.environ
        logos["GIT_PAGER"] = "cat"
        subprocess.Popen(("/usr/bin/git", "log", line[-2] + ".." + line[-1]), shell=False, env=logos).communicate()
        print
        print "Press y to print diff-tree with patch or any other key to skip: ",
        answer = getch()
        if answer == "y":
            cmd = ["/usr/bin/git", "diff-tree", "-u", "--color=always"]
            cmd.extend(line[1:])
            p1 = subprocess.Popen(cmd, shell=False, stdout=subprocess.PIPE)
            p2 = subprocess.Popen(os.environ["PAGER"], stdin=p1.stdout)
            p2.communicate()
