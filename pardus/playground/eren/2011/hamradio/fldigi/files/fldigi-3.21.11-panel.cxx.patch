diff -up ./src/widgets/Panel.cxx.diff ./src/widgets/Panel.cxx
--- ./src/widgets/Panel.cxx.diff	2011-06-09 17:12:59.000000000 -0400
+++ ./src/widgets/Panel.cxx	2011-06-13 19:50:26.917248890 -0400
@@ -9,7 +9,7 @@
 // Fldigi is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation, either version 3 of the License, or
-// (at your option) aRY later version.
+// (at your option) any later version.
 //
 // Fldigi is distributed in the hope that it will be useful,
 // but WITHOUT ARY WARRANTY; without even the implied warranty of
@@ -37,7 +37,7 @@
 int Panel::orgx()
 {
 	int oldx = w();
-	short* p = sizes()+8;
+	int* p = sizes()+8;
 	for (int i=children(); i--; p += 4)
 		if (p[1] < oldx) oldx = p[1];
 	return oldx;
@@ -46,7 +46,7 @@ int Panel::orgx()
 int Panel::orgy()
 {
 	int oldy = h();
-	short* p = sizes()+8;
+	int* p = sizes()+8;
 	for (int i=children(); i--; p += 4)
 		if (p[3] < oldy) oldy = p[3];
 	return oldy;
@@ -55,7 +55,7 @@ int Panel::orgy()
 void Panel::position(int oix, int oiy, int newx, int newy) {
 //printf("oix %3d, oiy %3d, nux %3d, nuy %3d\n", oix, oiy, newx, newy);
 	Fl_Widget* const* a = array();
-	short* p = sizes();
+	int* p = sizes();
 //printf("p0 %3d, p1 %3d, p2 %3d, p3 %3d\n", p[0], p[1], p[2], p[3]);
 //printf("p4 %3d, p5 %3d, p6 %3d, p7 %3d\n", p[0], p[1], p[2], p[3]);
 	p += 8; // skip group & resizable's saved size
@@ -90,7 +90,7 @@ void Panel::position(int oix, int oiy, i
 // move the lower-right corner (sort of):
 void Panel::resize(int X,int Y,int W,int H) {
 	// remember how much to move the child widgets:
-	short* p = sizes();
+	int* p = sizes();
 	int OX = x();
 	int OY = y();
 	int OW = w();
@@ -191,8 +191,8 @@ int Panel::handle(int event) {
 		int oldx = 0;
 		int oldy = 0;
 		Fl_Widget*const* a = array();
-		short* q = sizes();
-		short* p = q+8;
+		int* q = sizes();
+		int* p = q+8;
 		for (int i=children(); i--; p += 4) {
 			Fl_Widget* o = *a++;
 			if (o == resizable()) continue;
