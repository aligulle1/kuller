--- trunk/src/export.c	2009/10/17 11:51:10	537
+++ trunk/src/export.c	2009/10/25 11:26:20	550
@@ -25,9 +25,6 @@
 #include <fcntl.h>
 #include <glib/gstdio.h>
 
-static void
-img_export_flv_changed( GtkComboBox   *, GtkWidget * );
-
 static GtkWidget *
 img_create_export_dialog( img_window_struct  *img,
 						  const gchar        *title,
@@ -711,7 +708,7 @@
 
 	ret = g_spawn_async_with_pipes( NULL, argv, NULL,
 									G_SPAWN_SEARCH_PATH |
-									G_SPAWN_STDOUT_TO_DEV_NULL |
+									G_SPAWN_STDOUT_TO_DEV_NULL | 
 									G_SPAWN_STDERR_TO_DEV_NULL,
 									NULL, NULL, &img->ffmpeg_export,
 									&img->file_desc, NULL, NULL, &error );
@@ -1307,12 +1304,13 @@
 	GtkWidget      *vbox;
 
 	/* Additional options - OGG  only */
-	GtkWidget *frame;
-	GtkWidget *label;
-	GtkWidget *hbox;
+	GtkWidget *frame, *alignment, *label;
+	GtkWidget *hbox, *vbox_normal;
 	GtkWidget *radio1, *radio2;
+	GtkWidget *video_size_combo;
 	GtkWidget *radios[3];
-	gint       i;
+	gint	  i, width, height;
+
 	/* These values have been contributed by Jean-Pierre Redonnet.
 	 * Thanks. */
 	gint       qualities[] = { 512, 1024, 2048 };
@@ -1328,24 +1326,68 @@
 		return;
 
 	/* Add any export format specific GUI elements here */
+	hbox = gtk_hbox_new( TRUE, 10 );
+	gtk_box_pack_start( GTK_BOX( vbox ), hbox, FALSE, FALSE, 0 );
+
+	/* Aspect Ratio */
 	frame = gtk_frame_new( NULL );
-	gtk_box_pack_start( GTK_BOX( vbox ), frame, FALSE, FALSE, 0 );
+	gtk_box_pack_start( GTK_BOX( hbox ), frame, TRUE, TRUE, 0 );
 
-	label = gtk_label_new( _("<b>Television Format</b>") );
+	label = gtk_label_new( _("<b>Aspect Ratio</b>") );
 	gtk_label_set_use_markup( GTK_LABEL( label ), TRUE );
 	gtk_frame_set_label_widget( GTK_FRAME( frame ), label );
 
-	hbox = gtk_hbox_new( TRUE, 5 );
-	gtk_container_add( GTK_CONTAINER( frame ), hbox );
+	alignment = gtk_alignment_new(0.5, 0.5, 0.5, 0.5);
+	gtk_container_add (GTK_CONTAINER (frame), alignment);
+	gtk_alignment_set_padding (GTK_ALIGNMENT (alignment), 0, 0, 5, 5);
+
+	vbox_normal = gtk_vbox_new( FALSE, 0 );
+	gtk_container_add( GTK_CONTAINER( alignment ), vbox_normal );
 
 	radio1 = gtk_radio_button_new_with_mnemonic( NULL, _("Normal 4:3") );
 	gtk_toggle_button_set_active( GTK_TOGGLE_BUTTON( radio1 ), TRUE );
-	gtk_box_pack_start( GTK_BOX( hbox ), radio1, FALSE, FALSE, 0 );
+	gtk_box_pack_start( GTK_BOX( vbox_normal ), radio1, FALSE, FALSE, 0 );
 
-	radio2 = gtk_radio_button_new_with_mnemonic_from_widget(
-				GTK_RADIO_BUTTON( radio1 ), _("Widescreen 16:9") );
-	gtk_box_pack_start( GTK_BOX( hbox ), radio2, FALSE, FALSE, 0 );
-	
+	radio2 = gtk_radio_button_new_with_mnemonic_from_widget(GTK_RADIO_BUTTON( radio1 ), _("Widescreen 16:9") );
+	gtk_box_pack_start( GTK_BOX( vbox_normal ), radio2, FALSE, FALSE, 0 );
+
+	/* Video Size */
+	frame = gtk_frame_new( NULL );
+	gtk_box_pack_start( GTK_BOX( hbox ), frame, TRUE, TRUE, 0 );
+
+	label = gtk_label_new( _("<b>Video Size</b>") );
+	gtk_label_set_use_markup( GTK_LABEL( label ), TRUE );
+	gtk_frame_set_label_widget( GTK_FRAME( frame ), label );
+
+	alignment = gtk_alignment_new(0.5, 0.5, 0.5, 0.5);
+	gtk_container_add (GTK_CONTAINER (frame), alignment);
+	gtk_alignment_set_padding (GTK_ALIGNMENT (alignment), 0, 0, 5, 5);
+
+	vbox_normal = gtk_vbox_new( FALSE, 0 );
+	gtk_container_add (GTK_CONTAINER (alignment), vbox_normal);
+
+	video_size_combo = _gtk_combo_box_new_text(FALSE);
+	gtk_box_pack_start( GTK_BOX( vbox_normal ), video_size_combo, FALSE, FALSE, 0 );
+	{
+		GtkTreeIter   iter;
+		GtkListStore *store = GTK_LIST_STORE( gtk_combo_box_get_model(GTK_COMBO_BOX( video_size_combo ) ) );
+
+		gtk_list_store_append( store, &iter );
+		gtk_list_store_set( store, &iter, 0, "320 x 240", -1 );
+		gtk_list_store_append( store, &iter );
+		gtk_list_store_set( store, &iter, 0, "352 x 288", -1 );
+		gtk_list_store_append( store, &iter );
+		gtk_list_store_set( store, &iter, 0, "400 x 300", -1 );
+		gtk_list_store_append( store, &iter );
+		gtk_list_store_set( store, &iter, 0, "512 x 384", -1 );
+		gtk_list_store_append( store, &iter );
+		gtk_list_store_set( store, &iter, 0, "640 x 480", -1 );
+		gtk_list_store_append( store, &iter );
+		gtk_list_store_set( store, &iter, 0, "704 x 576", -1 );
+	}
+	gtk_combo_box_set_active( GTK_COMBO_BOX( video_size_combo ), 0 );
+
+	/* Video Quality */
 	frame = gtk_frame_new( NULL );
 	gtk_box_pack_start( GTK_BOX( vbox ), frame, FALSE, FALSE, 0 );
 
@@ -1383,6 +1425,39 @@
 	filename = gtk_entry_get_text( entry );
 
 	/* Any additional calculation can be placed here. */
+	switch(gtk_combo_box_get_active(GTK_COMBO_BOX(video_size_combo)) )
+	{
+		case 0:
+		width  = 320;
+		height = 240;
+		break;
+		
+		case 1:
+		width  = 352;
+		height = 288;
+		break;
+
+		case 2:
+		width  = 400;
+		height = 300;
+		break;
+
+		case 3:
+		width  = 512;
+		height = 384;
+		break;
+
+		case 4:
+		width  = 640;
+		height = 480;
+		break;
+
+		case 5:
+		width  = 704;
+		height = 576;
+		break;
+	}
+
 	if( gtk_toggle_button_get_active( GTK_TOGGLE_BUTTON( radio1 ) ) )
 		aspect_ratio = "4:3";
 	else
@@ -1395,11 +1470,10 @@
 	}
 
 	cmd_line = g_strdup_printf( "ffmpeg -f image2pipe -vcodec ppm -r %.02f "
-								"-aspect %s -s %dx%d -i pipe: <#AUDIO#> "
+								"-i pipe: <#AUDIO#> -f ogg -aspect %s -s %dx%d "
 								"-vcodec libtheora -b %dk -acodec libvorbis "
-								"-f ogg -y \"%s.ogv\"",
-								img->export_fps, aspect_ratio,
-								img->video_size[0], img->video_size[1],
+								"-y \"%s.ogv\"",
+								img->export_fps, aspect_ratio, width, height,
 								qualities[i], filename );
 	img->export_cmd_line = cmd_line;
 
@@ -1421,15 +1495,12 @@
 	/* Additional options - FLV  only */
 	GtkWidget *frame;
 	GtkWidget *label;
-	GtkWidget *hbox, *vbox_normal, *vbox_wide;
+	GtkWidget *hbox, *vbox_normal, *alignment;
 	GtkWidget *radio1, *radio2;
-	GtkWidget *normal_combo, *wide_combo;
+	GtkWidget *video_size_combo;
 	GtkWidget *radios[3];
 	gint       i, width, height;
-
-	/* These values have been contributed by Jean-Pierre Redonnet.
-	 * Thanks. */
-	gint       qualities[] = { 192, 384, 768 };
+	gint       qualities[] = { 384, 768, 1536 };
 
 	/* This function call should be the first thing exporter does, since this
 	 * function will take some preventive measures. */
@@ -1442,65 +1513,64 @@
 		return;
 
 	/* Add any export format specific GUI elements here */
+	hbox = gtk_hbox_new( TRUE, 10 );
+	gtk_box_pack_start( GTK_BOX( vbox ), hbox, FALSE, FALSE, 0 );
+
+	/* Aspect Ratio */
 	frame = gtk_frame_new( NULL );
-	gtk_box_pack_start( GTK_BOX( vbox ), frame, FALSE, FALSE, 0 );
+	gtk_box_pack_start( GTK_BOX( hbox ), frame, TRUE, TRUE, 0 );
 
-	label = gtk_label_new( _("<b>Video Size</b>") );
+	label = gtk_label_new( _("<b>Aspect Ratio</b>") );
 	gtk_label_set_use_markup( GTK_LABEL( label ), TRUE );
 	gtk_frame_set_label_widget( GTK_FRAME( frame ), label );
 
-	hbox = gtk_hbox_new( TRUE, 5 );
-	gtk_container_add( GTK_CONTAINER( frame ), hbox );
+	alignment = gtk_alignment_new(0.5, 0.5, 0.5, 0.5);
+	gtk_container_add (GTK_CONTAINER (frame), alignment);
+	gtk_alignment_set_padding (GTK_ALIGNMENT (alignment), 0, 0, 5, 5);
 
 	vbox_normal = gtk_vbox_new( FALSE, 0 );
-	gtk_box_pack_start (GTK_BOX(hbox), vbox_normal, FALSE, FALSE, 0 );
-	
+	gtk_container_add( GTK_CONTAINER( alignment ), vbox_normal );
+
 	radio1 = gtk_radio_button_new_with_mnemonic( NULL, _("Normal 4:3") );
 	gtk_toggle_button_set_active( GTK_TOGGLE_BUTTON( radio1 ), TRUE );
 	gtk_box_pack_start( GTK_BOX( vbox_normal ), radio1, FALSE, FALSE, 0 );
 
-	normal_combo = _gtk_combo_box_new_text(FALSE);
-	gtk_box_pack_start( GTK_BOX( vbox_normal ), normal_combo, FALSE, FALSE, 0 );
-	{
-		GtkTreeIter   iter;
-		GtkListStore *store = GTK_LIST_STORE( gtk_combo_box_get_model(GTK_COMBO_BOX( normal_combo ) ) );
+	radio2 = gtk_radio_button_new_with_mnemonic_from_widget(GTK_RADIO_BUTTON( radio1 ), _("Widescreen 16:9") );
+	gtk_box_pack_start( GTK_BOX( vbox_normal ), radio2, FALSE, FALSE, 0 );
 
-		gtk_list_store_append( store, &iter );
-		gtk_list_store_set( store, &iter, 0, "320 x 240", -1 );
-		gtk_list_store_append( store, &iter );
-		gtk_list_store_set( store, &iter, 0, "400 x 300", -1 );
-		gtk_list_store_append( store, &iter );
-		gtk_list_store_set( store, &iter, 0, "512 x 384", -1 );
-		gtk_list_store_append( store, &iter );
-		gtk_list_store_set( store, &iter, 0, "640 x 480", -1 );
-	}
-	gtk_combo_box_set_active( GTK_COMBO_BOX( normal_combo ), 0 );
+	/* Video Size */
+	frame = gtk_frame_new( NULL );
+	gtk_box_pack_start( GTK_BOX( hbox ), frame, TRUE, TRUE, 0 );
 
-	vbox_wide = gtk_vbox_new( FALSE, 0 );
-	gtk_box_pack_start (GTK_BOX(hbox), vbox_wide, FALSE, FALSE, 0 );
+	label = gtk_label_new( _("<b>Video Size</b>") );
+	gtk_label_set_use_markup( GTK_LABEL( label ), TRUE );
+	gtk_frame_set_label_widget( GTK_FRAME( frame ), label );
 
-	radio2 = gtk_radio_button_new_with_mnemonic_from_widget(GTK_RADIO_BUTTON( radio1 ), _("Widescreen 16:9") );
-	gtk_box_pack_start( GTK_BOX( vbox_wide ), radio2, FALSE, FALSE, 0 );
+	alignment = gtk_alignment_new(0.5, 0.5, 0.5, 0.5);
+	gtk_container_add (GTK_CONTAINER (frame), alignment);
+	gtk_alignment_set_padding (GTK_ALIGNMENT (alignment), 0, 0, 5, 5);
 
-	wide_combo = _gtk_combo_box_new_text(FALSE);
-	gtk_box_pack_start( GTK_BOX( vbox_wide ), wide_combo, FALSE, FALSE, 0 );
-	
+	vbox_normal = gtk_vbox_new( FALSE, 0 );
+	gtk_container_add (GTK_CONTAINER (alignment), vbox_normal);
+
+	video_size_combo = _gtk_combo_box_new_text(FALSE);
+	gtk_box_pack_start( GTK_BOX( vbox_normal ), video_size_combo, FALSE, FALSE, 0 );
 	{
 		GtkTreeIter   iter;
-		GtkListStore *store = GTK_LIST_STORE( gtk_combo_box_get_model(GTK_COMBO_BOX( wide_combo ) ) );
+		GtkListStore *store = GTK_LIST_STORE( gtk_combo_box_get_model(GTK_COMBO_BOX( video_size_combo ) ) );
 
 		gtk_list_store_append( store, &iter );
-		gtk_list_store_set( store, &iter, 0, "320 x 180", -1 );
+		gtk_list_store_set( store, &iter, 0, "320 x 240", -1 );
 		gtk_list_store_append( store, &iter );
-		gtk_list_store_set( store, &iter, 0, "400 x 225", -1 );
+		gtk_list_store_set( store, &iter, 0, "352 x 288", -1 );
 		gtk_list_store_append( store, &iter );
-		gtk_list_store_set( store, &iter, 0, "512 x 288", -1 );
+		gtk_list_store_set( store, &iter, 0, "400 x 300", -1 );
+		gtk_list_store_append( store, &iter );
+		gtk_list_store_set( store, &iter, 0, "512 x 384", -1 );
 		gtk_list_store_append( store, &iter );
 		gtk_list_store_set( store, &iter, 0, "640 x 360", -1 );
 	}
-	gtk_combo_box_set_active( GTK_COMBO_BOX( wide_combo ), 0 );
-	g_signal_connect( G_OBJECT( normal_combo ), "changed", G_CALLBACK( img_export_flv_changed ), radio1 );
-	g_signal_connect( G_OBJECT( wide_combo ), "changed", G_CALLBACK( img_export_flv_changed ), radio2 );
+	gtk_combo_box_set_active( GTK_COMBO_BOX( video_size_combo ), 0 );
 
 	frame = gtk_frame_new( NULL );
 	gtk_box_pack_start( GTK_BOX( vbox ), frame, FALSE, FALSE, 0 );
@@ -1538,27 +1608,32 @@
 	img->export_fps = 30;
 	filename = gtk_entry_get_text( entry );
 
-	/* Any additional calculation can be placed here. */
+	/* The -aspect parameter for FLV format seems to be ignored by ffmpeg */
 	if( gtk_toggle_button_get_active( GTK_TOGGLE_BUTTON( radio1 ) ) )
 	{
-		switch(gtk_combo_box_get_active(GTK_COMBO_BOX(normal_combo)) )
+		switch(gtk_combo_box_get_active(GTK_COMBO_BOX(video_size_combo)) )
 		{
 			case 0:
 			width  = 320;
 			height = 240;
 			break;
-
+		
 			case 1:
+			width  = 352;
+			height = 288;
+			break;
+
+			case 2:
 			width  = 400;
 			height = 300;
 			break;
 
-			case 2:
+			case 3:
 			width  = 512;
 			height = 384;
 			break;
 
-			case 3:
+			case 4:
 			width  = 640;
 			height = 480;
 			break;
@@ -1566,24 +1641,29 @@
 	}
 	else
 	{
-		switch(gtk_combo_box_get_active(GTK_COMBO_BOX(wide_combo)) )
+		switch(gtk_combo_box_get_active(GTK_COMBO_BOX(video_size_combo)) )
 		{
 			case 0:
-			width  = 320;
-			height = 180;
+			width  = 426;
+			height = 240;
 			break;
-
+		
 			case 1:
-			width  = 400;
-			height = 225;
+			width  = 512;
+			height = 288;
 			break;
 
 			case 2:
-			width  = 512;
-			height = 288;
+			width  = 534;
+			height = 300;
 			break;
 
 			case 3:
+			width  = 682;
+			height = 384;
+			break;
+
+			case 4:
 			width  = 640;
 			height = 360;
 			break;
@@ -1597,11 +1677,11 @@
 	}
 
 	cmd_line = g_strdup_printf( "ffmpeg -f image2pipe -vcodec ppm -r %.02f "
-								"-b %dk -s %dx%d -i pipe: <#AUDIO#> -f flv "
-								"-vcodec flv -acodec libmp3lame -ab 56000 "
+								"-i pipe: <#AUDIO#> -f flv -s %dx%d "
+								"-vcodec flv -b %dk -acodec libmp3lame -ab 56000 "
 								"-ar 22050 -ac 1 -y \"%s.flv\"",
-								img->export_fps, qualities[i],
-								width, height, filename );
+								img->export_fps, width, height,
+								qualities[i], filename );
 	img->export_cmd_line = cmd_line;
 
 	/* Initiate stage 2 of export - audio processing */
@@ -1620,9 +1700,9 @@
 	GtkWidget      *vbox;
 
 	/* Additional options - 3GP  only */
-	GtkWidget *frame1, *frame2;
+	GtkWidget *frame1, *alignment;
 	GtkWidget *label;
-	GtkWidget *hbox;
+	GtkWidget *hbox, *vbox_normal;
 	GtkWidget *normal_combo;
 	gint       width, height;
 
@@ -1641,14 +1721,21 @@
 	gtk_container_add( GTK_CONTAINER( vbox ), hbox );
 	
 	frame1 = gtk_frame_new( NULL );
-	gtk_box_pack_start( GTK_BOX( hbox ), frame1, FALSE, FALSE, 0 );
+	gtk_box_pack_start( GTK_BOX( hbox ), frame1, FALSE, TRUE, 0 );
 
 	label = gtk_label_new( _("<b>Video Size</b>") );
 	gtk_label_set_use_markup( GTK_LABEL( label ), TRUE );
 	gtk_frame_set_label_widget( GTK_FRAME( frame1 ), label );
 
+	alignment = gtk_alignment_new(0, 0, 0.5, 0.5);
+	gtk_container_add (GTK_CONTAINER (frame1), alignment);
+	gtk_alignment_set_padding (GTK_ALIGNMENT (alignment), 5, 5, 5, 5);
+
+	vbox_normal = gtk_vbox_new( FALSE, 0 );
+	gtk_container_add (GTK_CONTAINER (alignment), vbox_normal);
+
 	normal_combo = _gtk_combo_box_new_text(FALSE);
-	gtk_container_add (GTK_CONTAINER (frame1), normal_combo);
+	gtk_box_pack_start( GTK_BOX( vbox_normal ), normal_combo, FALSE, FALSE, 0 );
 	{
 		GtkTreeIter   iter;
 		GtkListStore *store = GTK_LIST_STORE( gtk_combo_box_get_model(GTK_COMBO_BOX( normal_combo ) ) );
@@ -1717,8 +1804,3 @@
 /* ****************************************************************************
  * End exporters
  * ************************************************************************* */
-
-static void img_export_flv_changed( GtkComboBox   *combo, GtkWidget *radio )
-{
-	gtk_toggle_button_set_active( GTK_TOGGLE_BUTTON( radio ), TRUE );
-}
