diff -Nuar kdelibs-orig//arts/CMakeLists.txt kdelibs/arts/CMakeLists.txt
--- kdelibs-orig//arts/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/arts/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,17 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+if( ARTS_FOUND )
+  add_subdirectory( kde )
+  add_subdirectory( message )
+endif( ARTS_FOUND )
+
+add_subdirectory( knotify )
diff -Nuar kdelibs-orig//arts/kde/CMakeLists.txt kdelibs/arts/kde/CMakeLists.txt
--- kdelibs-orig//arts/kde/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/arts/kde/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,69 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${ARTS_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${ARTS_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kplayobject.h kplayobjectfactory.h kartsfloatwatch.h
+    ${CMAKE_CURRENT_BINARY_DIR}/artskde.h kartsdispatcher.h
+    kaudiorecordstream.h kaudioplaystream.h kartsserver.h
+    kvideowidget.h kaudiomanagerplay.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/arts )
+
+
+##### artskde ###################################
+
+set( target artskde )
+
+set( ${target}_SRCS
+  artskde.cc kioinputstream_impl.cpp kplayobject.cc
+  kplayobjectfactory.cc kartsfloatwatch.cpp kartsdispatcher.cc
+  kaudiorecordstream.cpp kaudioplaystream.cpp kartsserver.cpp
+  kdatarequest_impl.cpp kaudioconverter.cc kvideowidget.cpp
+  kplayobjectcreator.cc kaudiomanagerplay.cpp
+)
+
+add_custom_command(
+  OUTPUT artskde.cc artskde.h
+  COMMAND ${ARTS_MCOPIDL_EXECUTABLE}
+  ARGS -I${ARTS_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR}/artskde.idl
+  DEPENDS artskde.idl
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.2.0
+  LINK kio-shared mcop artsflow_idl kmedia2_idl soundserver_idl artsflow qtmcop
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//arts/knotify/CMakeLists.txt kdelibs/arts/knotify/CMakeLists.txt
--- kdelibs-orig//arts/knotify/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/arts/knotify/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,58 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${ARTS_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/arts/kde
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${ARTS_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES knotify.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### knotify ###################################
+
+set( target knotify )
+
+set( ${target}_SRCS
+  knotify.cpp knotify.skel
+)
+
+if( ARTS_FOUND )
+  set( LIBS artskde-shared )
+else( ARTS_FOUND )
+  set( LIBS kdeui-shared )
+endif( ARTS_FOUND )
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK ${LIBS}
+  DEPENDENCIES dcopidl
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//arts/message/CMakeLists.txt kdelibs/arts/message/CMakeLists.txt
--- kdelibs-orig//arts/message/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/arts/message/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,40 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### artsmessage ###############################
+
+set( target artsmessage )
+
+set( ${target}_SRCS
+  artsmessage.cc
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdeui-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//cmake/modules/FindQt.cmake kdelibs/cmake/modules/FindQt.cmake
--- kdelibs-orig//cmake/modules/FindQt.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/FindQt.cmake	2010-10-25 01:13:33.000000000 +0300
@@ -0,0 +1,92 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+macro( __tde_internal_find_qt_program __progname __output )
+  find_program( ${__output}
+    NAMES ${__progname}
+    HINTS ${QTDIR}/bin $ENV{QTDIR}/bin
+    PATHS ${BINDIR} )
+  if( NOT ${__output} )
+    tde_message_fatal( "${__progname} are NOT found.\n Please check if Qt are correctly installed." )
+  endif( NOT ${__output} )
+endmacro( __tde_internal_find_qt_program )
+
+
+if( NOT QT_FOUND )
+
+  # we search for moc only if is not already set (by user or previous run of cmake)
+  if( NOT QT_MOC_EXECUTABLE )
+    __tde_internal_find_qt_program( moc QT_MOC_EXECUTABLE )
+  endif( NOT QT_MOC_EXECUTABLE )
+
+  message( STATUS "checking for 'Qt'")
+
+  # we run moc, to check which qt version is using
+  execute_process(
+    COMMAND ${QT_MOC_EXECUTABLE} -v
+    ERROR_VARIABLE __output
+    RESULT_VARIABLE __result
+    ERROR_STRIP_TRAILING_WHITESPACE )
+
+  # parse moc response, to extract Qt version
+  if( __result EQUAL 1 )
+    string( REGEX MATCH "^.*Qt (.+)\\)$" __dummy  "${__output}" )
+    set( __version  "${CMAKE_MATCH_1}" )
+    if( NOT __version )
+      tde_message_fatal( "Invalid response from moc:\n ${__output}" )
+    endif( NOT __version )
+  else( __result EQUAL 1 )
+    tde_message_fatal( "Unable to run moc!\n Qt are correctly installed?\n LD_LIBRARY_PATH are correctly set?" )
+  endif( __result EQUAL 1 )
+
+  # search for uic
+  __tde_internal_find_qt_program( uic QT_UIC_EXECUTABLE )
+
+  # try to find path to qt.h
+  # we assume that this path is Qt's include path
+  find_path( QT_INCLUDE_DIRS qt.h
+    ${QT_INCLUDE_DIRS}
+    ${QTDIR}/include
+    $ENV{QTDIR}/include )
+
+  if( NOT QT_INCLUDE_DIRS )
+
+    tde_message_fatal(
+ "Unable to find qt.h!
+ Qt are correctly installed?
+ Try to set QT_INCLUDE_DIRS manually.
+ Example: cmake -DQT_INCLUDE_DIRS=/usr/qt/3/include" )
+
+  endif( NOT QT_INCLUDE_DIRS )
+
+  # try to find libqt-mt.so
+  # we assume that this is Qt's libraries path
+  find_path( QT_LIBRARY_DIRS libqt-mt.so
+    ${QT_LIBRARY_DIRS}
+    ${QTDIR}/lib
+    $ENV{QTDIR}/lib )
+
+  if( NOT QT_LIBRARY_DIRS )
+
+    tde_message_fatal(
+ "Unable to find libqt-mt.so!
+ Qt are correctly installed?
+ Try to set QT_LIBRARY_DIRS manually.
+ Example: cmake -DQT_LIBRARY_DIRS=/usr/qt/3/lib" )
+
+  endif( NOT QT_LIBRARY_DIRS )
+
+  message( STATUS "  found Qt, version ${__version}" )
+  set( QT_FOUND true CACHE INTERNAL QT_FOUND FORCE )
+  set( QT_LIBRARIES "qt-mt" CACHE INTERNAL QT_LIBRARIES FORCE )
+  set( QT_DEFINITIONS "-DQT_NO_ASCII_CAST -DQT_CLEAN_NAMESPACE -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION" CACHE INTERNAL QT_DEFINITIONS FORCE )
+
+endif( NOT QT_FOUND )
diff -Nuar kdelibs-orig//cmake/modules/FindTQt.cmake kdelibs/cmake/modules/FindTQt.cmake
--- kdelibs-orig//cmake/modules/FindTQt.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/FindTQt.cmake	2010-10-25 01:13:46.000000000 +0300
@@ -0,0 +1,20 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+pkg_search_module( TQT TQt )
+
+# find tmoc, a simple TQt wrapper over moc
+if( NOT TQT_TMOC_EXECUTABLE )
+  find_program( TQT_TMOC_EXECUTABLE
+    NAMES tmoc
+    HINTS ${TQTDIR}/bin $ENV{TQTDIR}/bin
+    PATHS ${BINDIR} )
+endif( NOT TQT_TMOC_EXECUTABLE )
diff -Nuar kdelibs-orig//cmake/modules/TDEMacros.cmake kdelibs/cmake/modules/TDEMacros.cmake
--- kdelibs-orig//cmake/modules/TDEMacros.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/TDEMacros.cmake	2010-11-21 22:34:15.000000000 +0200
@@ -0,0 +1,833 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+include( KDE3Macros ) # we will need this module for a while
+
+
+#################################################
+#####
+##### tde_message_fatal
+
+macro( tde_message_fatal )
+  message( FATAL_ERROR
+    "#################################################\n"
+    " ${ARGV}\n"
+    "#################################################" )
+endmacro( tde_message_fatal )
+
+
+#################################################
+#####
+##### tde_install_icons( <icons...> THEME <svgicons> DESTINATION <destdir> )
+##### default theme: hicolor
+##### default destination: ${SHARE_INSTALL_DIR}/icons
+
+macro( tde_install_icons )
+
+  # clearing
+  unset( _dest )
+  unset( _req_theme )
+  unset( _icons )
+  set( _var _icons )
+
+  # parse all arguments
+  foreach( _arg ${ARGV} )
+    # directive DESTINATION
+    if( _arg STREQUAL "DESTINATION" )
+      set( _var _dest )
+      set( _directive 1 )
+    endif( _arg STREQUAL "DESTINATION" )
+    # directive THEME
+    if( _arg STREQUAL "THEME" )
+      set( _var _req_theme )
+      set( _directive 1 )
+    endif( _arg STREQUAL "THEME" )
+    # collect data
+    if( _directive )
+      unset( _directive )
+    else( _directive )
+      set( ${_var} ${${_var}} ${_arg} )
+      set( _var _icons )
+    endif( _directive )
+  endforeach( _arg )
+
+  #defaults
+  if( NOT _icons )
+    set( _icons "*" )
+  endif( NOT _icons )
+  if( NOT _dest )
+    set( _dest "${ICON_INSTALL_DIR}" )
+  endif( NOT _dest )
+
+  foreach( _icon ${_icons} )
+    unset( _theme ) # clearing
+
+    file(GLOB _icon_files *-${_icon}.png _icon_files *-${_icon}.svg* )
+    foreach( _icon_file ${_icon_files} )
+      # FIXME need a review
+      string( REGEX MATCH "^.*/([a-zA-Z][a-zA-Z])([0-9a-zA-Z]+)\\-([a-z]+)\\-(.+)$" _dummy  "${_icon_file}" )
+      set( _type  "${CMAKE_MATCH_1}" )
+      set( _size  "${CMAKE_MATCH_2}" )
+      set( _group "${CMAKE_MATCH_3}" )
+      set( _name  "${CMAKE_MATCH_4}" )
+
+      # we must ignore invalid icon names
+      if( _type AND _size AND _group AND _name )
+
+        # autodetect theme
+        if( NOT _req_theme )
+          if( "${_type}" STREQUAL "cr" )
+            set( _theme crystalsvg )
+          elseif( "${_type}" STREQUAL "lo" )
+            set( _theme locolor )
+          endif( "${_type}" STREQUAL "cr" )
+          # defaulting
+          if( NOT _theme )
+            set( _theme hicolor )
+          endif( NOT _theme )
+        else( NOT _req_theme )
+          set( _theme ${_req_theme} )
+        endif( NOT _req_theme )
+
+        # fix "group" name
+        if( "${_group}" STREQUAL "mime" )
+          set( _group  "mimetypes" )
+        endif( "${_group}" STREQUAL "mime" )
+        if( "${_group}" STREQUAL "filesys" )
+          set( _group  "filesystems" )
+        endif( "${_group}" STREQUAL "filesys" )
+        if( "${_group}" STREQUAL "device" )
+          set( _group  "devices" )
+        endif( "${_group}" STREQUAL "device" )
+        if( "${_group}" STREQUAL "app" )
+          set( _group  "apps" )
+        endif( "${_group}" STREQUAL "app" )
+        if( "${_group}" STREQUAL "action" )
+          set( _group  "actions" )
+        endif( "${_group}" STREQUAL "action" )
+
+        if( "${_size}" STREQUAL "sc" )
+          install( FILES ${_icon_file} DESTINATION ${_dest}/${_theme}/scalable/${_group}/ RENAME ${_name} )
+        else( "${_size}" STREQUAL "sc" )
+          install( FILES ${_icon_file} DESTINATION ${_dest}/${_theme}/${_size}x${_size}/${_group}/ RENAME ${_name} )
+        endif( "${_size}" STREQUAL "sc" )
+
+      endif( _type AND _size AND _group AND _name )
+
+    endforeach( _icon_file )
+  endforeach( _icon )
+
+endmacro( tde_install_icons )
+
+
+#################################################
+#####
+##### tde_add_lut( <source> <result> [depends] )
+##### default depends: source
+
+macro( tde_add_lut _src _lut _dep )
+  set( create_hash_table ${CMAKE_SOURCE_DIR}/kjs/create_hash_table )
+  if( NOT _dep )
+    set( _dep ${_src} )
+  endif( NOT _dep )
+  add_custom_command( OUTPUT ${_lut}
+    COMMAND perl ARGS ${create_hash_table} ${CMAKE_CURRENT_SOURCE_DIR}/${_src} -i > ${_lut}
+    DEPENDS ${_src} )
+  set_source_files_properties( ${_dep} PROPERTIES OBJECT_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${_lut} )
+  unset( _dep )
+endmacro( tde_add_lut )
+
+
+#################################################
+#####
+##### tde_add_luts( <sources...> )
+
+macro( tde_add_luts )
+  foreach( _src ${ARGV} )
+    get_filename_component( _lut ${_src} NAME_WE )
+    set( _lut "${_lut}.lut.h" )
+    tde_add_lut( ${_src} ${_lut} ${_src} )
+  endforeach( _src )
+endmacro( tde_add_luts )
+
+
+#################################################
+#####
+##### tde_install_la_file( <target> <destination> )
+
+macro( tde_install_la_file _target _destination )
+
+  get_target_property( _target_location ${_target} LOCATION )
+  get_filename_component( _laname ${_target_location} NAME_WE )
+  get_filename_component( _soname ${_target_location} NAME )
+  set( _laname ${CMAKE_CURRENT_BINARY_DIR}/${_laname}.la )
+
+  file( WRITE ${_laname}
+"# ${_laname} - a libtool library file, generated by cmake
+# The name that we can dlopen(3).
+dlname='${_soname}'
+# Names of this library
+library_names='${_soname} ${_soname} ${_soname}'
+# The name of the static archive
+old_library=''
+# Libraries that this one depends upon.
+dependency_libs=''
+# Version information.\ncurrent=0\nage=0\nrevision=0
+# Is this an already installed library?\ninstalled=yes
+# Should we warn about portability when linking against -modules?\nshouldnotlink=yes
+# Files to dlopen/dlpreopen\ndlopen=''\ndlpreopen=''
+# Directory that this library needs to be installed in:
+libdir='${_destination}'
+" )
+
+  install( FILES ${_laname} DESTINATION ${_destination} )
+
+endmacro( tde_install_la_file )
+
+
+#################################################
+#####
+##### tde_add_ui_files
+
+macro( tde_add_ui_files _sources )
+  foreach( _ui_file ${ARGN} )
+
+    get_filename_component( _ui_basename ${_ui_file} NAME_WE )
+    get_filename_component( _ui_absolute_path ${_ui_file} ABSOLUTE )
+
+    list( APPEND ${_sources} ${_ui_basename}.cpp )
+
+    add_custom_command( OUTPUT ${_ui_basename}.h ${_ui_basename}.cpp
+      COMMAND ${CMAKE_COMMAND}
+        -DQT_UIC_EXECUTABLE:FILEPATH=${QT_UIC_EXECUTABLE}
+        -DTDE_QTPLUGINS_DIR:FILEPATH=${TDE_QTPLUGINS_DIR}
+        -DUI_FILE:FILEPATH=${_ui_absolute_path}
+        -P ${CMAKE_MODULE_PATH}/tde_uic.cmake
+      COMMAND ${QT_MOC_EXECUTABLE} ${_ui_basename}.h >> ${_ui_basename}.cpp
+      DEPENDS ${_ui_absolute_path} )
+
+  endforeach( _ui_file )
+endmacro( tde_add_ui_files )
+
+
+#################################################
+#####
+##### tde_automoc
+
+macro( tde_automoc )
+  foreach( _src_file ${ARGN} )
+
+    get_filename_component( _src_file "${_src_file}" ABSOLUTE )
+
+    if( EXISTS "${_src_file}" )
+
+      # read source file and check if have moc include
+      file( READ "${_src_file}" _src_content )
+      string( REGEX MATCHALL "#include +[^ ]+\\.moc[\">]" _moc_includes "${_src_content}" )
+
+      # found included moc(s)?
+      if( _moc_includes )
+        foreach( _moc_file ${_moc_includes} )
+
+          # extracting moc filename
+          string( REGEX MATCH "[^ <\"]+\\.moc" _moc_file "${_moc_file}" )
+          set( _moc_file "${CMAKE_CURRENT_BINARY_DIR}/${_moc_file}" )
+
+          # create header filename
+          get_filename_component( _src_path "${_src_file}" PATH )
+          get_filename_component( _header_file "${_moc_file}" NAME_WE )
+          set( _header_file "${_src_path}/${_header_file}.h" )
+
+          # moc-ing header
+          add_custom_command( OUTPUT ${_moc_file}
+            COMMAND ${TQT_TMOC_EXECUTABLE} ${_header_file} -o ${_moc_file}
+            DEPENDS ${_header_file} )
+
+          # create dependency between source file and moc file
+          set_property( SOURCE ${_src_file} APPEND PROPERTY OBJECT_DEPENDS ${_moc_file} )
+
+        endforeach( _moc_file )
+
+      endif( _moc_includes )
+
+    endif( EXISTS "${_src_file}" )
+
+  endforeach( _src_file )
+endmacro( tde_automoc )
+
+
+#################################################
+#####
+##### __tde_internal_process_sources
+
+macro( __tde_internal_process_sources _sources )
+
+  unset( ${_sources} )
+
+  foreach( _arg ${ARGN} )
+    get_filename_component( _ext ${_arg} EXT )
+    get_filename_component( _name ${_arg} NAME_WE )
+    get_filename_component( _path ${_arg} PATH )
+
+    # if not path, set it to "."
+    if( NOT _path )
+      set( _path "./" )
+    endif( NOT _path )
+
+    # handle .ui files
+    if( ${_ext} STREQUAL ".ui" )
+      tde_add_ui_files( ${_sources} ${_arg} )
+
+    # handle .skel files
+    elseif( ${_ext} STREQUAL ".skel" )
+      kde3_add_dcop_skels( ${_sources} ${_name}.h )
+
+    # handle .stub files
+    elseif( ${_ext} STREQUAL ".stub" )
+      kde3_add_dcop_stubs( ${_sources} ${_path}/${_name}.h )
+
+    # handle .kcfgc files
+    elseif( ${_ext} STREQUAL ".kcfgc" )
+      kde3_add_kcfg_files( ${_sources} ${_arg} )
+
+    # handle any other files
+    else( ${_ext} STREQUAL ".ui" )
+      list(APPEND ${_sources} ${_arg} )
+    endif( ${_ext} STREQUAL ".ui" )
+  endforeach( _arg )
+
+endmacro( __tde_internal_process_sources )
+
+
+#################################################
+#####
+##### tde_install_libtool_file
+
+macro( tde_install_libtool_file _target _destination )
+
+  get_target_property( _target_location ${_target} LOCATION )
+
+  # get name of target
+  get_filename_component( _name ${_target_location} NAME_WE )
+
+  # get .la name
+  set( _laname ${_name}.la )
+
+  # get .so name
+  get_filename_component( _soname ${_target_location} NAME )
+
+  # get version of target
+  get_target_property( _target_version ${_target} VERSION )
+  get_target_property( _target_soversion ${_target} SOVERSION )
+
+  # we have so version
+  if( _target_version )
+    set( _library_name_1 "${_soname}.${_target_version}" )
+    set( _library_name_2 "${_soname}.${_target_soversion}" )
+    set( _library_name_3 "${_soname}" )
+
+    string( REGEX MATCH "^([0-9]+)\\.([0-9]+)\\.([0-9]+)$" _dummy  "${_target_version}" )
+    set( _version_current  "${CMAKE_MATCH_1}" )
+    set( _version_age  "${CMAKE_MATCH_2}" )
+    set( _version_revision "${CMAKE_MATCH_3}" )
+
+  # we have no so version (module?)
+  else( _target_version )
+    set( _library_name_1 "${_soname}" )
+    set( _library_name_2 "${_soname}" )
+    set( _library_name_3 "${_soname}" )
+    set( _version_current  "0" )
+    set( _version_age  "0" )
+    set( _version_revision "0" )
+  endif( _target_version )
+
+  if( IS_ABSOLUTE ${_destination} )
+    set( _libdir "${_destination}" )
+  else( IS_ABSOLUTE ${_destination} )
+    set( _libdir "${CMAKE_INSTALL_PREFIX}/${_destination}" )
+  endif( IS_ABSOLUTE ${_destination} )
+
+  configure_file( ${CMAKE_SOURCE_DIR}/cmake/modules/template_libtool_file.cmake "${_laname}" @ONLY )
+
+  install( FILES "${CMAKE_CURRENT_BINARY_DIR}/${_laname}" DESTINATION ${_destination} )
+
+endmacro( tde_install_libtool_file )
+
+
+#################################################
+#####
+##### tde_add_library
+
+macro( tde_add_library _arg_target )
+
+  unset( _target )
+  unset( _type )
+  unset( _static_pic )
+  unset( _automoc )
+  unset( _no_libtool_file )
+  unset( _no_export )
+  unset( _version )
+  unset( _sources )
+  unset( _destination )
+  unset( _embed )
+  unset( _link )
+  unset( _dependencies )
+  unset( _storage )
+
+  set( _shouldnotlink no )
+
+  foreach( _arg ${ARGV} )
+
+    # this variable help us to skip
+    # storing unapropriate values (i.e. directives)
+    unset( _skip_store )
+
+    # found one of directives: "SHARED", "STATIC", "MODULE"
+    if( "${_arg}" STREQUAL "SHARED" OR "${_arg}" STREQUAL "STATIC" OR "${_arg}" STREQUAL "MODULE" )
+      set( _skip_store 1 )
+      set( _type "${_arg}" )
+    endif( "${_arg}" STREQUAL "SHARED" OR "${_arg}" STREQUAL "STATIC" OR "${_arg}" STREQUAL "MODULE" )
+
+    # found directive "STATIC_PIC"
+    if( "${_arg}" STREQUAL "STATIC_PIC" )
+      set( _skip_store 1 )
+      set( _type "STATIC" )
+      set( _static_pic 1 )
+    endif( "${_arg}" STREQUAL "STATIC_PIC" )
+
+    # found directive "AUTOMOC"
+    if( "${_arg}" STREQUAL "AUTOMOC" )
+      set( _skip_store 1 )
+      set( _automoc 1 )
+    endif( "${_arg}" STREQUAL "AUTOMOC" )
+
+    # found directive "NO_LIBTOOL_FILE"
+    if( "${_arg}" STREQUAL "NO_LIBTOOL_FILE" )
+      set( _skip_store 1 )
+      set( _no_libtool_file 1 )
+    endif( "${_arg}" STREQUAL "NO_LIBTOOL_FILE" )
+
+    # found directive "NO_EXPORT"
+    if( "${_arg}" STREQUAL "NO_EXPORT" )
+      set( _skip_store 1 )
+      set( _no_export 1 )
+    endif( "${_arg}" STREQUAL "NO_EXPORT" )
+
+    # found directive "VERSION"
+    if( "${_arg}" STREQUAL "VERSION" )
+      set( _skip_store 1 )
+      set( _storage "_version" )
+    endif( "${_arg}" STREQUAL "VERSION" )
+
+    # found directive "SOURCES"
+    if( "${_arg}" STREQUAL "SOURCES" )
+      set( _skip_store 1 )
+      set( _storage "_sources" )
+    endif( "${_arg}" STREQUAL "SOURCES" )
+
+    # found directive "EMBED"
+    if( "${_arg}" STREQUAL "EMBED" )
+      set( _skip_store 1 )
+      set( _storage "_embed" )
+    endif( "${_arg}" STREQUAL "EMBED" )
+
+    # found directive "LINK"
+    if( "${_arg}" STREQUAL "LINK" )
+      set( _skip_store 1 )
+      set( _storage "_link" )
+    endif( "${_arg}" STREQUAL "LINK" )
+
+    # found directive "DEPENDENCIES"
+    if( "${_arg}" STREQUAL "DEPENDENCIES" )
+      set( _skip_store 1 )
+      set( _storage "_dependencies" )
+    endif( "${_arg}" STREQUAL "DEPENDENCIES" )
+
+    # found directive "DESTINATION"
+    if( "${_arg}" STREQUAL "DESTINATION" )
+      set( _skip_store 1 )
+      set( _storage "_destination" )
+      unset( ${_storage} )
+    endif( "${_arg}" STREQUAL "DESTINATION" )
+
+    # storing value
+    if( _storage AND NOT _skip_store )
+      list( APPEND ${_storage} ${_arg} )
+      list( REMOVE_DUPLICATES ${_storage} )
+    endif( _storage AND NOT _skip_store )
+
+  endforeach( _arg )
+
+  # if no type is set, we choose one
+  # based on BUILD_SHARED_LIBS
+  if( NOT _type )
+    if( BUILD_SHARED_LIBS )
+      set( _type "SHARED" )
+    else( BUILD_SHARED_LIBS )
+      set( _type "STATIC" )
+    endif( BUILD_SHARED_LIBS )
+  endif( NOT _type )
+
+  # change target name, based on type
+  string( TOLOWER "${_type}" _type_lower )
+  set( _target "${_arg_target}-${_type_lower}" )
+
+  # create variables like "LIB_xxx" for convenience
+  if( ${_type} STREQUAL "SHARED" )
+    string( TOUPPER "${_arg_target}" _tmp )
+    set( LIB_${_tmp} ${_target} CACHE INTERNAL LIB_${tmp} FORCE )
+  endif( ${_type} STREQUAL "SHARED" )
+
+  # disallow target without sources
+  if( NOT _sources )
+    message( FATAL_ERROR "\nTarget [$_target] have no sources." )
+  endif( NOT _sources )
+
+  # processing different types of sources
+  __tde_internal_process_sources( _sources ${_sources} )
+
+  # set automoc
+  if( _automoc )
+    tde_automoc( ${_sources} )
+  endif( _automoc )
+
+  # add target
+  add_library( ${_target} ${_type} ${_sources} )
+
+  # we assume that modules have no prefix and no version
+  # also, should not link
+  if( ${_type} STREQUAL "MODULE" )
+    set_target_properties( ${_target} PROPERTIES PREFIX "" )
+    unset( _version )
+    set( _shouldnotlink yes )
+  endif( ${_type} STREQUAL "MODULE" )
+
+  # set real name of target
+  set_target_properties( ${_target} PROPERTIES OUTPUT_NAME ${_arg_target} )
+
+  # set -fPIC flag for static libraries
+  if( _static_pic )
+    set_target_properties( ${_target} PROPERTIES COMPILE_FLAGS -fPIC )
+  endif( _static_pic )
+
+  # set version
+  if( _version )
+    string( REGEX MATCH "^[0-9]+" _soversion ${_version} )
+    set_target_properties( ${_target} PROPERTIES VERSION ${_version} SOVERSION ${_soversion} )
+  endif( _version )
+
+  # set interface libraries (only for shared)
+  unset( _shared_libs )
+  foreach( _lib ${_link} )
+    #get_target_property( _lib_type ${_lib} TYPE )
+    #if( NOT "STATIC_LIBRARY" STREQUAL "${_lib_type}" )
+    if( NOT ${_lib} MATCHES ".+-static" )
+      list( APPEND _shared_libs ${_lib} )
+    endif( NOT ${_lib} MATCHES ".+-static" )
+    #endif( NOT "STATIC_LIBRARY" STREQUAL "${_lib_type}" )
+  endforeach( _lib )
+  target_link_libraries( ${_target} LINK_INTERFACE_LIBRARIES ${_shared_libs} )
+
+  # set embedded archives
+  if( _embed )
+    list( INSERT _link 0 -Wl,-whole-archive ${_embed} -Wl,-no-whole-archive )
+  endif( _embed )
+
+  # set link libraries
+  if( _link )
+    target_link_libraries( ${_target} ${_link} )
+  endif( _link )
+
+  # set dependencies
+  if( _dependencies )
+    add_dependencies( ${_target} ${_dependencies} )
+  endif( _dependencies )
+
+  # set destination directory
+  if( _destination )
+    if( "SHARED" STREQUAL ${_type} AND NOT _no_export )
+      # we export only shared libs (no static, no modules)
+      # also, do not export target marked as "NO_EXPORT" (usually for kdeinit)
+      install( TARGETS ${_target} DESTINATION ${_destination} EXPORT ${PROJECT_NAME} )
+    else( "SHARED" STREQUAL ${_type} AND NOT _no_export )
+      install( TARGETS ${_target} DESTINATION ${_destination} )
+    endif( "SHARED" STREQUAL ${_type} AND NOT _no_export  )
+    if( NOT "STATIC" STREQUAL ${_type} AND NOT _no_libtool_file )
+      tde_install_libtool_file( ${_target} ${_destination} )
+    endif( NOT "STATIC" STREQUAL ${_type} AND NOT _no_libtool_file )
+  endif( _destination )
+
+endmacro( tde_add_library )
+
+
+#################################################
+#####
+##### tde_add_kpart
+
+macro( tde_add_kpart _target )
+  tde_add_library( ${_target} ${ARGN} MODULE )
+endmacro( tde_add_kpart )
+
+
+#################################################
+#####
+##### tde_add_executable
+
+macro( tde_add_executable _arg_target )
+
+  unset( _target )
+  unset( _automoc )
+  unset( _setuid )
+  unset( _sources )
+  unset( _destination )
+  unset( _link )
+  unset( _dependencies )
+  unset( _storage )
+
+  foreach( _arg ${ARGV} )
+
+    # this variable help us to skip
+    # storing unapropriate values (i.e. directives)
+    unset( _skip_store )
+
+    # found directive "AUTOMOC"
+    if( "${_arg}" STREQUAL "AUTOMOC" )
+      set( _skip_store 1 )
+      set( _automoc 1 )
+    endif( "${_arg}" STREQUAL "AUTOMOC" )
+
+    # found directive "SETUID"
+    if( "${_arg}" STREQUAL "SETUID" )
+      set( _skip_store 1 )
+      set( _setuid 1 )
+    endif( "${_arg}" STREQUAL "SETUID" )
+
+    # found directive "SOURCES"
+    if( "${_arg}" STREQUAL "SOURCES" )
+      set( _skip_store 1 )
+      set( _storage "_sources" )
+    endif( "${_arg}" STREQUAL "SOURCES" )
+
+    # found directive "LINK"
+    if( "${_arg}" STREQUAL "LINK" )
+      set( _skip_store 1 )
+      set( _storage "_link" )
+    endif( "${_arg}" STREQUAL "LINK" )
+
+    # found directive "DEPENDENCIES"
+    if( "${_arg}" STREQUAL "DEPENDENCIES" )
+      set( _skip_store 1 )
+      set( _storage "_dependencies" )
+    endif( "${_arg}" STREQUAL "DEPENDENCIES" )
+
+    # found directive "DESTINATION"
+    if( "${_arg}" STREQUAL "DESTINATION" )
+      set( _skip_store 1 )
+      set( _storage "_destination" )
+      unset( ${_storage} )
+    endif( "${_arg}" STREQUAL "DESTINATION" )
+
+    # storing value
+    if( _storage AND NOT _skip_store )
+      #set( ${_storage} "${${_storage}} ${_arg}" )
+      list( APPEND ${_storage} ${_arg} )
+    endif( _storage AND NOT _skip_store )
+
+  endforeach( _arg )
+
+  set( _target "${_arg_target}" )
+
+  # disallow target without sources
+  if( NOT _sources )
+    message( FATAL_ERROR "\nTarget [$_target] have no sources." )
+  endif( NOT _sources )
+
+  # processing different types of sources
+  __tde_internal_process_sources( _sources ${_sources} )
+
+  # set automoc
+  if( _automoc )
+    tde_automoc( ${_sources} )
+  endif( _automoc )
+
+  # add target
+  add_executable( ${_target} ${_sources} )
+
+  # set link libraries
+  if( _link )
+    target_link_libraries( ${_target} ${_link} )
+  endif( _link )
+
+  # set dependencies
+  if( _dependencies )
+    add_dependencies( ${_target} ${_dependencies} )
+  endif( _dependencies )
+
+  # set destination directory
+  if( _destination )
+    if( _setuid )
+      install( TARGETS ${_target} DESTINATION ${_destination} PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE SETUID )
+    else( _setuid )
+      install( TARGETS ${_target} DESTINATION ${_destination} )
+    endif( _setuid )
+  endif( _destination )
+
+endmacro( tde_add_executable )
+
+
+#################################################
+#####
+##### tde_add_kdeinit_executable
+
+macro( tde_add_kdeinit_executable _target )
+
+  configure_file( ${CMAKE_SOURCE_DIR}/cmake/modules/template_kdeinit_executable.cmake ${_target}_kdeinit_executable.cpp COPYONLY )
+  configure_file( ${CMAKE_SOURCE_DIR}/cmake/modules/template_kdeinit_module.cmake ${_target}_kdeinit_module.cpp COPYONLY )
+
+  unset( _sources )
+  unset( _runtime_destination )
+  unset( _library_destination )
+  unset( _plugin_destination )
+
+  # default storage is _sources
+  set( _storage _sources )
+
+  # set default export to NO_EXPORT
+  set( _export "NO_EXPORT" )
+
+  foreach( _arg ${ARGN} )
+
+    # this variable help us to skip
+    # storing unapropriate values (i.e. directives)
+    unset( _skip_store )
+
+    # found directive "EXPORT"
+    if( "${_arg}" STREQUAL "EXPORT" )
+      set( _skip_store 1 )
+      unset( _export )
+    endif( "${_arg}" STREQUAL "EXPORT" )
+
+    # found directive "RUNTIME_DESTINATION"
+    if( "${_arg}" STREQUAL "RUNTIME_DESTINATION" )
+      set( _skip_store 1 )
+      set( _storage "_runtime_destination" )
+      unset( ${_storage} )
+    endif( "${_arg}" STREQUAL "RUNTIME_DESTINATION" )
+
+    # found directive "LIBRARY_DESTINATION"
+    if( "${_arg}" STREQUAL "LIBRARY_DESTINATION" )
+      set( _skip_store 1 )
+      set( _storage "_library_destination" )
+      unset( ${_storage} )
+    endif( "${_arg}" STREQUAL "LIBRARY_DESTINATION" )
+
+    # found directive "PLUGIN_DESTINATION"
+    if( "${_arg}" STREQUAL "PLUGIN_DESTINATION" )
+      set( _skip_store 1 )
+      set( _storage "_plugin_destination" )
+      unset( ${_storage} )
+    endif( "${_arg}" STREQUAL "PLUGIN_DESTINATION" )
+
+    # storing value
+    if( _storage AND NOT _skip_store )
+      list( APPEND ${_storage} ${_arg} )
+      set( _storage "_sources" )
+    endif( _storage AND NOT _skip_store )
+
+  endforeach( _arg )
+
+  # if destinations are not set, we using some defaults
+  # we assume that kdeinit executable MUST be installed
+  # (otherwise why we build it?)
+  if( NOT _runtime_destination )
+    set( _runtime_destination ${BIN_INSTALL_DIR} )
+  endif( NOT _runtime_destination )
+  if( NOT _library_destination )
+    set( _library_destination ${LIB_INSTALL_DIR} )
+  endif( NOT _library_destination )
+  if( NOT _plugin_destination )
+    set( _plugin_destination ${PLUGIN_INSTALL_DIR} )
+  endif( NOT _plugin_destination )
+
+  # create the library
+  tde_add_library( kdeinit_${_target} ${_sources} SHARED ${_export}
+    DESTINATION ${_library_destination}
+  )
+
+  # create the executable
+  tde_add_executable( ${_target}
+    SOURCES ${CMAKE_CURRENT_BINARY_DIR}/${_target}_kdeinit_executable.cpp
+    LINK kdeinit_${_target}-shared
+    DESTINATION ${_runtime_destination}
+  )
+
+  # create the plugin
+  tde_add_kpart( ${_target}
+    SOURCES ${CMAKE_CURRENT_BINARY_DIR}/${_target}_kdeinit_module.cpp
+    LINK kdeinit_${_target}-shared
+    DESTINATION ${_plugin_destination}
+  )
+
+endmacro( tde_add_kdeinit_executable )
+
+
+#################################################
+#####
+##### tde_install_symlink
+
+macro( tde_install_symlink _target _link )
+
+  # if path is relative, we must to prefix it with CMAKE_INSTALL_PREFIX
+  if( IS_ABSOLUTE "${_link}" )
+    set( _destination "${_link}" )
+  else( IS_ABSOLUTE "${_link}" )
+    set( _destination "${CMAKE_INSTALL_PREFIX}/${_link}" )
+  endif( IS_ABSOLUTE "${_link}" )
+
+  get_filename_component( _path "${_destination}" PATH )
+  if( NOT IS_DIRECTORY "\$ENV{DESTDIR}${_path}" )
+    install( CODE "file( MAKE_DIRECTORY \"\$ENV{DESTDIR}${_path}\" )" )
+  endif( NOT IS_DIRECTORY "\$ENV{DESTDIR}${_path}" )
+
+  install( CODE "execute_process( COMMAND ${CMAKE_COMMAND} -E create_symlink ${_target} \$ENV{DESTDIR}${_destination} )" )
+
+endmacro( tde_install_symlink )
+
+
+#################################################
+#####
+##### tde_install_empty_directory
+
+macro( tde_install_empty_directory _path )
+
+  # if path is relative, we must to prefix it with CMAKE_INSTALL_PREFIX
+  if( IS_ABSOLUTE "${_path}" )
+    set( _destination "${_path}" )
+  else( IS_ABSOLUTE "${_path}" )
+    set( _destination "${CMAKE_INSTALL_PREFIX}/${_path}" )
+  endif( IS_ABSOLUTE "${_path}" )
+
+  install( CODE "file( MAKE_DIRECTORY \"\$ENV{DESTDIR}${_destination}\" )" )
+
+endmacro( tde_install_empty_directory )
+
+
+#################################################
+#####
+##### tde_conditional_add_subdirectory
+
+macro( tde_conditional_add_subdirectory _cond _path )
+
+  if( ${_cond} )
+    add_subdirectory( "${_path}" )
+  endif( ${_cond} )
+
+endmacro( tde_conditional_add_subdirectory )
diff -Nuar kdelibs-orig//cmake/modules/TDESetupPaths.cmake kdelibs/cmake/modules/TDESetupPaths.cmake
--- kdelibs-orig//cmake/modules/TDESetupPaths.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/TDESetupPaths.cmake	2010-10-28 02:37:08.000000000 +0300
@@ -0,0 +1,67 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+#################################################
+#####
+##### tde_internal_setup_path
+
+macro( _tde_internal_setup_path _path _default _comment )
+  if( DEFINED ${_path} )
+    set( ${_path} "${${_path}}" CACHE PATH "${_comment}" )
+  else( DEFINED ${_path} )
+    set( ${_path} "${_default}" )
+  endif( DEFINED ${_path} )
+endmacro( _tde_internal_setup_path )
+
+
+#################################################
+#####
+##### tde_setup_paths
+
+macro( tde_setup_paths )
+
+  # install paths
+  _tde_internal_setup_path( EXEC_INSTALL_PREFIX       "${CMAKE_INSTALL_PREFIX}"                     "Base directory for executables and libraries" )
+  _tde_internal_setup_path( SHARE_INSTALL_PREFIX      "${CMAKE_INSTALL_PREFIX}/share"               "Base directory for files which go to share/" )
+  _tde_internal_setup_path( BIN_INSTALL_DIR           "${EXEC_INSTALL_PREFIX}/bin"                  "The install dir for executables (default ${EXEC_INSTALL_PREFIX}/bin)" )
+  _tde_internal_setup_path( SBIN_INSTALL_DIR          "${EXEC_INSTALL_PREFIX}/sbin"                 "The install dir for system executables (default ${EXEC_INSTALL_PREFIX}/sbin)" )
+  _tde_internal_setup_path( LIB_INSTALL_DIR           "${EXEC_INSTALL_PREFIX}/lib${LIB_SUFFIX}"     "The subdirectory relative to the install prefix where libraries will be installed (default is ${EXEC_INSTALL_PREFIX}/lib${LIB_SUFFIX})" )
+  _tde_internal_setup_path( LIBEXEC_INSTALL_DIR       "${LIB_INSTALL_DIR}/kde3/libexec"             "The subdirectory relative to the install prefix where libraries will be installed (default is ${LIB_INSTALL_DIR}/kde3/libexec)" )
+  _tde_internal_setup_path( INCLUDE_INSTALL_DIR       "${CMAKE_INSTALL_PREFIX}/include"             "The subdirectory to the header prefix" )
+
+  _tde_internal_setup_path( CMAKE_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/cmake"               "The install dir for cmake import modules" )
+  _tde_internal_setup_path( PLUGIN_INSTALL_DIR        "${LIB_INSTALL_DIR}/kde3"                     "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/kde3)" )
+  _tde_internal_setup_path( CONFIG_INSTALL_DIR        "${SHARE_INSTALL_PREFIX}/config"              "The config file install dir" )
+  _tde_internal_setup_path( DATA_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/apps"                "The parent directory where applications can install their data" )
+  _tde_internal_setup_path( HTML_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/doc/HTML"            "The HTML install dir for documentation" )
+  _tde_internal_setup_path( ICON_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/icons"               "The icon install dir (default ${SHARE_INSTALL_PREFIX}/share/icons/)" )
+  _tde_internal_setup_path( KCFG_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/config.kcfg"         "The install dir for kconfig files" )
+  _tde_internal_setup_path( LOCALE_INSTALL_DIR        "${SHARE_INSTALL_PREFIX}/locale"              "The install dir for translations" )
+  _tde_internal_setup_path( APPS_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/applnk"              "The install dir for the application desktop files" )
+  _tde_internal_setup_path( MIME_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/mimelnk"             "The install dir for the mimetype desktop files" )
+  _tde_internal_setup_path( SERVICES_INSTALL_DIR      "${SHARE_INSTALL_PREFIX}/services"            "The install dir for service (desktop, protocol, ...) files" )
+  _tde_internal_setup_path( SERVICETYPES_INSTALL_DIR  "${SHARE_INSTALL_PREFIX}/servicetypes"        "The install dir for servicestypes desktop files" )
+  _tde_internal_setup_path( SOUND_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/sounds"              "The install dir for sound files" )
+  _tde_internal_setup_path( TEMPLATES_INSTALL_DIR     "${SHARE_INSTALL_PREFIX}/templates"           "The install dir for templates (Create new file...)" )
+  _tde_internal_setup_path( WALLPAPER_INSTALL_DIR     "${SHARE_INSTALL_PREFIX}/wallpapers"          "The install dir for wallpapers" )
+  _tde_internal_setup_path( KCONF_UPDATE_INSTALL_DIR  "${DATA_INSTALL_DIR}/kconf_update"            "The kconf_update install dir" )
+  _tde_internal_setup_path( AUTOSTART_INSTALL_DIR     "${SHARE_INSTALL_PREFIX}/autostart"           "The install dir for autostart files" )
+
+  _tde_internal_setup_path( SYSCONF_INSTALL_DIR       "${CMAKE_INSTALL_PREFIX}/etc"                 "The sysconfig install dir (default ${CMAKE_INSTALL_PREFIX}/etc)" )
+  _tde_internal_setup_path( MAN_INSTALL_DIR           "${SHARE_INSTALL_PREFIX}/man"                 "The man install dir (default ${SHARE_INSTALL_PREFIX}/man/)" )
+  _tde_internal_setup_path( INFO_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/info"                "The info install dir (default ${SHARE_INSTALL_PREFIX}/info)" )
+
+  _tde_internal_setup_path( XDG_MENU_INSTALL_DIR      "${SYSCONF_INSTALL_DIR}/xdg/menus"            "The XDG menus dir" )
+  _tde_internal_setup_path( XDG_APPS_INSTALL_DIR      "${SHARE_INSTALL_PREFIX}/applications/kde"    "The XDG apps dir" )
+  _tde_internal_setup_path( XDG_DIRECTORY_INSTALL_DIR "${SHARE_INSTALL_PREFIX}/desktop-directories" "The XDG directory" )
+  _tde_internal_setup_path( XDG_MIME_INSTALL_DIR      "${SHARE_INSTALL_PREFIX}/mime/packages"       "The install dir for the xdg mimetypes" )
+
+endmacro( tde_setup_paths )
diff -Nuar kdelibs-orig//cmake/modules/tde_uic.cmake kdelibs/cmake/modules/tde_uic.cmake
--- kdelibs-orig//cmake/modules/tde_uic.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/tde_uic.cmake	2010-11-21 19:33:28.000000000 +0200
@@ -0,0 +1,40 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+get_filename_component( _ui_basename ${UI_FILE} NAME_WE )
+
+execute_process( COMMAND ${QT_UIC_EXECUTABLE}
+  -nounload -tr tr2i18n
+  ${UI_FILE}
+  OUTPUT_VARIABLE _ui_h_content )
+
+if( _ui_h_content )
+  string( REGEX REPLACE "#ifndef " "#ifndef UI_" _ui_h_content "${_ui_h_content}" )
+  string( REGEX REPLACE "#define " "#define UI_" _ui_h_content "${_ui_h_content}" )
+  file( WRITE ${_ui_basename}.h "${_ui_h_content}" )
+endif( )
+
+if( TDE_QTPLUGINS_DIR )
+  set( L -L ${TDE_QTPLUGINS_DIR} )
+endif( )
+
+execute_process( COMMAND ${QT_UIC_EXECUTABLE}
+  -nounload -tr tr2i18n
+  ${L}
+  -impl ${_ui_basename}.h
+  ${UI_FILE}
+  OUTPUT_VARIABLE _ui_cpp_content )
+
+if( _ui_cpp_content )
+  string( REGEX REPLACE "tr2i18n\\(\"\"\\)" "QString::null" _ui_cpp_content "${_ui_cpp_content}" )
+  string( REGEX REPLACE "tr2i18n\\(\"\", \"\"\\)" "QString::null" _ui_cpp_content "${_ui_cpp_content}" )
+  file( WRITE ${_ui_basename}.cpp "#include <kdialog.h>\n#include <klocale.h>\n\n${_ui_cpp_content}" )
+endif( )
diff -Nuar kdelibs-orig//cmake/modules/template_dummy_cpp.cmake kdelibs/cmake/modules/template_dummy_cpp.cmake
--- kdelibs-orig//cmake/modules/template_dummy_cpp.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/template_dummy_cpp.cmake	2010-10-06 12:33:26.000000000 +0300
@@ -0,0 +1,5 @@
+#ifdef _AIX
+  namespace {
+  void *not_empty_file;
+  }
+#endif
diff -Nuar kdelibs-orig//cmake/modules/template_kdeinit_executable.cmake kdelibs/cmake/modules/template_kdeinit_executable.cmake
--- kdelibs-orig//cmake/modules/template_kdeinit_executable.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/template_kdeinit_executable.cmake	2010-10-06 12:33:26.000000000 +0300
@@ -0,0 +1,2 @@
+extern "C" int kdemain(int argc, char* argv[]);
+int main(int argc, char* argv[]) { return kdemain(argc,argv); }
diff -Nuar kdelibs-orig//cmake/modules/template_kdeinit_module.cmake kdelibs/cmake/modules/template_kdeinit_module.cmake
--- kdelibs-orig//cmake/modules/template_kdeinit_module.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/template_kdeinit_module.cmake	2010-10-06 12:33:26.000000000 +0300
@@ -0,0 +1,3 @@
+#include <kdemacros.h>
+extern "C" int kdemain(int argc, char* argv[]);
+extern "C" KDE_EXPORT int kdeinitmain(int argc, char* argv[]) { return kdemain(argc,argv); }
diff -Nuar kdelibs-orig//cmake/modules/template_libtool_file.cmake kdelibs/cmake/modules/template_libtool_file.cmake
--- kdelibs-orig//cmake/modules/template_libtool_file.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/cmake/modules/template_libtool_file.cmake	2010-10-07 19:11:11.000000000 +0300
@@ -0,0 +1,35 @@
+# @_laname@ - a libtool library file
+# Generated by CMake - GNU libtool
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# The name that we can dlopen(3).
+dlname='@_library_name_2@'
+
+# Names of this library.
+library_names='@_library_name_1@ @_library_name_2@ @_library_name_3@'
+
+# The name of the static archive.
+old_library=''
+
+# Libraries that this one depends upon.
+dependency_libs=''
+
+# Version information for @_name@.
+current=@_version_current@
+age=@_version_age@
+revision=@_version_revision@
+
+# Is this an already installed library?
+installed=yes
+
+# Should we warn about portability when linking against -modules?
+shouldnotlink=@_shouldnotlink@
+
+# Files to dlopen/dlpreopen
+dlopen=''
+dlpreopen=''
+
+# Directory that this library needs to be installed in:
+libdir='@_libdir@'
diff -Nuar kdelibs-orig//CMakeLists.txt kdelibs/CMakeLists.txt
--- kdelibs-orig//CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/CMakeLists.txt	2010-11-26 22:38:45.000000000 +0200
@@ -0,0 +1,822 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+cmake_minimum_required( VERSION 2.6 )
+
+
+##### general package setup #####################
+
+project( kdelibs )
+
+set( PACKAGE kdelibs )
+set( VERSION "3.5.13" )
+
+
+##### include essential cmake modules ###########
+
+include( FindPkgConfig )
+include( CheckIncludeFile )
+include( CheckSymbolExists )
+include( CheckFunctionExists )
+include( CheckCSourceCompiles )
+include( CheckTypeSize )
+include( CheckCSourceRuns )
+include( CheckLibraryExists )
+
+
+##### include our cmake modules #################
+
+set( CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules" )
+include( TDEMacros )
+include( TDESetupPaths )
+
+
+##### setup and find essential stuff ############
+
+tde_setup_paths( )
+find_package( Qt )
+find_package( TQt )
+
+
+##### user requested options ####################
+
+OPTION( KDE_MALLOC "Use own malloc implementation" OFF )
+OPTION( KDE_MALLOC_DEBUG "Enable debugging in fast malloc" OFF )
+OPTION( KDE_MALLOC_FULL "Make alloc as fast as possible" OFF )
+
+OPTION( WITH_ARTS "Build with aRts" ON )
+OPTION( WITH_ALSA "Enable ALSA support" ON )
+OPTION( WITH_LIBART "Enable libart support (for SVG icons)" OFF )
+OPTION( WITH_LIBIDN "Enable support for libidn" OFF )
+OPTION( WITH_SSL "Enable support for SSL" ON )
+OPTION( WITH_CUPS "Enable CUPS support" ON )
+OPTION( WITH_LUA "Enable LUA support" OFF )
+OPTION( WITH_TIFF "Enable tiff support" OFF )
+OPTION( WITH_JASPER "Enable jasper (jpeg2k) support" OFF )
+OPTION( WITH_OPENEXR "Enable openexr support" OFF )
+OPTION( WITH_UTEMPTER "Use utempter for utmp management" OFF )
+
+OPTION( WITH_ASPELL "Enable aspell support" OFF )
+OPTION( WITH_HSPELL "Enable hspell support" OFF )
+
+
+##### set PKG_CONFIG_PATH #######################
+
+set( ENV{PKG_CONFIG_PATH} "${PKG_CONFIG_PATH}:${PKGCONFIG_INSTALL_DIR}:${LIB_INSTALL_DIR}/pkgconfig:$ENV{PKG_CONFIG_PATH}" )
+
+
+##### check for CPU architecture ################
+
+### FIXME fast malloc is also available on x86_64 architecture?
+if( ${CMAKE_SYSTEM_PROCESSOR} MATCHES "i?86" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64" )
+  set( KDE_MALLOC_X86 1 )
+  message( STATUS "Found x86 architecture" )
+else( ${CMAKE_SYSTEM_PROCESSOR} MATCHES "i?86" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64" )
+  if( KDE_MALLOC )
+    message( FATAL_ERROR "\nKDE fast malloc is available only on x86 architecture" )
+  endif( KDE_MALLOC )
+endif( ${CMAKE_SYSTEM_PROCESSOR} MATCHES "i?86" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64" )
+
+
+##### check for operating system ################
+
+if( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" )
+  set( KDEINIT_SETUID 1 )
+  set( KDEINIT_OOM_PROTECT 1 )
+endif( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" )
+
+
+##### check for compiler capabilities ###########
+
+include( CheckCXXCompilerFlag )
+
+check_cxx_compiler_flag( -Woverloaded-virtual WOVERLOADED_VIRTUAL )
+if( WOVERLOADED_VIRTUAL )
+  set( WOVERLOADED_VIRTUAL -Woverloaded-virtual )
+endif( WOVERLOADED_VIRTUAL )
+
+check_cxx_compiler_flag( -fno-builtin NO_BUILTIN )
+if( NO_BUILTIN )
+
+endif( NO_BUILTIN )
+
+
+##### system checks #############################
+
+
+
+check_include_file( "alloca.h" HAVE_ALLOCA_H )
+check_include_file( "arpa/nameser8_compat.h" HAVE_ARPA_NAMESER8_COMPAT_H )
+check_include_file( "awe_voice.h" HAVE_AWE_VOICE_H )
+check_include_file( "Carbon/Carbon.h" HAVE_CARBON_CARBON_H )
+check_include_file( "crt_externs.h" HAVE_CRT_EXTERNS_H )
+check_include_file( "ctype.h" HAVE_CTYPE_H )
+check_include_file( "dirent.h" HAVE_DIRENT_H )
+check_include_file( "dld.h" HAVE_DLD_H )
+check_include_file( "dlfcn.h" HAVE_DLFCN_H )
+check_include_file( "dl.h" HAVE_DL_H )
+check_include_file( "float.h" HAVE_FLOAT_H )
+check_include_file( "fstab.h" HAVE_FSTAB_H )
+check_include_file( "ieeefp.h" HAVE_IEEEFP_H )
+check_include_file( "inttypes.h" HAVE_INTTYPES_H )
+check_include_file( "libutil.h" HAVE_LIBUTIL_H )
+check_include_file( "limits.h" HAVE_LIMITS_H )
+check_include_file( "linux/awe_voice.h" HAVE_LINUX_AWE_VOICE_H )
+check_include_file( "locale.h" HAVE_LOCALE_H )
+check_include_file( "machine/soundcard.h" HAVE_MACHINE_SOUNDCARD_H )
+check_include_file( "malloc.h" HAVE_MALLOC_H )
+check_include_file( "memory.h" HAVE_MEMORY_H )
+check_include_file( "mntent.h" HAVE_MNTENT_H )
+check_include_file( "ndir.h" HAVE_NDIR_H )
+check_include_file( "netinet/in.h" HAVE_NETINET_IN_H )
+check_include_file( "net/if.h" HAVE_NET_IF_H )
+check_include_file( "paths.h" HAVE_PATHS_H )
+check_include_file( "pty.h" HAVE_PTY_H )
+check_include_file( "stdint.h" HAVE_STDINT_H )
+check_include_file( "stdio.h" HAVE_STDIO_H )
+check_include_file( "stdlib.h" HAVE_STDLIB_H )
+check_include_file( "strings.h" HAVE_STRINGS_H )
+check_include_file( "string.h" HAVE_STRING_H )
+check_include_file( "sysent.h" HAVE_SYSENT_H )
+check_include_file( "sys/bitypes.h" HAVE_SYS_BITYPES_H )
+check_include_file( "sys/dir.h" HAVE_SYS_DIR_H )
+check_include_file( "sys/filio.h" HAVE_SYS_FILIO_H )
+check_include_file( "sys/mman.h" HAVE_SYS_MMAN_H )
+check_include_file( "sys/mntent.h" HAVE_SYS_MNTENT_H )
+check_include_file( "sys/mnttab.h" HAVE_SYS_MNTTAB_H )
+check_include_file( "sys/mount.h" HAVE_SYS_MOUNT_H )
+check_include_file( "sys/ndir.h" HAVE_SYS_NDIR_H )
+check_include_file( "sys/param.h" HAVE_SYS_PARAM_H )
+check_include_file( "sys/prctl.h" HAVE_SYS_PRCTL_H )
+check_include_file( "sys/select.h" HAVE_SYS_SELECT_H )
+check_include_file( "sys/soundcard.h" HAVE_SYS_SOUNDCARD_H )
+check_include_file( "sys/stat.h" HAVE_SYS_STAT_H )
+check_include_file( "sys/stropts.h" HAVE_SYS_STROPTS_H )
+check_include_file( "sys/types.h" HAVE_SYS_TYPES_H )
+check_include_file( "sys/ucred.h" HAVE_SYS_UCRED_H )
+check_include_file( "sys/xattr.h" sys/xattr.h )
+check_include_file( "termios.h" HAVE_TERMIOS_H )
+check_include_file( "termio.h" HAVE_TERMIO_H )
+check_include_file( "unistd.h" HAVE_UNISTD_H )
+check_include_file( "util.h" HAVE_UTIL_H )
+check_include_file( "values.h" HAVE_VALUES_H )
+
+# FIXME I'm not sure if test TIME_WITH_SYS_TIME are correct
+check_include_file( "sys/time.h" HAVE_SYS_TIME_H )
+check_include_file( "time.h" HAVE_TIME_H )
+if( HAVE_SYS_TIME_H AND HAVE_TIME_H )
+  set( TIME_WITH_SYS_TIME 1 )
+endif( HAVE_SYS_TIME_H AND HAVE_TIME_H )
+
+check_include_file( "valgrind/memcheck.h" HAVE_VALGRIND_MEMCHECK_H )
+check_include_file( "values.h" HAVE_VALUES_H )
+check_include_file( "X11/extensions/shape.h" HAVE_X11_EXTENSIONS_SHAPE_H )
+check_include_file( "X11/extensions/Xrandr.h" HAVE_X11_EXTENSIONS_XRANDR_H )
+check_include_file( "X11/extensions/XShm.h" HAVE_X11_EXTENSIONS_XSHM_H )
+check_include_file( "X11/ICE/ICElib.h" HAVE_X11_ICE_ICELIB_H )
+check_include_file( "/usr/src/sys/gnu/i386/isa/sound/awe_voice.h" HAVE__USR_SRC_SYS_GNU_I386_ISA_SOUND_AWE_VOICE_H )
+check_include_file( "/usr/src/sys/i386/isa/sound/awe_voice.h" HAVE__USR_SRC_SYS_I386_ISA_SOUND_AWE_VOICE_H )
+
+check_function_exists( random HAVE_RANDOM )
+check_symbol_exists( random "stdlib.h" HAVE_RANDOM_PROTO )
+
+check_function_exists( srandom HAVE_SRANDOM )
+check_symbol_exists( srandom "stdlib.h" HAVE_SRANDOM_PROTO )
+
+check_function_exists( seteuid HAVE_SETEUID )
+check_function_exists( setegid HAVE_SETEGID )
+
+check_function_exists( gethostname HAVE_GETHOSTNAME )
+check_symbol_exists( gethostname "unistd.h" HAVE_GETHOSTNAME_PROTO )
+
+check_function_exists( vsnprintf HAVE_VSNPRINTF )
+check_function_exists( snprintf HAVE_SNPRINTF )
+
+check_function_exists( setenv HAVE_SETENV )
+check_symbol_exists( setenv "stdlib.h" HAVE_SETENV_PROTO )
+
+check_function_exists( unsetenv HAVE_UNSETENV )
+check_symbol_exists( unsetenv "stdlib.h" HAVE_UNSETENV_PROTO )
+
+check_function_exists( mkdtemp HAVE_MKDTEMP )
+check_symbol_exists( mkdtemp "stdlib.h" HAVE_MKDTEMP_PROTO )
+
+check_function_exists( mkstemp HAVE_MKSTEMP )
+check_symbol_exists( mkstemp "stdlib.h" HAVE_MKSTEMP_PROTO )
+
+check_function_exists( mkstemps HAVE_MKSTEMPS )
+check_symbol_exists( mkstemps "stdlib.h" HAVE_MKSTEMPS_PROTO )
+
+check_function_exists( initgroups HAVE_INITGROUPS )
+check_symbol_exists( initgroups "grp.h" HAVE_INITGROUPS_PROTO )
+
+check_function_exists( strlcat HAVE_STRLCAT )
+check_symbol_exists( strlcat "string.h" HAVE_STRLCAT_PROTO )
+
+check_function_exists( strlcpy HAVE_STRLCPY )
+check_symbol_exists( strlcpy "string.h" HAVE_STRLCPY_PROTO )
+
+check_symbol_exists( S_ISSOCK "sys/stat.h" HAVE_S_ISSOCK )
+
+check_symbol_exists( gethostbyname2 "netdb.h" HAVE_GETHOSTBYNAME2 )
+check_symbol_exists( gethostbyname2_r "netdb.h" HAVE_GETHOSTBYNAME2_R )
+check_symbol_exists( gethostbyname_r "netdb.h" HAVE_GETHOSTBYNAME_R )
+check_symbol_exists( gai_strerror "sys/types.h;sys/socket.h;netdb.h" HAVE_GAI_STRERROR )
+check_symbol_exists( getaddrinfo "sys/types.h;sys/socket.h;netdb.h" HAVE_GETADDRINFO )
+
+check_function_exists( usleep HAVE_USLEEP )
+check_symbol_exists( usleep "unistd.h" HAVE_USLEEP_PROTO )
+
+check_function_exists( getmntinfo HAVE_GETMNTINFO )
+check_function_exists( getnameinfo HAVE_GETNAMEINFO )
+check_function_exists( getpagesize HAVE_GETPAGESIZE )
+check_function_exists( getpeereid HAVE_GETPEEREID )
+check_function_exists( getpeername HAVE_GETPEERNAME )
+check_function_exists( getprotobyname_r HAVE_GETPROTOBYNAME_R )
+check_function_exists( getpt HAVE_GETPT )
+check_function_exists( getservbyname_r HAVE_GETSERVBYNAME_R )
+check_function_exists( getservbyport_r HAVE_GETSERVBYPORT_R )
+check_function_exists( getsockname HAVE_GETSOCKNAME )
+check_function_exists( getsockopt HAVE_GETSOCKOPT )
+check_function_exists( gettimeofday HAVE_GETTIMEOFDAY )
+check_function_exists( grantpt HAVE_GRANTPT )
+check_function_exists( if_nametoindex HAVE_IF_NAMETOINDEX )
+check_function_exists( index HAVE_INDEX)
+check_function_exists( inet_ntop HAVE_INET_NTOP )
+check_function_exists( inet_pton HAVE_INET_PTON )
+check_function_exists( setfsent HAVE_SETFSENT )
+check_function_exists( setgroups HAVE_SETGROUPS )
+check_function_exists( setlocale HAVE_SETLOCALE )
+check_function_exists( setmntent HAVE_SETMNTENT )
+check_function_exists( setpriority HAVE_SETPRIORITY )
+check_function_exists( isnan HAVE_FUNC_ISNAN )
+check_function_exists( _finite HAVE_FUNC__FINITE )
+check_function_exists( finite HAVE_FUNC_FINITE )
+check_function_exists( isinf HAVE_FUNC_ISINF )
+check_function_exists( freeaddrinfo HAVE_FREEADDRINFO )
+check_function_exists( strtoll HAVE_STRTOLL )
+check_function_exists( socket HAVE_SOCKET )
+check_function_exists( strfmon HAVE_STRFMON )
+check_function_exists( stpcpy HAVE_STPCPY )
+check_function_exists( readdir_r HAVE_READDIR_R )
+check_function_exists( tcgetattr HAVE_TCGETATTR )
+check_function_exists( tcsetattr HAVE_TCSETATTR )
+check_function_exists( strcasecmp HAVE_STRCASECMP )
+check_function_exists( strchr HAVE_STRCHR )
+check_function_exists( strcmp HAVE_STRCMP )
+check_function_exists( strrchr HAVE_STRRCHR )
+check_function_exists( ptsname HAVE_PTSNAME )
+check_function_exists( unlockpt HAVE_UNLOCKPT )
+check_function_exists( _getpty HAVE__GETPTY )
+check_function_exists( __argz_count HAVE___ARGZ_COUNT )
+check_function_exists( __argz_next HAVE___ARGZ_NEXT )
+check_function_exists( __argz_stringify HAVE___ARGZ_STRINGIFY )
+check_function_exists( sendfile HAVE_SENDFILE )
+check_function_exists( rindex HAVE_RINDEX )
+check_function_exists( putenv HAVE_PUTENV )
+check_function_exists( poll HAVE_POLL )
+check_function_exists( memcpy HAVE_MEMCPY )
+check_function_exists( madvise HAVE_MADVISE )
+check_function_exists( getgroups HAVE_GETGROUPS )
+check_function_exists( getcwd HAVE_GETCWD )
+check_function_exists( dlerror HAVE_DLERROR )
+check_function_exists( crypt HAVE_CRYPT )
+check_function_exists( bcopy HAVE_BCOPY )
+check_function_exists( alloca HAVE_ALLOCA )
+check_function_exists( mmap HAVE_MMAP )
+check_function_exists( munmap HAVE_MUNMAP )
+
+check_type_size( "char*" SIZEOF_CHAR_P )
+check_type_size( "int" SIZEOF_INT )
+check_type_size( "long" SIZEOF_LONG )
+check_type_size( "short" SIZEOF_SHORT )
+check_type_size( "size_t" SIZEOF_SIZE_T )
+check_type_size( "unsigned long" SIZEOF_UNSIGNED_LONG )
+
+set( CMAKE_EXTRA_INCLUDE_FILES "netdb.h" )
+check_type_size( "struct addrinfo" STRUCT_ADDRINFO )
+set( CMAKE_EXTRA_INCLUDE_FILES "netinet/in.h" )
+check_type_size( "struct sockaddr_in6" HAVE_STRUCT_SOCKADDR_IN6 )
+unset( CMAKE_EXTRA_INCLUDE_FILES )
+
+check_c_source_compiles("
+  #include <features.h>
+  #ifndef __GNU_LIBRARY__
+  #error
+  #endif
+  int main(int argc, char *argv[]) { return 0; } "
+  _GNU_SOURCE )
+
+check_c_source_compiles("
+  #include <unistd.h>
+  int main(int argc, char *argv[]) { revoke(\"/dev/tty\"); return 0; } "
+  HAVE_REVOKE )
+
+check_c_source_runs("
+  #include <sys/types.h>
+  #include <sys/socket.h>
+  #include <netdb.h>
+  #include <string.h>
+  int main()
+  {
+    struct addrinfo hint, *res;
+    int err;
+    memset(&hint, 0, sizeof(hint));
+    hint.ai_family = AF_INET;
+    hint.ai_protocol = 0;
+    hint.ai_socktype = SOCK_STREAM;
+    hint.ai_flags = AI_PASSIVE;
+    err = getaddrinfo(0, \"18300\", &hint, &res); /* kxmlrpc tries this */
+    if (err != 0 || res == 0 || res->ai_family != AF_INET)
+      return 1;
+    return 0;
+  }"
+  HAVE_GOOD_GETADDRINFO
+)
+
+if( NOT HAVE_GOOD_GETADDRINFO )
+  set( HAVE_BROKEN_GETADDRINFO 1 )
+endif( NOT HAVE_GOOD_GETADDRINFO )
+
+
+# save CMAKE_REQUIRED_LIBRARIES
+set( bak_CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} )
+
+set( CMAKE_REQUIRED_LIBRARIES resolv )
+check_c_source_compiles("
+  #include <sys/types.h>
+  #include <netinet/in.h>
+  #include <arpa/nameser.h>
+  #include <resolv.h>
+  int main(int argc, char *argv[]) { res_init(); return 0; } "
+  HAVE_RES_INIT )
+
+if( HAVE_RES_INIT )
+  set( RESOLV_LIBRARIES resolv )
+endif( HAVE_RES_INIT)
+
+set( CMAKE_REQUIRED_LIBRARIES util )
+check_c_source_runs("
+    #include <pty.h>
+    int main(int argc, char* argv) {
+      int master_fd, slave_fd;
+      int result;
+      result = openpty(&master_fd, &slave_fd, 0, 0, 0);
+      return 0;
+  }"
+  HAVE_OPENPTY
+)
+if( HAVE_OPENPTY )
+  set( LIB_UTIL util )
+endif( )
+
+# restore CMAKE_REQUIRED_LIBRARIES
+set( CMAKE_REQUIRED_LIBRARIES ${bak_CMAKE_REQUIRED_LIBRARIES} )
+unset( bak_CMAKE_REQUIRED_LIBRARIES )
+
+
+# FIXME for unknown reason cmake cannot find su
+#find_program( __PATH_SU su )
+set( __PATH_SU "/bin/su" )
+
+if( __PATH_SU )
+  set( DEFAULT_SUPER_USER_COMMAND ${__PATH_SU} )
+else( __PATH_SU )
+  message( STATUS "WARNING: su was not found" )
+endif( __PATH_SU )
+
+# FIXME for unknown reason cmake cannot find sudo
+# find_program( __PATH_SUDO "sudo" )
+set( __PATH_SUDO "/usr/bin/sudo" )
+if( WITH_SUDO_KDESU_BACKEND )
+  if( __PATH_SUDO )
+    set( DEFAULT_SUPER_USER_COMMAND ${__PATH_SUDO} )
+  else( __PATH_SUDO )
+    message( FATAL_ERROR "sudo was chosen as kdesu backend, but was not found in path." )
+  endif( __PATH_SUDO )
+endif( WITH_SUDO_KDESU_BACKEND )
+
+
+#### set some constants #########################
+
+set( LTDL_OBJDIR \".\" )
+set( KDELIBSUFF "" )
+set( kde_socklen_t socklen_t )
+
+
+##### check for libdl ###########################
+
+find_library( HAVE_LIBDL dl )
+if( NOT HAVE_LIBDL-NOTFOUND )
+  set( DL_LIBRARIES dl )
+endif( NOT HAVE_LIBDL-NOTFOUND )
+
+
+##### check for utempter ########################
+
+if( WITH_UTEMPTER )
+  check_include_file( utempter.h HAVE_UTEMPTER_H )
+  check_library_exists( utempter addToUtmp "" HAVE_ADDTOUTEMP )
+  if( HAVE_UTEMPTER_H AND HAVE_ADDTOUTEMP )
+    set( HAVE_UTEMPTER 1 )
+    set( UTEMPTER_LIBRARY utempter )
+  else( )
+    message(FATAL_ERROR "\nutempter are requested, but not found on your system" )
+  endif( )
+endif( )
+
+
+##### check for zlib ############################
+
+find_package( ZLIB )
+if( NOT ZLIB_FOUND )
+    message(FATAL_ERROR "\nzlib are required, but not found on your system" )
+endif( NOT ZLIB_FOUND )
+
+set( HAVE_LIBZ 1 )
+
+
+#### check for bzip2 ############################
+
+find_package( BZip2 )
+if( NOT BZIP2_FOUND )
+  # FIXME I'm not sure if bzip2 are required; maybe is optional?
+  message(FATAL_ERROR "\nbzip2 are required, but not found on your system" )
+endif( NOT BZIP2_FOUND )
+
+set( HAVE_BZIP2_SUPPORT 1 )
+
+if( BZIP2_NEED_PREFIX )
+  set( NEED_BZ2_PREFIX 1 )
+endif( BZIP2_NEED_PREFIX )
+
+
+##### check for jpeg ############################
+
+find_package( JPEG )
+if( NOT JPEG_FOUND )
+  # FIXME I think jpeg support must be required
+  message(FATAL_ERROR "\njpeg are required, but not found on your system" )
+endif( NOT JPEG_FOUND )
+
+set( HAVE_LIBJPEG 1 )
+
+
+##### check for png #############################
+
+find_package( PNG )
+if( NOT PNG_FOUND )
+  # FIXME I think png support must be required
+  message(FATAL_ERROR "\npng are required, but not found on your system" )
+endif( NOT PNG_FOUND )
+
+set( HAVE_LIBPNG 1 )
+
+
+##### check for tiff ############################
+
+if( WITH_TIFF )
+  find_package( TIFF )
+  if( NOT TIFF_FOUND )
+    message(FATAL_ERROR "\ntiff are requested, but not found on your system" )
+  endif( NOT TIFF_FOUND )
+  set( HAVE_LIBTIFF 1)
+endif( WITH_TIFF )
+
+
+##### check for jasper ##########################
+
+if( WITH_JASPER )
+  find_package( Jasper )
+  if( NOT JASPER_FOUND )
+    message(FATAL_ERROR "\njasper are requested, but not found on your system" )
+  endif( NOT JASPER_FOUND )
+  set( HAVE_JASPER 1 )
+endif( WITH_JASPER )
+
+
+##### check for openexr #########################
+
+if( WITH_OPENEXR )
+  pkg_search_module( OPENEXR OpenEXR )
+  if( NOT OPENEXR_FOUND )
+    message(FATAL_ERROR "\nopenexr are requested, but not found on your system" )
+  endif( NOT OPENEXR_FOUND )
+  set( HAVE_EXR 1 )
+endif( WITH_OPENEXR )
+
+
+##### check for freetype2 #######################
+
+pkg_search_module( FREETYPE freetype2 )
+if( NOT FREETYPE_FOUND )
+    message(FATAL_ERROR "\nfreetype2 are required, but not found on your system" )
+endif( NOT FREETYPE_FOUND )
+
+set( KDEINIT_USE_FONTCONFIG 1 )
+
+
+##### check for fontconfig ######################
+
+pkg_search_module( FONTCONFIG fontconfig )
+if( NOT FONTCONFIG_FOUND )
+    message(FATAL_ERROR "\nfontconfig are required, but not found on your system" )
+endif( NOT FONTCONFIG_FOUND )
+
+
+##### check for Xrandr ##########################
+
+pkg_search_module( XRANDR xrandr )
+if( XRANDR_FOUND )
+  set( XRANDR_SUPPORT 1 )
+endif( XRANDR_FOUND )
+
+
+##### check for xrender #########################
+
+pkg_search_module( XRENDER xrender )
+if( XRENDER_FOUND )
+  set( HAVE_XRENDER 1 )
+endif( XRENDER_FOUND )
+
+
+##### check for libxml-2.0 ######################
+
+pkg_search_module( LIBXML2 libxml-2.0 )
+if( NOT LIBXML2_FOUND )
+    message(FATAL_ERROR "\nlibxml-2.0 are required, but not found on your system" )
+endif( NOT LIBXML2_FOUND )
+
+
+##### check for libxslt ######################
+
+pkg_search_module( LIBXSLT libxslt )
+if( NOT LIBXSLT_FOUND )
+    message(FATAL_ERROR "\nlibxslt are required, but not found on your system" )
+endif( NOT LIBXSLT_FOUND )
+
+
+##### check for Qt3 #############################
+
+# find_package( Qt3 )
+# if( NOT QT_FOUND )
+#     message(FATAL_ERROR "\nQt3 are required, but not found on your system" )
+# endif( NOT QT_FOUND )
+
+
+##### check for TQt #############################
+
+# pkg_search_module( TQT TQt )
+# if( NOT TQT_FOUND )
+#     message(FATAL_ERROR "\nTQt are required, but not found on your system" )
+# endif( NOT TQT_FOUND )
+#
+# set( QT_MOC_EXECUTABLE "tmoc" )
+#
+# # check if Qt is linked against Xft
+# set( bak_CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} )
+# set( CMAKE_REQUIRED_LIBRARIES ${TQT_LDFLAGS} )
+# check_function_exists( XftInit KDEINIT_USE_XFT )
+# set( CMAKE_REQUIRED_LIBRARIES ${bak_CMAKE_REQUIRED_LIBRARIES} )
+# unset( bak_CMAKE_REQUIRED_LIBRARIES )
+
+
+##### check for ALSA ############################
+# FIXME I propose to drop support for very old ALSA versions (i.e 0.5)
+
+if( WITH_ALSA )
+  find_package( ALSA )
+  if( NOT ALSA_FOUND )
+    message(FATAL_ERROR "\nALSA support are requested, but not found on your system" )
+  endif( NOT ALSA_FOUND )
+  set( HAVE_LIBASOUND2 1 )
+
+  # FIXME I'm not sure if order is correct
+  check_include_file( "alsa/asoundlib.h" HAVE_ALSA_ASOUNDLIB_H )
+  if( NOT HAVE_ALSA_ASOUNDLIB_H )
+    check_include_file( "sys/asoundlib.h" HAVE_SYS_ASOUNDLIB_H )
+  endif( NOT HAVE_ALSA_ASOUNDLIB_H )
+endif( WITH_ALSA )
+
+
+##### check for aRts ############################
+
+if( WITH_ARTS )
+  pkg_search_module( ARTS arts )
+  if( ARTS_FOUND )
+    set( ARTS_MCOPIDL_EXECUTABLE ${ARTS_PREFIX}/bin/mcopidl )
+  else( ARTS_FOUND )
+    message(FATAL_ERROR "\naRts are requested, but not found on your system" )
+  endif( ARTS_FOUND )
+else( WITH_ARTS )
+  set( WITHOUT_ARTS 1 )
+endif( WITH_ARTS )
+
+
+##### check for Xft #############################
+
+if( KDEINIT_USE_XFT )
+  pkg_search_module( XFT xft )
+  if( NOT XFT_FOUND )
+      message(FATAL_ERROR "\nXft are required, but not found on your system" )
+  endif( NOT XFT_FOUND )
+endif( KDEINIT_USE_XFT )
+
+
+##### check for libart ##########################
+
+if( WITH_LIBART )
+  pkg_search_module( LIBART libart-2.0 )
+  if( NOT LIBART_FOUND )
+    message(FATAL_ERROR "\nlibart-2.0 support are requested, but not found on your system" )
+  endif( NOT LIBART_FOUND )
+  set( HAVE_LIBART 1 )
+endif( WITH_LIBART )
+
+
+##### check for libidn ##########################
+
+if( WITH_LIBIDN )
+  pkg_search_module( LIBIDN libidn )
+  if( NOT LIBIDN_FOUND )
+    message(FATAL_ERROR "\nlibidn support are requested, but not found on your system" )
+  endif( NOT LIBIDN_FOUND )
+  set( HAVE_LIBIDN 1 )
+  check_include_file( "idna.h" HAVE_IDNA_H )
+  check_include_file( "punycode.h" HAVE_PUNYCODE_H )
+  check_include_file( "stringprep.h" HAVE_STRINGPREP_H )
+endif( WITH_LIBIDN )
+
+
+##### check for openssl #########################
+
+if( WITH_SSL )
+  pkg_search_module( SSL openssl )
+  if( NOT SSL_FOUND )
+    message(FATAL_ERROR "\nSSL support are requested, but openssl is not found on your system" )
+  endif( NOT SSL_FOUND )
+  set( KSSL_HAVE_SSL 1 )
+  set( HAVE_SSL 1 )
+endif( WITH_SSL )
+
+
+##### check for cups ############################
+# FIXME CUPS must be at least 1.1.9
+
+if( WITH_CUPS )
+  find_package( Cups )
+  if( NOT CUPS_FOUND )
+    message(FATAL_ERROR "\nCUPS support are requested, but not found on your system" )
+  endif( NOT CUPS_FOUND )
+  set( HAVE_CUPS 1 )
+  # FIXME if CUPS is at least 1.1.20, doesn't have password caching
+  set( HAVE_CUPS_NO_PWD_CACHE 1 )
+endif( WITH_CUPS )
+
+
+##### check for LUA #############################
+
+if( WITH_LUA )
+  message(FATAL_ERROR "\nLUA support are not ready yet" )
+  pkg_search_module( LUA lua )
+  if( NOT LUA_FOUND )
+    message(FATAL_ERROR "\nLUA support are requested, but not found on your system" )
+  endif( NOT LUA_FOUND )
+  set( HAVE_LUA 1 )
+endif( WITH_LUA )
+
+
+##### check for avahi ###########################
+
+pkg_search_module( AVAHI avahi-qt3 )
+if( NOT AVAHI_FOUND )
+    message(FATAL_ERROR "\navahi support are requested, but not found on your system" )
+endif( NOT AVAHI_FOUND )
+
+set( AVAHI_API_0_6 1 )
+
+
+##### check for aspell ##########################
+# we need ASPELL_DATADIR too
+
+if( WITH_ASPELL )
+  find_package( ASPELL )
+  if( NOT ASPELL_FOUND )
+    message(FATAL_ERROR "\nASPELL support are requested, but not found on your system" )
+  endif( NOT ASPELL_FOUND )
+endif( WITH_ASPELL )
+
+
+##### check for hspell ##########################
+
+if( WITH_HSPELL )
+  find_package( HSPELL )
+  if( NOT HSPELL_FOUND )
+    message(FATAL_ERROR "\nHSPELL support are requested, but not found on your system" )
+  endif( NOT HSPELL_FOUND )
+endif( WITH_HSPELL )
+
+
+##### write configure files #####################
+
+configure_file( config.h.cmake config.h )
+configure_file( dcop/dcop-path.h.cmake dcop/dcop-path.h )
+configure_file( kdecore/kdemacros.h.cmake kdecore/kdemacros.h )
+configure_file( kjs/global.h.in kjs/global.h )
+configure_file( kio/kssl/ksslconfig.h.cmake kio/kssl/ksslconfig.h )
+configure_file( kdoctools/checkXML.cmake kdoctools/checkXML )
+
+
+##### tools #####################################
+
+set( KDE3_DCOPIDL_EXECUTABLE ${CMAKE_BINARY_DIR}/dcop/dcopidl/dcopidl )
+set( KDE3_DCOPIDL2CPP_EXECUTABLE ${CMAKE_BINARY_DIR}/dcop/dcopidl2cpp/dcopidl2cpp )
+set( KDE3_MEINPROC_EXECUTABLE ${CMAKE_BINARY_DIR}/kdoctools/meinproc )
+set( KDE3_KCFGC_EXECUTABLE ${CMAKE_BINARY_DIR}/kdecore/kconfig_compiler/kconfig_compiler )
+
+
+##### global compiler settings ##################
+
+add_definitions(
+  -DHAVE_CONFIG_H
+  -DQT_NO_ASCII_CAST
+  -DQT_CLEAN_NAMESPACE
+  -DQT_NO_STL
+  -DQT_NO_COMPAT
+  -DQT_NO_TRANSLATION
+)
+
+set( CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined" )
+set( CMAKE_MODULE_LINKER_FLAGS "-Wl,--no-undefined" )
+
+
+##### headers ###################################
+
+install( FILES
+    kde.pot
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### subdirectories ############################
+
+add_subdirectory( dcop )
+add_subdirectory( libltdl )
+add_subdirectory( kdefx )
+add_subdirectory( kdecore )
+add_subdirectory( kunittest )
+add_subdirectory( kdeui )
+add_subdirectory( kdesu )
+add_subdirectory( kjs )
+add_subdirectory( kwallet )
+add_subdirectory( kio )
+add_subdirectory( kded )
+
+# FIXME this directory/target doesn't exists
+# add_subdirectory( kded_post )
+
+add_subdirectory( kdoctools )
+add_subdirectory( doc )
+add_subdirectory( kparts )
+add_subdirectory( kutils )
+add_subdirectory( kspell2 )
+add_subdirectory( kmdi )
+add_subdirectory( kinit )
+add_subdirectory( kdeprint )
+add_subdirectory( kab )
+add_subdirectory( kresources )
+add_subdirectory( kabc )
+add_subdirectory( arts )
+add_subdirectory( interfaces )
+add_subdirectory( kate )
+add_subdirectory( kcert )
+if( XRANDR_FOUND )
+  add_subdirectory( krandr )
+endif( XRANDR_FOUND )
+add_subdirectory( khtml )
+add_subdirectory( kcmshell )
+add_subdirectory( kconf_update )
+add_subdirectory( kdewidgets )
+add_subdirectory( kimgio )
+add_subdirectory( kioslave )
+add_subdirectory( kstyles )
+add_subdirectory( libkmid )
+add_subdirectory( libkscreensaver )
+add_subdirectory( networkstatus )
+add_subdirectory( knewstuff )
+add_subdirectory( licenses )
+add_subdirectory( dnssd )
+add_subdirectory( pics )
+add_subdirectory( mimetypes )
+
+
+##### install import cmake modules ###############
+
+install( EXPORT ${CMAKE_PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_DIR} )
diff -Nuar kdelibs-orig//config.h.cmake kdelibs/config.h.cmake
--- kdelibs-orig//config.h.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/config.h.cmake	2010-11-26 22:38:53.000000000 +0200
@@ -0,0 +1,1158 @@
+/* config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Define if building universal (internal helper macro) */
+#undef AC_APPLE_UNIVERSAL_BUILD
+
+/* Define where aspell data dir is */
+#define ASPELL_DATADIR "@ASPELL_DATADIR@"
+
+/* Avahi API 0.6 */
+#cmakedefine AVAHI_API_0_6 1
+
+/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
+   systems. This function is required for `alloca.c' support on those systems.
+   */
+#undef CRAY_STACKSEG_END
+
+/* Define to 1 if using `alloca.c'. */
+#undef C_ALLOCA
+
+/* Define where your dcop binary is */
+#cmakedefine DCOP_PATH "@DCOP_PATH@"
+
+/* Use su or sudo */
+#define DEFAULT_SUPER_USER_COMMAND "@DEFAULT_SUPER_USER_COMMAND@"
+
+/* Define if getaddrinfo returns AF_UNIX sockets */
+#undef GETADDRINFO_RETURNS_UNIX
+
+/* getmntinfo() uses struct statvfs */
+#undef GETMNTINFO_USES_STATVFS
+
+/* Define if you have the MIT Kerberos libraries */
+#undef GSSAPI_MIT
+
+/* Define to 1 if you have `alloca', as a function or macro. */
+#cmakedefine HAVE_ALLOCA 1
+
+/* Define to 1 if you have the <alloca.h> header file. */
+#cmakedefine HAVE_ALLOCA_H 1
+
+/* Define to 1 if you have the <alsa/asoundlib.h> header file. */
+#cmakedefine HAVE_ALSA_ASOUNDLIB_H 1
+
+/* Define to 1 if you have the <arpa/nameser8_compat.h> header file. */
+#cmakedefine HAVE_ARPA_NAMESER8_COMPAT_H 1
+
+/* Define to 1 if you have the <awe_voice.h> header file. */
+#cmakedefine HAVE_AWE_VOICE_H 1
+
+/* Define if execinfo.h exists and defines backtrace (GLIBC >= 2.1) */
+#undef HAVE_BACKTRACE
+
+/* Define to 1 if you have the `bcopy' function. */
+#cmakedefine HAVE_BCOPY 1
+
+/* You _must_ have bool */
+#undef HAVE_BOOL
+
+/* Define if getaddrinfo is broken and should be replaced */
+#cmakedefine HAVE_BROKEN_GETADDRINFO 1
+
+/* Defines if bzip2 is compiled */
+#cmakedefine HAVE_BZIP2_SUPPORT 1
+
+/* Define to 1 if you have the <Carbon/Carbon.h> header file. */
+#cmakedefine HAVE_CARBON_CARBON_H 1
+
+/* Define if you have the CoreAudio API */
+#undef HAVE_COREAUDIO
+
+/* Define to 1 if you have the <crt_externs.h> header file. */
+#cmakedefine HAVE_CRT_EXTERNS_H 1
+
+/* Defines if your system has the crypt function */
+#cmakedefine HAVE_CRYPT 1
+
+/* Define to 1 if you have the <ctype.h> header file. */
+#cmakedefine HAVE_CTYPE_H 1
+
+/* Defines if you have CUPS (Common UNIX Printing System) */
+#cmakedefine HAVE_CUPS 1
+
+/* CUPS doesn't have password caching */
+#cmakedefine HAVE_CUPS_NO_PWD_CACHE 1
+
+/* Define to 1 if you have the declaration of `getservbyname_r', and to 0 if you don't. */
+#undef HAVE_DECL_GETSERVBYNAME_R
+
+/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'. */
+#cmakedefine HAVE_DIRENT_H 1
+
+/* Define if you have the GNU dld library. */
+#undef HAVE_DLD
+
+/* Define to 1 if you have the <dld.h> header file. */
+#cmakedefine HAVE_DLD_H 1
+
+/* Define to 1 if you have the `dlerror' function. */
+#cmakedefine HAVE_DLERROR 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#cmakedefine HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the <dl.h> header file. */
+#cmakedefine HAVE_DL_H 1
+
+/* Define if your system has Linux Directory Notification */
+#undef HAVE_DNOTIFY
+
+/* Define if you have OpenEXR */
+#cmakedefine HAVE_EXR 1
+
+/* Define is posix_fadvise is supported */
+#undef HAVE_FADVISE
+
+/* Define if your system has libfam */
+#undef HAVE_FAM
+
+/* Define to 1 if you have the <float.h> header file. */
+#cmakedefine HAVE_FLOAT_H 1
+
+/* Define to 1 if you have the `freeaddrinfo' function. */
+#cmakedefine HAVE_FREEADDRINFO 1
+
+/* Define to 1 if you have the <fstab.h> header file. */
+#cmakedefine HAVE_FSTAB_H 1
+
+/* Define if you have finite */
+#cmakedefine HAVE_FUNC_FINITE 1
+
+/* Define if you have isinf */
+#cmakedefine HAVE_FUNC_ISINF 1
+
+/* Define if you have isnan */
+#cmakedefine HAVE_FUNC_ISNAN 1
+
+/* Define if you have _finite */
+#cmakedefine HAVE_FUNC__FINITE 1
+
+/* Define to 1 if you have the `gai_strerror' function. */
+#cmakedefine HAVE_GAI_STRERROR 1
+
+/* Define to 1 if you have the `getaddrinfo' function. */
+#cmakedefine HAVE_GETADDRINFO 1
+
+/* Define to 1 if you have the `getcwd' function. */
+#cmakedefine HAVE_GETCWD 1
+
+/* Define to 1 if you have the `getgroups' function. */
+#cmakedefine HAVE_GETGROUPS 1
+
+/* Define to 1 if you have the `gethostbyname2' function. */
+#cmakedefine HAVE_GETHOSTBYNAME2 1
+
+/* Define to 1 if you have the `gethostbyname2_r' function. */
+#cmakedefine HAVE_GETHOSTBYNAME2_R 1
+
+/* Define to 1 if you have the `gethostbyname_r' function. */
+#cmakedefine HAVE_GETHOSTBYNAME_R 1
+
+/* Define if you have gethostname */
+#cmakedefine HAVE_GETHOSTNAME 1
+
+/* Define if you have the gethostname prototype */
+#cmakedefine HAVE_GETHOSTNAME_PROTO 1
+
+/* Define to 1 if you have the `getmntinfo' function. */
+#cmakedefine HAVE_GETMNTINFO 1
+
+/* Define to 1 if you have the `getnameinfo' function. */
+#cmakedefine HAVE_GETNAMEINFO 1
+
+/* Define to 1 if you have the `getpagesize' function. */
+#cmakedefine HAVE_GETPAGESIZE 1
+
+/* Define to 1 if you have the `getpeereid' function. */
+#cmakedefine HAVE_GETPEEREID 1
+
+/* Define to 1 if you have the `getpeername' function. */
+#cmakedefine HAVE_GETPEERNAME 1
+
+/* Define to 1 if you have the `getprotobyname_r' function. */
+#cmakedefine HAVE_GETPROTOBYNAME_R 1
+
+/* Define to 1 if you have the `getpt' function. */
+#cmakedefine HAVE_GETPT 1
+
+/* Define to 1 if you have the `getservbyname_r' function. */
+#cmakedefine HAVE_GETSERVBYNAME_R 1
+
+/* Define to 1 if you have the `getservbyport_r' function. */
+#cmakedefine HAVE_GETSERVBYPORT_R 1
+
+/* Define to 1 if you have the `getsockname' function. */
+#cmakedefine HAVE_GETSOCKNAME 1
+
+/* Define to 1 if you have the `getsockopt' function. */
+#cmakedefine HAVE_GETSOCKOPT 1
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#cmakedefine HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the `grantpt' function. */
+#cmakedefine HAVE_GRANTPT 1
+
+/* Define to 1 if you have the <idna.h> header file. */
+#cmakedefine HAVE_IDNA_H 1
+
+/* Define to 1 if you have the <ieeefp.h> header file. */
+#cmakedefine HAVE_IEEEFP_H 1
+
+/* Define to 1 if you have the `if_nametoindex' function. */
+#cmakedefine HAVE_IF_NAMETOINDEX 1
+
+/* Define to 1 if you have the `index' function. */
+#cmakedefine HAVE_INDEX 1
+
+/* Define to 1 if you have the `inet_ntop' function. */
+#cmakedefine HAVE_INET_NTOP 1
+
+/* Define to 1 if you have the `inet_pton' function. */
+#cmakedefine HAVE_INET_PTON 1
+
+/* Define to 1 if you have the `initgroups' function. */
+#cmakedefine HAVE_INITGROUPS 1
+
+/* Define if you have the initgroups prototype */
+#cmakedefine HAVE_INITGROUPS_PROTO 1
+
+/* Define if your system has Linux Inode Notification */
+#undef HAVE_INOTIFY
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#cmakedefine HAVE_INTTYPES_H 1
+
+/* Define if you have jasper */
+#cmakedefine HAVE_JASPER 1
+
+/* Define if your locale.h file contains LC_MESSAGES */
+#undef HAVE_LC_MESSAGES
+
+/* Defines if your system has the libart library */
+#cmakedefine HAVE_LIBART 1
+
+/* Define if you have libasound.so.1 (required for ALSA 0.5.x support) */
+#undef HAVE_LIBASOUND
+
+/* Define if you have libasound.so.2 (required for ALSA 0.9.x support) */
+#cmakedefine HAVE_LIBASOUND2 1
+
+/* Define if you have the libdl library or equivalent. */
+#cmakedefine HAVE_LIBDL 1
+
+/* Define if you have GSSAPI libraries */
+#undef HAVE_LIBGSSAPI
+
+/* Defined if you have libidn in your system */
+#cmakedefine HAVE_LIBIDN 1
+
+/* Define if you have libjpeg */
+#cmakedefine HAVE_LIBJPEG 1
+
+/* Define if you have libpng */
+#cmakedefine HAVE_LIBPNG 1
+
+/* Define if you have a working libpthread (will enable threaded code) */
+#undef HAVE_LIBPTHREAD
+
+/* Define to 1 if you have the `qt-mt' library (-lqt-mt). */
+#undef HAVE_LIBQT_MT
+
+/* Defined if you have libthai and want to have it compiled in */
+#undef HAVE_LIBTHAI
+
+/* Define if you have libtiff */
+#cmakedefine HAVE_LIBTIFF 1
+
+/* Define to 1 if you have the <libutil.h> header file. */
+#cmakedefine HAVE_LIBUTIL_H 1
+
+/* Define if you have libz */
+#cmakedefine HAVE_LIBZ 1
+
+/* Define to 1 if you have the <limits.h> header file. */
+#cmakedefine HAVE_LIMITS_H 1
+
+/* Define to 1 if you have the <linux/awe_voice.h> header file. */
+#cmakedefine HAVE_LINUX_AWE_VOICE_H 1
+
+/* Define to 1 if you have the <locale.h> header file. */
+#cmakedefine HAVE_LOCALE_H 1
+
+/* Define if you have LUA > 5.0 */
+#cmakedefine HAVE_LUA 1
+
+/* Define to 1 if you have the <machine/soundcard.h> header file. */
+#cmakedefine HAVE_MACHINE_SOUNDCARD_H 1
+
+/* Define to 1 if you have the `madvise' function. */
+#cmakedefine HAVE_MADVISE 1
+
+/* Define to 1 if you have the <malloc.h> header file. */
+#cmakedefine HAVE_MALLOC_H 1
+
+/* Define to 1 if you have the `memcpy' function. */
+#cmakedefine HAVE_MEMCPY 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#cmakedefine HAVE_MEMORY_H 1
+
+/* Define if you want MIT-SHM support */
+#undef HAVE_MITSHM
+
+/* Define if you have mkdtemp */
+#cmakedefine HAVE_MKDTEMP 1
+
+/* Define if you have the mkdtemp prototype */
+#cmakedefine HAVE_MKDTEMP_PROTO 1
+
+/* Define if you have mkstemp */
+#cmakedefine HAVE_MKSTEMP 1
+
+/* Define if you have mkstemps */
+#cmakedefine HAVE_MKSTEMPS 1
+
+/* Define if you have the mkstemps prototype */
+#cmakedefine HAVE_MKSTEMPS_PROTO 1
+
+/* Define if you have the mkstemp prototype */
+#cmakedefine HAVE_MKSTEMP_PROTO 1
+
+/* Define to 1 if you have a working `mmap' system call. */
+#cmakedefine HAVE_MMAP 1
+
+/* Define to 1 if you have the <mntent.h> header file. */
+#cmakedefine HAVE_MNTENT_H 1
+
+/* Define to 1 if you have the `munmap' function. */
+#cmakedefine HAVE_MUNMAP 1
+
+/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
+#cmakedefine HAVE_NDIR_H 1
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+#cmakedefine HAVE_NETINET_IN_H 1
+
+/* Define to 1 if you have the <net/if.h> header file. */
+#cmakedefine HAVE_NET_IF_H 1
+
+/* Define to 1 if you have the <nl_types.h> header file. */
+#undef HAVE_NL_TYPES_H
+
+/* Define if system has non-POSIX extensions to the ACL support. */
+#undef HAVE_NON_POSIX_ACL_EXTENSIONS
+
+/* Define if your system needs _NSGetEnviron to set up the environment */
+#undef HAVE_NSGETENVIRON
+
+/* Define if you have OpenSSL < 0.9.6 */
+#undef HAVE_OLD_SSL_API
+
+/* Define to 1 if you have the `openpty' function. */
+#cmakedefine HAVE_OPENPTY 1
+
+/* Define to 1 if you have the <paths.h> header file. */
+#cmakedefine HAVE_PATHS_H 1
+
+/* Define if you have pcreposix libraries and header files. */
+#undef HAVE_PCREPOSIX
+
+/* Define to 1 if you have the `poll' function. */
+#cmakedefine HAVE_POLL 1
+
+/* Define to 1 if the assembler supports AltiVec instructions. */
+#undef HAVE_PPC_ALTIVEC
+
+/* Define if libtool can extract symbol lists from object files. */
+#undef HAVE_PRELOADED_SYMBOLS
+
+/* Define to 1 if you have the `ptsname' function. */
+#cmakedefine HAVE_PTSNAME 1
+
+/* Define to 1 if you have the <pty.h> header file. */
+#cmakedefine HAVE_PTY_H 1
+
+/* Define to 1 if you have the <punycode.h> header file. */
+#cmakedefine HAVE_PUNYCODE_H 1
+
+/* Define to 1 if you have the `putenv' function. */
+#cmakedefine HAVE_PUTENV 1
+
+/* Define if you have random */
+#cmakedefine HAVE_RANDOM 1
+
+/* Define if you have the random prototype */
+#cmakedefine HAVE_RANDOM_PROTO 1
+
+/* Define to 1 if you have the `readdir_r' function. */
+#cmakedefine HAVE_READDIR_R 1
+
+/* Define if you have res_init */
+#cmakedefine HAVE_RES_INIT 1
+
+/* Define if you have the res_init prototype */
+#undef HAVE_RES_INIT_PROTO
+
+/* Define if revoke(tty) is present in unistd.h */
+#cmakedefine HAVE_REVOKE 1
+
+/* Define to 1 if you have the `rindex' function. */
+#cmakedefine HAVE_RINDEX 1
+
+/* Define if you want sendfile() support */
+#cmakedefine HAVE_SENDFILE 1
+
+/* Define to 1 if you have the `setegid' function. */
+#cmakedefine HAVE_SETEGID 1
+
+/* Define if you have setenv */
+#cmakedefine HAVE_SETENV 1
+
+/* Define if you have the setenv prototype */
+#cmakedefine HAVE_SETENV_PROTO 1
+
+/* Define to 1 if you have the `seteuid' function. */
+#cmakedefine HAVE_SETEUID 1
+
+/* Define to 1 if you have the `setfsent' function. */
+#cmakedefine  HAVE_SETFSENT 1
+
+/* Define to 1 if you have the `setgroups' function. */
+#cmakedefine HAVE_SETGROUPS 1
+
+/* Define to 1 if you have the `setlocale' function. */
+#cmakedefine HAVE_SETLOCALE 1
+
+/* Define to 1 if you have the `setmntent' function. */
+#cmakedefine HAVE_SETMNTENT 1
+
+/* Define to 1 if you have the `setpriority' function. */
+#cmakedefine HAVE_SETPRIORITY 1
+
+/* Define if you have a STL implementation by SGI */
+#undef HAVE_SGI_STL
+
+/* Define if you have the shl_load function. */
+#undef HAVE_SHL_LOAD
+
+/* if setgroups() takes short *as second arg */
+#undef HAVE_SHORTSETGROUPS
+
+/* Define if libasound has snd_pcm_resume() */
+#undef HAVE_SND_PCM_RESUME
+
+/* Define to 1 if you have the `snprintf' function. */
+#cmakedefine HAVE_SNPRINTF 1
+
+/* Define to 1 if you have the `socket' function. */
+#cmakedefine HAVE_SOCKET 1
+
+/* Define if you have srandom */
+#cmakedefine HAVE_SRANDOM 1
+
+/* Define if you have the srandom prototype */
+#cmakedefine HAVE_SRANDOM_PROTO 1
+
+/* If we are going to use OpenSSL */
+#cmakedefine HAVE_SSL 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#cmakedefine HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdio.h> header file. */
+#cmakedefine HAVE_STDIO_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#cmakedefine HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the `stpcpy' function. */
+#cmakedefine HAVE_STPCPY 1
+
+/* Define to 1 if you have the `strcasecmp' function. */
+#cmakedefine HAVE_STRCASECMP 1
+
+/* Define to 1 if you have the `strchr' function. */
+#cmakedefine HAVE_STRCHR 1
+
+/* Define to 1 if you have the `strcmp' function. */
+#cmakedefine HAVE_STRCMP 1
+
+/* Define to 1 if you have the `strfmon' function. */
+#cmakedefine HAVE_STRFMON 1
+
+/* Define to 1 if you have the <stringprep.h> header file. */
+#cmakedefine HAVE_STRINGPREP_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#cmakedefine HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#cmakedefine HAVE_STRING_H 1
+
+/* Define if you have strlcat */
+#cmakedefine HAVE_STRLCAT 1
+
+/* Define if you have the strlcat prototype */
+#cmakedefine HAVE_STRLCAT_PROTO 1
+
+/* Define if you have strlcpy */
+#cmakedefine HAVE_STRLCPY 1
+
+/* Define if you have the strlcpy prototype */
+#cmakedefine HAVE_STRLCPY_PROTO 1
+
+/* Define to 1 if you have the `strrchr' function. */
+#cmakedefine HAVE_STRRCHR 1
+
+/* Define to 1 if you have the `strtoll' function. */
+#cmakedefine HAVE_STRTOLL 1
+
+/* Define to 1 if the system has the type `struct addrinfo'. */
+#cmakedefine HAVE_STRUCT_ADDRINFO 1
+
+/* Define to 1 if the system has the type `struct sockaddr_in6'. */
+#cmakedefine HAVE_STRUCT_SOCKADDR_IN6 1
+
+/* Define to 1 if `sin6_scope_id' is member of `struct sockaddr_in6'. */
+#undef HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID
+
+/* Define to 1 if `sa_len' is member of `struct sockaddr'. */
+#undef HAVE_STRUCT_SOCKADDR_SA_LEN
+
+/* Define if struct ucred is present from sys/socket.h */
+#undef HAVE_STRUCT_UCRED
+
+/* Define to 1 if you have the <sysent.h> header file. */
+#cmakedefine HAVE_SYSENT_H 1
+
+/* Define to 1 if you have the <sys/asoundlib.h> header file. */
+#cmakedefine HAVE_SYS_ASOUNDLIB_H 1
+
+/* Define to 1 if you have the <sys/bitypes.h> header file. */
+#cmakedefine HAVE_SYS_BITYPES_H 1
+
+/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'. */
+#cmakedefine HAVE_SYS_DIR_H 1
+
+/* Define to 1 if you have the <sys/filio.h> header file. */
+#cmakedefine HAVE_SYS_FILIO_H 1
+
+/* Define if your system has glibc support for inotify */
+#undef HAVE_SYS_INOTIFY
+
+/* Define to 1 if you have the <sys/mman.h> header file. */
+#cmakedefine HAVE_SYS_MMAN_H 1
+
+/* Define to 1 if you have the <sys/mntent.h> header file. */
+#cmakedefine HAVE_SYS_MNTENT_H 1
+
+/* Define to 1 if you have the <sys/mnttab.h> header file. */
+#cmakedefine HAVE_SYS_MNTTAB_H 1
+
+/* Define to 1 if you have the <sys/mount.h> header file. */
+#cmakedefine HAVE_SYS_MOUNT_H 1
+
+/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'. */
+#cmakedefine HAVE_SYS_NDIR_H 1
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#cmakedefine HAVE_SYS_PARAM_H 1
+
+/* Define to 1 if you have the <sys/prctl.h> header file. */
+#cmakedefine HAVE_SYS_PRCTL_H 1
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+#cmakedefine HAVE_SYS_SELECT_H 1
+
+/* Define to 1 if you have the <sys/soundcard.h> header file. */
+#cmakedefine HAVE_SYS_SOUNDCARD_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#cmakedefine HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/stropts.h> header file. */
+#cmakedefine HAVE_SYS_STROPTS_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#cmakedefine HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#cmakedefine HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <sys/ucred.h> header file. */
+#cmakedefine HAVE_SYS_UCRED_H 1
+
+/* Define if system has the sys/xattr.h header. */
+#cmakedefine HAVE_SYS_XATTR_H 1
+
+/* Define if sys/stat.h declares S_ISSOCK. */
+#cmakedefine HAVE_S_ISSOCK 1
+
+/* Define to 1 if you have the `tcgetattr' function. */
+#cmakedefine HAVE_TCGETATTR 1
+
+/* Define to 1 if you have the `tcsetattr' function. */
+#cmakedefine HAVE_TCSETATTR 1
+
+/* Define to 1 if you have the <termios.h> header file. */
+#cmakedefine HAVE_TERMIOS_H 1
+
+/* Define to 1 if you have the <termio.h> header file. */
+#cmakedefine HAVE_TERMIO_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#cmakedefine HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the `unlockpt' function. */
+#cmakedefine HAVE_UNLOCKPT 1
+
+/* Define if you have unsetenv */
+#cmakedefine HAVE_UNSETENV 1
+
+/* Define if you have the unsetenv prototype */
+#cmakedefine HAVE_UNSETENV_PROTO 1
+
+/* Define to 1 if you have the `usleep' function. */
+#cmakedefine HAVE_USLEEP 1
+
+/* Define if you have the usleep prototype */
+#cmakedefine HAVE_USLEEP_PROTO 1
+
+/* Define if you have the utempter helper for utmp managment */
+#cmakedefine HAVE_UTEMPTER 1
+
+/* Define to 1 if you have the <util.h> header file. */
+#cmakedefine HAVE_UTIL_H 1
+
+/* Define to 1 if you have the <valgrind/memcheck.h> header file. */
+#cmakedefine HAVE_VALGRIND_MEMCHECK_H 1
+
+/* Define to 1 if you have the <values.h> header file. */
+#cmakedefine HAVE_VALUES_H 1
+
+/* Define, to enable volume management (Solaris 2.x), if you have -lvolmgt */
+#undef HAVE_VOLMGT
+
+/* Define to 1 if you have the `vsnprintf' function. */
+#cmakedefine HAVE_VSNPRINTF 1
+
+/* Define to 1 if you have the <X11/extensions/shape.h> header file. */
+#cmakedefine HAVE_X11_EXTENSIONS_SHAPE_H 1
+
+/* Define to 1 if you have the <X11/extensions/Xrandr.h> header file. */
+#cmakedefine HAVE_X11_EXTENSIONS_XRANDR_H 1
+
+/* Define to 1 if you have the <X11/extensions/XShm.h> header file. */
+#cmakedefine HAVE_X11_EXTENSIONS_XSHM_H 1
+
+/* Define to 1 if you have the <X11/ICE/ICElib.h> header file. */
+#cmakedefine HAVE_X11_ICE_ICELIB_H 1
+
+/* Define to 1 if the assembler supports 3DNOW instructions. */
+#undef HAVE_X86_3DNOW
+
+/* Define to 1 if the assembler supports MMX instructions. */
+#undef HAVE_X86_MMX
+
+/* Define to 1 if the assembler supports SSE instructions. */
+#undef HAVE_X86_SSE
+
+/* Define to 1 if the assembler supports SSE2 instructions. */
+#undef HAVE_X86_SSE2
+
+/* Defined if your system has XRender support */
+#cmakedefine HAVE_XRENDER 1
+
+/* Define to 1 if you have the `_getpty' function. */
+#cmakedefine HAVE__GETPTY 1
+
+/* Define to 1 if you have the `_IceTransNoListen' function. */
+#undef HAVE__ICETRANSNOLISTEN
+
+/* Define to 1 if you have the </usr/src/sys/gnu/i386/isa/sound/awe_voice.h> header file. */
+#cmakedefine HAVE__USR_SRC_SYS_GNU_I386_ISA_SOUND_AWE_VOICE_H 1
+
+/* Define to 1 if you have the </usr/src/sys/i386/isa/sound/awe_voice.h> header file. */
+#cmakedefine HAVE__USR_SRC_SYS_I386_ISA_SOUND_AWE_VOICE_H 1
+
+/* Define to 1 if you have the `__argz_count' function. */
+#cmakedefine HAVE___ARGZ_COUNT 1
+
+/* Define to 1 if you have the `__argz_next' function. */
+#cmakedefine HAVE___ARGZ_NEXT 1
+
+/* Define to 1 if you have the `__argz_stringify' function. */
+#cmakedefine HAVE___ARGZ_STRINGIFY 1
+
+/* The prefix to use as fallback */
+#define KDEDIR "@KDEDIR@"
+
+/* Enable prevention against poor Linux OOM-killer */
+#cmakedefine KDEINIT_OOM_PROTECT 1
+
+/* Use FontConfig in kdeinit */
+#cmakedefine KDEINIT_USE_FONTCONFIG 1
+
+/* Use Xft preinitialization in kdeinit */
+#cmakedefine KDEINIT_USE_XFT 1
+
+/* Suffix for lib directories */
+#define KDELIBSUFF "@KDELIBSUFF@"
+
+/* The compiled in system configuration prefix */
+#define KDESYSCONFDIR "@CONFIG_INSTALL_DIR@"
+
+/* what C++ compiler was used for compilation */
+#define KDE_COMPILER_VERSION "@KDE_COMPILER_VERSION@"
+
+/* what OS used for compilation */
+#define KDE_COMPILING_OS "@KDE_COMPILING_OS@"
+
+/* Distribution Text to append to OS */
+#define KDE_DISTRIBUTION_TEXT "@KDE_DISTRIBUTION_TEXT@"
+
+/* Use own malloc implementation */
+#cmakedefine KDE_MALLOC 1
+
+/* Enable debugging in fast malloc */
+#cmakedefine KDE_MALLOC_DEBUG 1
+
+/* Make alloc as fast as possible */
+#cmakedefine KDE_MALLOC_FULL 1
+
+/* The libc used is glibc */
+#undef KDE_MALLOC_GLIBC
+
+/* The platform is x86 */
+#cmakedefine KDE_MALLOC_X86 1
+
+/* Define if we shall use KSSL */
+#cmakedefine KSSL_HAVE_SSL 1
+
+/* Define if the OS needs help to load dependent libraries for dlopen(). */
+#undef LTDL_DLOPEN_DEPLIBS
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries. */
+#cmakedefine LTDL_OBJDIR @LTDL_OBJDIR@
+
+/* Define to the name of the environment variable that determines the dynamic
+   library search path. */
+#undef LTDL_SHLIBPATH_VAR
+
+/* Define to the extension used for shared libraries, say, ".so". */
+#undef LTDL_SHLIB_EXT
+
+/* Define to the system default library search path. */
+#undef LTDL_SYSSEARCHPATH
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#undef LT_OBJDIR
+
+/* Define the file for mount entries */
+#undef MTAB_FILE
+
+/* Define if the libbz2 functions need the BZ2_ prefix */
+#cmakedefine NEED_BZ2_PREFIX 1
+
+/* Define if dlsym() requires a leading underscode in symbol names. */
+#undef NEED_USCORE
+
+/* Name of package */
+#undef PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#undef PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the version of this package. */
+#undef PACKAGE_VERSION
+
+/* Define if you have POSIX.1b scheduling */
+#undef POSIX1B_SCHEDULING
+
+/* The size of `char *', as computed by sizeof. */
+#cmakedefine SIZEOF_CHAR_P @SIZEOF_CHAR_P@
+
+/* The size of `int', as computed by sizeof. */
+#cmakedefine SIZEOF_INT @SIZEOF_INT@
+
+/* The size of `long', as computed by sizeof. */
+#cmakedefine SIZEOF_LONG @SIZEOF_LONG@
+
+/* The size of `short', as computed by sizeof. */
+#cmakedefine SIZEOF_SHORT @SIZEOF_SHORT@
+
+/* The size of `size_t', as computed by sizeof. */
+#cmakedefine SIZEOF_SIZE_T @SIZEOF_SIZE_T@
+
+/* The size of `unsigned long', as computed by sizeof. */
+#cmakedefine SIZEOF_UNSIGNED_LONG @SIZEOF_UNSIGNED_LONG@
+
+/* If using the C implementation of alloca, define if you know the
+   direction of stack growth for your system; otherwise it will be
+   automatically deduced at runtime.
+	STACK_DIRECTION > 0 => grows toward higher addresses
+	STACK_DIRECTION < 0 => grows toward lower addresses
+	STACK_DIRECTION = 0 => direction of growth unknown */
+#undef STACK_DIRECTION
+
+/* Define to 1 if you have the ANSI C header files. */
+#undef STDC_HEADERS
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#cmakedefine TIME_WITH_SYS_TIME 1
+
+/* Define if system has POSIX ACL support. */
+#undef USE_POSIX_ACL
+
+/* Version number of package */
+#define VERSION "@VERSION@"
+
+/* Defined if compiling without arts */
+#cmakedefine WITHOUT_ARTS 1
+
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
+# endif
+#else
+# ifndef WORDS_BIGENDIAN
+#  undef WORDS_BIGENDIAN
+# endif
+#endif
+
+/* where rgb.txt is in */
+#undef X11_RGBFILE
+
+/* Defines the executable of xmllint */
+#undef XMLLINT
+
+/* Defined if your system has XRandR support */
+#cmakedefine XRANDR_SUPPORT 1
+
+/*
+ * jpeg.h needs HAVE_BOOLEAN, when the system uses boolean in system
+ * headers and I'm too lazy to write a configure test as long as only
+ * unixware is related
+ */
+#ifdef _UNIXWARE
+#define HAVE_BOOLEAN
+#endif
+
+
+
+/*
+ * AIX defines FD_SET in terms of bzero, but fails to include <strings.h>
+ * that defines bzero.
+ */
+
+#if defined(_AIX)
+#include <strings.h>
+#endif
+
+
+
+#if defined(HAVE_NSGETENVIRON) && defined(HAVE_CRT_EXTERNS_H)
+# include <sys/time.h>
+# include <crt_externs.h>
+# define environ (*_NSGetEnviron())
+#endif
+
+
+
+#ifdef __osf__
+#ifdef __cplusplus
+extern "C" {
+#endif
+#include <sys/mount.h>
+int getmntinfo(struct statfs **mntbufp, int flags);
+#include <sys/fs_types.h>    /* for mnt_names[] */
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+/* Define if you need to use the GNU extensions */
+#cmakedefine _GNU_SOURCE 1
+
+
+#if !defined(HAVE_GETHOSTNAME_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+int gethostname (char *, unsigned int);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_INITGROUPS_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+int initgroups(const char *, gid_t);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_MKDTEMP_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+char *mkdtemp(char *);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_MKSTEMPS_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+int mkstemps(char *, int);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_MKSTEMP_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+int mkstemp(char *);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_RANDOM_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+long int random(void);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_RES_INIT_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+int res_init(void);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_SETENV_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+int setenv (const char *, const char *, int);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_SRANDOM_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+void srandom(unsigned int);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_STRLCAT_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+unsigned long strlcat(char*, const char*, unsigned long);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_STRLCPY_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+unsigned long strlcpy(char*, const char*, unsigned long);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_UNSETENV_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+void unsetenv (const char *);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#if !defined(HAVE_USLEEP_PROTO)
+#ifdef __cplusplus
+extern "C" {
+#endif
+int usleep (unsigned int);
+#ifdef __cplusplus
+}
+#endif
+#endif
+
+
+
+#ifndef HAVE_S_ISSOCK
+#define HAVE_S_ISSOCK
+#define S_ISSOCK(mode) (1==0)
+#endif
+
+
+
+/*
+ * Steven Schultz <sms at to.gd-es.com> tells us :
+ * BSD/OS 4.2 doesn't have a prototype for openpty in its system header files
+ */
+#ifdef __bsdi__
+__BEGIN_DECLS
+int openpty(int *, int *, char *, struct termios *, struct winsize *);
+__END_DECLS
+#endif
+
+
+
+/*
+ * On HP-UX, the declaration of vsnprintf() is needed every time !
+ */
+
+#if !defined(HAVE_VSNPRINTF) || defined(hpux)
+#if __STDC__
+#include <stdarg.h>
+#include <stdlib.h>
+#else
+#include <varargs.h>
+#endif
+#ifdef __cplusplus
+extern "C"
+#endif
+int vsnprintf(char *str, size_t n, char const *fmt, va_list ap);
+#ifdef __cplusplus
+extern "C"
+#endif
+int snprintf(char *str, size_t n, char const *fmt, ...);
+#endif
+
+
+/* KDE bindir */
+#define __KDE_BINDIR "@BIN_INSTALL_DIR@"
+
+/* execprefix or NONE if not set, for libloading */
+#undef __KDE_EXECPREFIX
+
+/* define to 1 if -fvisibility is supported */
+#undef __KDE_HAVE_GCC_VISIBILITY
+
+/* path to su */
+#define __PATH_SU "@__PATH_SU@"
+
+/* path to sudo */
+#define __PATH_SUDO "@__PATH_SUDO@"
+
+
+#if defined(__SVR4) && !defined(__svr4__)
+#define __svr4__ 1
+#endif
+
+
+/* type to use in place of socklen_t if not defined */
+#cmakedefine kde_socklen_t @kde_socklen_t@
+
+/* type to use in place of socklen_t if not defined (deprecated, use kde_socklen_t) */
+#cmakedefine ksize_t @kde_socklen_t@
+
+/* Define to `long int' if <sys/types.h> does not define. */
+#undef off_t
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+#undef size_t
+
+
+/* provide a definition for a 32 bit entity, usable as a typedef, possibly
+   extended by "unsigned" */
+#undef INT32_BASETYPE
+#ifdef SIZEOF_INT
+#if SIZEOF_INT == 4
+#define INT32_BASETYPE int
+#endif
+#endif
+#if !defined(INT32_BASETYPE) && defined(SIZEOF_LONG)
+#if SIZEOF_LONG == 4
+#define INT32_BASETYPE long
+#endif
+#endif
+#ifndef INT32_BASETYPE
+#define INT32_BASETYPE int
+#endif
+
+#ifndef HAVE_SETEUID
+#define HAVE_SETEUID
+#define HAVE_SETEUID_FAKE
+#ifdef __cplusplus
+extern "C"
+#endif
+int seteuid(INT32_BASETYPE euid); /* defined in fakes.c */
+#endif
+
diff -Nuar kdelibs-orig//dcop/client/CMakeLists.txt kdelibs/dcop/client/CMakeLists.txt
--- kdelibs-orig//dcop/client/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dcop/client/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,61 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_BINARY_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+#### dcop #######################################
+
+tde_add_executable( dcop SOURCES dcop.cpp LINK DCOP-shared DESTINATION ${BIN_INSTALL_DIR} )
+
+
+#### dcopfind ###################################
+
+tde_add_executable( dcopfind SOURCES dcopfind.cpp LINK DCOP-shared DESTINATION ${BIN_INSTALL_DIR} )
+
+
+#### dcopclient #################################
+
+tde_add_executable( dcopclient SOURCES dcopclient.c DESTINATION ${BIN_INSTALL_DIR} )
+
+
+#### dcopobject #################################
+
+tde_add_executable( dcopobject SOURCES dcopobject.c DESTINATION ${BIN_INSTALL_DIR} )
+
+
+#### dcopref ####################################
+
+tde_add_executable( dcopref SOURCES dcopref.c DESTINATION ${BIN_INSTALL_DIR} )
+
+
+#### dcopstart ##################################
+
+tde_add_executable( dcopstart SOURCES dcopstart.cpp LINK DCOP-shared DESTINATION ${BIN_INSTALL_DIR} )
+
+
+#### dcopquit ###################################
+
+tde_add_executable( dcopquit SOURCES dcopquit.cpp LINK DCOP-shared DESTINATION ${BIN_INSTALL_DIR} )
diff -Nuar kdelibs-orig//dcop/CMakeLists.txt kdelibs/dcop/CMakeLists.txt
--- kdelibs-orig//dcop/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dcop/CMakeLists.txt	2010-10-28 02:01:19.000000000 +0300
@@ -0,0 +1,82 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( KDE-ICE )
+add_subdirectory( dcopidl )
+add_subdirectory( dcopidlng )
+add_subdirectory( dcopidl2cpp )
+add_subdirectory( client )
+
+
+include( KDE3Macros )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    dcopclient.h dcopobject.h dcopstub.h dcopref.h
+    dcoptypes.h kdatastream.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### libDCOP ###################################
+
+set( target DCOP )
+
+set( ${target}_SRCS
+  dcopstub.cpp dcopref.cpp dcopobject.cpp dcopclient.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK kICE-static ${TQT_LIBRARIES}
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+#### dcopserver (kdeinit) #######################
+
+set( target dcopserver )
+
+set( ${target}_SRCS
+  dcopserver.cpp dcopsignals.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kICE-static DCOP-shared
+)
+
+
+#### dcopserver_shutdown ########################
+
+tde_add_executable( dcopserver_shutdown
+  SOURCES dcopserver_shutdown.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//dcop/dcopidl/CMakeLists.txt kdelibs/dcop/dcopidl/CMakeLists.txt
--- kdelibs-orig//dcop/dcopidl/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dcop/dcopidl/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,39 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### dcopidl ###################################
+
+set( target dcopidl )
+
+set( ${target}_SRCS
+  main.cpp yacc.cc scanner.cc
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK DCOP-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//dcop/dcopidl2cpp/CMakeLists.txt kdelibs/dcop/dcopidl2cpp/CMakeLists.txt
--- kdelibs-orig//dcop/dcopidl2cpp/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dcop/dcopidl2cpp/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,36 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+##### dcopidl2cpp ###############################
+
+set( target dcopidl2cpp )
+
+set( ${target}_SRCS
+  main.cpp skel.cpp stub.cpp stubimpl.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK ${TQT_LIBRARIES}
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//dcop/dcopidlng/CMakeLists.txt kdelibs/dcop/dcopidlng/CMakeLists.txt
--- kdelibs-orig//dcop/dcopidlng/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dcop/dcopidlng/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,25 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( PROGRAMS
+    dcopidlng
+  DESTINATION ${BIN_INSTALL_DIR} )
+
+install( PROGRAMS
+    kalyptus
+  DESTINATION ${DATA_INSTALL_DIR}/dcopidlng )
+
+install( FILES
+    Ast.pm Iter.pm kalyptusCxxToDcopIDL.pm kdocAstUtil.pm
+    kdocParseDoc.pm kdocUtil.pm
+  DESTINATION ${DATA_INSTALL_DIR}/dcopidlng )
diff -Nuar kdelibs-orig//dcop/dcop-path.h.cmake kdelibs/dcop/dcop-path.h.cmake
--- kdelibs-orig//dcop/dcop-path.h.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dcop/dcop-path.h.cmake	2010-09-12 18:37:49.000000000 +0300
@@ -0,0 +1 @@
+#define DCOP_PATH "@DCOP_PATH@"
diff -Nuar kdelibs-orig//dcop/KDE-ICE/CMakeLists.txt kdelibs/dcop/KDE-ICE/CMakeLists.txt
--- kdelibs-orig//dcop/KDE-ICE/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dcop/KDE-ICE/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,39 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  -DICE_t
+  -DTRANS_SERVER
+  -DTRANS_CLIENT
+  -DUNIXCONN
+  -DANSICPP
+)
+
+include_directories(
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+)
+
+
+##### kICE ######################################
+
+set( target kICE )
+
+set( ${target}_SRCS
+  accept.c authutil.c connect.c error.c getauth.c
+  iceauth.c listen.c listenwk.c locking.c misc.c
+  ping.c process.c protosetup.c register.c replywait.c
+  setauth.c shutdown.c watch.c transport.c globals.c
+)
+
+tde_add_library( ${target} STATIC_PIC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//dnssd/CMakeLists.txt kdelibs/dnssd/CMakeLists.txt
--- kdelibs-orig//dnssd/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/dnssd/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,54 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+##### headers ###################################
+
+install( FILES
+    domainbrowser.h query.h remoteservice.h
+    publicservice.h servicebase.h servicebrowser.h
+    ${CMAKE_CURRENT_BINARY_DIR}/settings.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/dnssd )
+
+
+##### kdnssd ####################################
+
+set( target kdnssd )
+
+set( ${target}_SRCS
+  remoteservice.cpp responder.cpp servicebase.cpp
+  settings.kcfgc publicservice.cpp query.cpp
+  domainbrowser.cpp servicebrowser.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kdecore-shared
+  DEPENDENCIES kconfig_compiler
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//doc/CMakeLists.txt kdelibs/doc/CMakeLists.txt
--- kdelibs-orig//doc/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/doc/CMakeLists.txt	2010-10-24 23:23:04.000000000 +0300
@@ -0,0 +1,13 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( common )
+add_subdirectory( kspell )
diff -Nuar kdelibs-orig//doc/common/CMakeLists.txt kdelibs/doc/common/CMakeLists.txt
--- kdelibs-orig//doc/common/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/doc/common/CMakeLists.txt	2010-10-24 23:23:04.000000000 +0300
@@ -0,0 +1,28 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    artistic-license.html bottom1.png bottom2.png
+    bsd-license.html doctop1.png doctop2.png fdl-license
+    fdl-license.html gpl-license gpl-license.html
+    kde-common.css kde-default.css kde-web.css kde-localised.css.template
+    lgpl-license lgpl-license.html qpl-license.html shadow.png
+    web-docbottom.png x11-license.html xml.dcl web-doctop.png
+    doctop1a.png doctop1b.png 1.png 2.png 3.png 4.png
+    5.png 6.png 7.png 8.png 9.png 10.png doxygen.css
+    header.html footer.html mainheader.html appheader.html
+    mainfooter.html fdl-notice.html favicon.ico kde_gear_64.png
+    docheadergears.png headerbg.png grad.png kmenu.png
+    kde_logo.png kde_logo_bg.png bottom-left.png bottom-middle.png
+    bottom-right.png top-left.png top-middle.png top-right-konqueror.png
+  DESTINATION ${HTML_INSTALL_DIR}/en/common )
diff -Nuar kdelibs-orig//doc/kspell/CMakeLists.txt kdelibs/doc/kspell/CMakeLists.txt
--- kdelibs-orig//doc/kspell/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/doc/kspell/CMakeLists.txt	2010-10-24 23:23:04.000000000 +0300
@@ -0,0 +1,21 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_custom_command(
+  OUTPUT index.cache.bz2
+  COMMAND ${CMAKE_BINARY_DIR}/kdoctools/meinproc --srcdir=${CMAKE_SOURCE_DIR}/kdoctools --check --cache index.cache.bz2 ${CMAKE_CURRENT_SOURCE_DIR}/index.docbook
+  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/index.docbook meinproc )
+
+install( FILES
+    index.docbook ${CMAKE_CURRENT_BINARY_DIR}/index.cache.bz2
+  DESTINATION ${HTML_INSTALL_DIR}/en/kspell )
+
+add_custom_target( kspell-doc ALL DEPENDS index.cache.bz2 )
diff -Nuar kdelibs-orig//interfaces/CMakeLists.txt kdelibs/interfaces/CMakeLists.txt
--- kdelibs-orig//interfaces/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,20 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( ktexteditor )
+add_subdirectory( kscript )
+add_subdirectory( kregexpeditor )
+add_subdirectory( kmediaplayer )
+add_subdirectory( kio )
+add_subdirectory( terminal )
+add_subdirectory( khexedit )
+add_subdirectory( kimproxy )
+add_subdirectory( kspeech )
diff -Nuar kdelibs-orig//interfaces/khexedit/CMakeLists.txt kdelibs/interfaces/khexedit/CMakeLists.txt
--- kdelibs-orig//interfaces/khexedit/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/khexedit/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,22 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### headers ###################################
+
+install( FILES
+    byteseditinterface.h valuecolumninterface.h
+    charcolumninterface.h zoominterface.h clipboardinterface.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/khexedit )
+
+
+##### other data ################################
+
+install( FILES kbytesedit.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
diff -Nuar kdelibs-orig//interfaces/kimproxy/CMakeLists.txt kdelibs/interfaces/kimproxy/CMakeLists.txt
--- kdelibs-orig//interfaces/kimproxy/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kimproxy/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,13 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( interface )
+add_subdirectory( library )
diff -Nuar kdelibs-orig//interfaces/kimproxy/interface/CMakeLists.txt kdelibs/interfaces/kimproxy/interface/CMakeLists.txt
--- kdelibs-orig//interfaces/kimproxy/interface/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kimproxy/interface/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,22 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### headers ###################################
+
+install( FILES
+    kimiface.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES kcm_instantmessenger.desktop DESTINATION ${DATA_INSTALL_DIR}/kcm_componentchooser )
+install( FILES dcopinstantmessenger.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
diff -Nuar kdelibs-orig//interfaces/kimproxy/library/CMakeLists.txt kdelibs/interfaces/kimproxy/library/CMakeLists.txt
--- kdelibs-orig//interfaces/kimproxy/library/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kimproxy/library/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,55 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( icons )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kimproxy.h kimproxyiface.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### kimproxy ##################################
+
+set( target kimproxy )
+
+set( ${target}_SRCS
+  kimproxy.cpp kimproxyiface.skel
+  ${CMAKE_SOURCE_DIR}/interfaces/kimproxy/interface/kimiface.stub
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK kio-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
diff -Nuar kdelibs-orig//interfaces/kimproxy/library/icons/CMakeLists.txt kdelibs/interfaces/kimproxy/library/icons/CMakeLists.txt
--- kdelibs-orig//interfaces/kimproxy/library/icons/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kimproxy/library/icons/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,13 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+tde_install_icons( )
+
diff -Nuar kdelibs-orig//interfaces/kio/CMakeLists.txt kdelibs/interfaces/kio/CMakeLists.txt
--- kdelibs-orig//interfaces/kio/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kio/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,17 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### headers ###################################
+
+install( FILES
+    http.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kio )
+
diff -Nuar kdelibs-orig//interfaces/kmediaplayer/CMakeLists.txt kdelibs/interfaces/kmediaplayer/CMakeLists.txt
--- kdelibs-orig//interfaces/kmediaplayer/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kmediaplayer/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,65 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+if( ARTS_FOUND )
+  add_subdirectory( kfileaudiopreview )
+endif( ARTS_FOUND )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/interfaces
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    player.h playerdcopobject.h view.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kmediaplayer )
+
+
+##### other data ################################
+
+install( FILES
+    kmediaplayerengine.desktop kmediaplayer.desktop
+  DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+
+##### kmediaplayer ##############################
+
+set( target kmediaplayer )
+
+set( ${target}_SRCS
+  player.cpp view.cpp playerdcopobject.skel
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK kparts-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
diff -Nuar kdelibs-orig//interfaces/kmediaplayer/kfileaudiopreview/CMakeLists.txt kdelibs/interfaces/kmediaplayer/kfileaudiopreview/CMakeLists.txt
--- kdelibs-orig//interfaces/kmediaplayer/kfileaudiopreview/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kmediaplayer/kfileaudiopreview/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,50 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${ARTS_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/interfaces
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/arts/kde
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${ARTS_LIBRARY_DIRS}
+)
+
+
+##### kfileaudiopreview #########################
+
+set( target kfileaudiopreview )
+
+set( ${target}_SRCS
+  kfileaudiopreview.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kmediaplayer-shared artskde-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//interfaces/kregexpeditor/CMakeLists.txt kdelibs/interfaces/kregexpeditor/CMakeLists.txt
--- kdelibs-orig//interfaces/kregexpeditor/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kregexpeditor/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,20 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### headers ###################################
+
+install( FILES
+    kregexpeditorinterface.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+##### other data ################################
+
+install( FILES kregexpeditor.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
diff -Nuar kdelibs-orig//interfaces/kscript/CMakeLists.txt kdelibs/interfaces/kscript/CMakeLists.txt
--- kdelibs-orig//interfaces/kscript/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kscript/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,61 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( sample )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    scriptinterface.h scriptclientinterface.h scriptmanager.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES scriptinterface.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+
+##### kscript ###################################
+
+set( target kscript )
+
+set( ${target}_SRCS
+  scriptmanager.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK kio-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//interfaces/kscript/sample/CMakeLists.txt kdelibs/interfaces/kscript/sample/CMakeLists.txt
--- kdelibs-orig//interfaces/kscript/sample/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kscript/sample/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,47 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/interfaces/kscript
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES shellscript.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### libshellscript ############################
+
+set( target libshellscript )
+
+set( ${target}_SRCS
+  shellscript.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kscript-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//interfaces/kspeech/CMakeLists.txt kdelibs/interfaces/kspeech/CMakeLists.txt
--- kdelibs-orig//interfaces/kspeech/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/kspeech/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,21 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### headers ###################################
+
+install( FILES
+    kspeech.h kspeechsink.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES dcoptexttospeech.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
diff -Nuar kdelibs-orig//interfaces/ktexteditor/CMakeLists.txt kdelibs/interfaces/ktexteditor/CMakeLists.txt
--- kdelibs-orig//interfaces/ktexteditor/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/ktexteditor/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,101 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_BINARY_DIR}/kabc
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kabc
+  ${CMAKE_SOURCE_DIR}/interfaces
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    document.h view.h editor.h plugin.h editinterface.h
+    undointerface.h selectioninterface.h cursorinterface.h
+    clipboardinterface.h popupmenuinterface.h viewcursorinterface.h
+    searchinterface.h highlightinginterface.h blockselectioninterface.h
+    codecompletioninterface.h configinterface.h markinterface.h
+    printinterface.h wordwrapinterface.h dynwordwrapinterface.h
+    markinterfaceextension.h configinterfaceextension.h
+    encodinginterface.h viewstatusmsginterface.h
+    sessionconfiginterface.h editorchooser.h documentinfo.h
+    selectioninterfaceext.h selectionextdcopinterface.h
+    texthintinterface.h editinterfaceext.h variableinterface.h
+    templateinterface.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/ktexteditor )
+
+
+##### other data ################################
+
+install( FILES
+    ktexteditor.desktop ktexteditoreditor.desktop
+    ktexteditorplugin.desktop
+  DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+install( FILES
+    kcm_ktexteditor.desktop
+  DESTINATION ${DATA_INSTALL_DIR}/kcm_componentchooser )
+
+
+
+##### ktexteditor ###############################
+
+set( target ktexteditor )
+
+set( ${target}_SRCS
+  ktexteditor.cpp
+  editinterface.cpp clipboardinterface.cpp  selectioninterface.cpp searchinterface.cpp
+  codecompletioninterface.cpp wordwrapinterface.cpp blockselectioninterface.cpp
+  configinterface.cpp cursorinterface.cpp  dynwordwrapinterface.cpp
+  printinterface.cpp highlightinginterface.cpp markinterface.cpp
+  popupmenuinterface.cpp undointerface.cpp viewcursorinterface.cpp
+  editdcopinterface.cpp editdcopinterface.skel clipboarddcopinterface.cpp
+  clipboarddcopinterface.skel selectiondcopinterface.cpp selectiondcopinterface.skel
+  searchdcopinterface.cpp searchdcopinterface.skel markinterfaceextension.cpp
+  configinterfaceextension.cpp encodinginterface.cpp sessionconfiginterface.cpp
+  viewstatusmsginterface.cpp editorchooser_ui.ui editorchooser.cpp
+  blockselectiondcopinterface.cpp documentinfo.cpp documentdcopinfo.cpp
+  blockselectiondcopinterface.skel documentdcopinfo.skel encodingdcopinterface.cpp
+  encodingdcopinterface.skel printdcopinterface.cpp printdcopinterface.skel
+  undodcopinterface.cpp undodcopinterface.skel viewcursordcopinterface.cpp
+  viewcursordcopinterface.skel viewstatusmsgdcopinterface.cpp
+  viewstatusmsgdcopinterface.skel selectioninterfaceext.cpp selectionextdcopinterface.skel
+  texthintinterface.cpp editinterfaceext.cpp variableinterface.cpp templateinterface.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK kdeui-shared kabc-shared kparts-shared
+  DEPENDENCIES dcopidl dcopidl2cpp
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//interfaces/terminal/CMakeLists.txt kdelibs/interfaces/terminal/CMakeLists.txt
--- kdelibs-orig//interfaces/terminal/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/interfaces/terminal/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,16 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### headers ###################################
+
+install( FILES
+    kde_terminal_interface.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
diff -Nuar kdelibs-orig//kab/CMakeLists.txt kdelibs/kab/CMakeLists.txt
--- kdelibs-orig//kab/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kab/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,40 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kab #######################################
+
+set( target kab )
+
+set( ${target}_SRCS
+  kabapi.cc addressbook.cc qconfigDB.cc
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+  DEPENDENCIES dcopidl
+)
diff -Nuar kdelibs-orig//kabc/CMakeLists.txt kdelibs/kabc/CMakeLists.txt
--- kdelibs-orig//kabc/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,128 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( vcard )
+add_subdirectory( vcardparser )
+add_subdirectory( formats )
+add_subdirectory( plugins )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}/vcard/include
+  ${CMAKE_CURRENT_SOURCE_DIR}/vcard/include/generated
+  ${CMAKE_CURRENT_SOURCE_DIR}/vcardparser
+
+  # external includes
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kab
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    address.h addressbook.h  addresseedialog.h
+    agent.h distributionlist.h distributionlistdialog.h
+    distributionlisteditor.h errorhandler.h field.h
+    format.h formatfactory.h formatplugin.h geo.h key.h
+    phonenumber.h picture.h plugin.h resource.h secrecy.h
+    resourceselectdialog.h sound.h stdaddressbook.h
+    timezone.h vcardconverter.h vcardformat.h lock.h
+    vcardformatplugin.h ldifconverter.h addresslineedit.h
+    ldapclient.h addresseelist.h locknull.h ldif.h
+    ldapurl.h ldapconfigwidget.h sortmode.h
+    ${CMAKE_CURRENT_BINARY_DIR}/addressee.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kabc )
+
+
+##### other data ################################
+
+install( FILES kab2kabc.desktop DESTINATION ${AUTOSTART_INSTALL_DIR} )
+install( FILES kabc_manager.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kresources )
+install( FILES countrytransl.map DESTINATION ${DATA_INSTALL_DIR}/kabc )
+
+
+##### generated files ###########################
+# FIXME this hack make compatibility with out-of-source mode
+
+file( COPY
+    scripts/makeaddressee scripts/addressee.src.cpp
+    scripts/addressee.src.h scripts/entrylist scripts/field.src.cpp
+  DESTINATION scripts )
+
+add_custom_command(
+  OUTPUT addressee.cpp addressee.h field.cpp
+  COMMAND perl
+  ARGS makeaddressee
+  DEPENDS scripts/addressee.src.cpp scripts/addressee.src.h scripts/entrylist scripts/field.src.cpp
+  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/scripts
+)
+
+
+##### kabc ######################################
+
+set( target kabc )
+
+set( ${target}_SRCS
+  address.cpp addressbook.cpp addressee.cpp addresseedialog.cpp
+  agent.cpp distributionlist.cpp distributionlistdialog.cpp
+  distributionlisteditor.cpp errorhandler.cpp field.cpp
+  formatfactory.cpp geo.cpp key.cpp phonenumber.cpp
+  picture.cpp plugin.cpp resource.cpp resourceselectdialog.cpp
+  secrecy.cpp sound.cpp stdaddressbook.cpp timezone.cpp
+  vcard21parser.cpp vcardconverter.cpp vcardformat.cpp
+  vcardformatimpl.cpp vcardformatplugin.cpp ldifconverter.cpp
+  addresslineedit.cpp ldapclient.cpp addresseelist.cpp
+  vcardtool.cpp addresseehelper.cpp lock.cpp locknull.cpp
+  ldif.cpp ldapurl.cpp ldapconfigwidget.cpp sortmode.cpp
+  addresseehelper.skel
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.2.0
+  LINK vcards-static vcard-shared kio-shared kresources-shared
+  DEPENDENCIES addressee.h dcopidl
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kab2kabc ##################################
+
+set( target kab2kabc )
+
+set( ${target}_SRCS
+  kab2kabc.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kab-static kabc-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kabc/formats/CMakeLists.txt kdelibs/kabc/formats/CMakeLists.txt
--- kdelibs-orig//kabc/formats/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/formats/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,51 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${CMAKE_BINARY_DIR}/kabc
+  ${CMAKE_SOURCE_DIR}/kabc
+
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES binary.desktop DESTINATION ${DATA_INSTALL_DIR}/kabc/formats )
+
+
+##### kabcformat_binary #########################
+
+set( target kabcformat_binary )
+
+set( ${target}_SRCS
+  binaryformat.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kabc-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kabc/plugins/CMakeLists.txt kdelibs/kabc/plugins/CMakeLists.txt
--- kdelibs-orig//kabc/plugins/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/plugins/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,15 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( file )
+add_subdirectory( dir )
+add_subdirectory( net )
+add_subdirectory( ldapkio )
diff -Nuar kdelibs-orig//kabc/plugins/dir/CMakeLists.txt kdelibs/kabc/plugins/dir/CMakeLists.txt
--- kdelibs-orig//kabc/plugins/dir/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/plugins/dir/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,77 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kabc
+  ${CMAKE_SOURCE_DIR}/kabc
+
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    resourcedir.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kabc )
+
+
+##### other data ################################
+
+install( FILES dir.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kresources/kabc )
+
+
+##### kabc_dir (library) ########################
+
+set( target kabc_dir )
+
+set( ${target}_SRCS
+  resourcedir.cpp resourcedirconfig.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kabc-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kabc_dir (module) #########################
+
+set( target kabc_dir )
+
+set( ${target}_SRCS
+  resourcedirplugin.cpp
+)
+
+tde_add_kpart( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kabc_dir-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kabc/plugins/file/CMakeLists.txt kdelibs/kabc/plugins/file/CMakeLists.txt
--- kdelibs-orig//kabc/plugins/file/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/plugins/file/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,77 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kabc
+  ${CMAKE_SOURCE_DIR}/kabc
+
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    resourcefile.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kabc )
+
+
+##### other data ################################
+
+install( FILES file.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kresources/kabc )
+
+
+##### kabc_file (library) #######################
+
+set( target kabc_file )
+
+set( ${target}_SRCS
+  resourcefile.cpp resourcefileconfig.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kabc-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kabc_file (module) ########################
+
+set( target kabc_file )
+
+set( ${target}_SRCS
+  resourcefileplugin.cpp
+)
+
+tde_add_kpart( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kabc_file-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kabc/plugins/ldapkio/CMakeLists.txt kdelibs/kabc/plugins/ldapkio/CMakeLists.txt
--- kdelibs-orig//kabc/plugins/ldapkio/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/plugins/ldapkio/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,77 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kabc
+  ${CMAKE_SOURCE_DIR}/kabc
+
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfiles
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    resourceldapkio.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kabc )
+
+
+##### other data ################################
+
+install( FILES ldapkio.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kresources/kabc )
+
+
+##### kabc_ldapkio ##############################
+
+set( target kabc_ldapkio )
+
+set( ${target}_SRCS
+  resourceldapkio.cpp resourceldapkioconfig.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kabc-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kabc_ldapkio ##############################
+
+set( target kabc_ldapkio )
+
+set( ${target}_SRCS
+  resourceldapkioplugin.cpp
+)
+
+tde_add_kpart( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kabc_ldapkio-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kabc/plugins/net/CMakeLists.txt kdelibs/kabc/plugins/net/CMakeLists.txt
--- kdelibs-orig//kabc/plugins/net/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/plugins/net/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,77 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kabc
+  ${CMAKE_SOURCE_DIR}/kabc
+
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    resourcenet.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kabc )
+
+
+##### other data ################################
+
+install( FILES net.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kresources/kabc )
+
+
+##### kabc_net (library) ########################
+
+set( target kabc_net )
+
+set( ${target}_SRCS
+  resourcenet.cpp resourcenetconfig.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kabc-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kabc_net (module) #########################
+
+set( target kabc_net )
+
+set( ${target}_SRCS
+  resourcenetplugin.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kabc_net-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kabc/vcard/CMakeLists.txt kdelibs/kabc/vcard/CMakeLists.txt
--- kdelibs-orig//kabc/vcard/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/vcard/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,44 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}/include
+  ${CMAKE_CURRENT_SOURCE_DIR}/include/generated
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### vcard #####################################
+
+set( target vcard )
+
+set( ${target}_SRCS
+  vCard-all.cpp
+)
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK kdecore-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kabc/vcardparser/CMakeLists.txt kdelibs/kabc/vcardparser/CMakeLists.txt
--- kdelibs-orig//kabc/vcardparser/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kabc/vcardparser/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,44 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    vcard.h vcardline.h vcardparser.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kabc )
+
+
+##### vcards ####################################
+
+set( target vcards )
+
+set( ${target}_SRCS
+  vcard.cpp vcardline.cpp vcardparser.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kate/CMakeLists.txt kdelibs/kate/CMakeLists.txt
--- kdelibs-orig//kate/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,16 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( interfaces )
+add_subdirectory( part )
+add_subdirectory( data )
+add_subdirectory( scripts )
+add_subdirectory( plugins )
diff -Nuar kdelibs-orig//kate/data/CMakeLists.txt kdelibs/kate/data/CMakeLists.txt
--- kdelibs-orig//kate/data/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/data/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,83 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    katepart.desktop
+  DESTINATION ${SERVICES_INSTALL_DIR} )
+
+install( FILES
+    katepartui.rc katepartreadonlyui.rc
+  DESTINATION ${DATA_INSTALL_DIR}/katepart )
+
+install( FILES
+    katesyntaxhighlightingrc katefiletyperc
+  DESTINATION ${CONFIG_INSTALL_DIR} )
+
+install( FILES
+    language.dtd syntax.template cpp.xml c.xml html.xml
+    kbasic.xml objectivec.xml changelog.xml ada.xml
+    css.xml perl.xml php.xml xml.xml java.xml rpmspec.xml
+    sql.xml sql-mysql.xml sql-postgresql.xml vhdl.xml
+    diff.xml bash.xml latex.xml postscript.xml ruby.xml
+    rhtml.xml desktop.xml eiffel.xml pascal.xml sather.xml
+    python.xml makefile.xml ferite.xml scheme.xml matlab.xml
+    tcl.xml ilerpg.xml verilog.xml javascript.xml sml.xml
+    winehq.xml cs.xml sgml.xml idconsole.xml xmldebug.xml
+    fortran.xml haskell.xml literate-haskell.xml r.xml
+    gnuassembler.xml mab.xml mason.xml idl.xml prolog.xml
+    rsiidl.xml coldfusion.xml picsrc.xml uscript.xml lpc.xml
+    velocity.xml sci.xml ldif.xml inform.xml xharbour.xml
+    yacas.xml component-pascal.xml asm6502.xml gdl.xml
+    bibtex.xml d.xml vrml.xml rexx.xml cue.xml progress.xml
+    e.xml sieve.xml modula-2.xml awk.xml cisco.xml doxygen.xml
+    lua.xml pike.xml debianchangelog.xml debiancontrol.xml
+    fgl-4gl.xml fgl-per.xml alert.xml gettext.xml commonlisp.xml
+    clipper.xml povray.xml euphoria.xml mup.xml jsp.xml
+    ocaml.xml lex.xml yacc.xml cg.xml ahdl.xml ansic89.xml
+    tibasic.xml purebasic.xml mips.xml logtalk.xml txt2tags.xml
+    xslt.xml stata.xml glsl.xml lilypond.xml abc.xml asp.xml
+    asm-avr.xml rib.xml cmake.xml octave.xml javadoc.xml
+    cgis.xml spice.xml nasm.xml mediawiki.xml apache.xml
+    m3u.xml ini.xml fstab.xml actionscript.xml abap.xml
+    ansys.xml asn1.xml asterisk.xml bmethod.xml ddoc.xml
+    djangotemplate.xml doxygenlua.xml dtd.xml email.xml
+    erlang.xml freebasic.xml gap.xml json.xml maxima.xml
+    mergetagtext.xml modelica.xml monobasic.xml nemerle.xml
+    noweb.xml objectivecpp.xml opal.xml pgn.xml rapidq.xml
+    scala.xml sisu.xml systemc.xml texinfo.xml xorg.xml
+    xul.xml yaml.xml zonnon.xml
+    ${CMAKE_CURRENT_BINARY_DIR}/html-php.xml
+    ${CMAKE_CURRENT_BINARY_DIR}/css-php.xml
+    ${CMAKE_CURRENT_BINARY_DIR}/javascript-php.xml
+  DESTINATION ${DATA_INSTALL_DIR}/katepart/syntax )
+
+
+##### generate php headers ######################
+
+add_custom_command( OUTPUT html-php.xml
+  COMMAND perl ARGS generate-php.pl < html.xml > ${CMAKE_CURRENT_BINARY_DIR}/html-php.xml
+  DEPENDS html.xml
+  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )
+
+add_custom_command( OUTPUT css-php.xml
+  COMMAND perl ARGS generate-php.pl < css.xml > ${CMAKE_CURRENT_BINARY_DIR}/css-php.xml
+  DEPENDS css.xml
+  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )
+
+add_custom_command( OUTPUT javascript-php.xml
+  COMMAND perl ARGS generate-php.pl < javascript.xml > ${CMAKE_CURRENT_BINARY_DIR}/javascript-php.xml
+  DEPENDS javascript.xml
+  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )
+
+add_custom_target( php-headers ALL
+  DEPENDS html-php.xml css-php.xml javascript-php.xml )
diff -Nuar kdelibs-orig//kate/interfaces/CMakeLists.txt kdelibs/kate/interfaces/CMakeLists.txt
--- kdelibs-orig//kate/interfaces/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/interfaces/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,51 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/interfaces
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    document.h view.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kate )
+
+
+##### katepartinterfaces ########################
+
+set( target katepartinterfaces )
+
+set( ${target}_SRCS
+  interfaces.cpp katecmd.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK ktexteditor-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kate/part/CMakeLists.txt kdelibs/kate/part/CMakeLists.txt
--- kdelibs-orig//kate/part/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/part/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,81 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kjs
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kjs
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/kdeprint
+  ${CMAKE_SOURCE_DIR}/interfaces
+  ${CMAKE_SOURCE_DIR}/interfaces/kregexpeditor
+  ${LUA_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${LUA_LIBRARY_DIRS}
+)
+
+##### kate (static library) #####################
+
+set( target kate )
+
+set( ${target}_SRCS
+  katesearch.cpp katebuffer.cpp katecmds.cpp
+  kateundo.cpp katecursor.cpp katedialogs.cpp katedocument.cpp
+  katefactory.cpp katehighlight.cpp katesyntaxdocument.cpp
+  katetextline.cpp kateview.cpp kateconfig.cpp kateviewhelpers.cpp
+  katecodecompletion.cpp katedocumenthelpers.cpp
+  katecodefoldinghelpers.cpp kateviewinternal.cpp katebookmarks.cpp
+  kateprinter.cpp katefont.cpp katelinerange.cpp katesupercursor.cpp
+  katearbitraryhighlight.cpp katerenderer.cpp kateattribute.cpp
+  kateautoindent.cpp katefiletype.cpp kateschema.cpp katedocument.skel
+  katetemplatehandler.cpp katejscript.cpp katespell.cpp kateindentscriptabstracts.cpp
+  kateluaindentscript.cpp
+)
+
+tde_add_lut( katejscript.cpp katejscript.lut.h katejscript.cpp )
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+  DEPENDENCIES dcopidl
+)
+
+
+##### libkatepart (module) ######################
+
+set( target libkatepart )
+
+configure_file( ${CMAKE_SOURCE_DIR}/cmake/modules/template_dummy_cpp.cmake dummy.cpp COPYONLY )
+
+tde_add_kpart( ${target}
+  SOURCES dummy.cpp
+  EMBED kate-static
+  LINK kjs-shared kdeprint-shared katepartinterfaces-shared kutils-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kate/plugins/CMakeLists.txt kdelibs/kate/plugins/CMakeLists.txt
--- kdelibs-orig//kate/plugins/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/plugins/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,15 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( isearch )
+add_subdirectory( insertfile )
+add_subdirectory( kdatatool )
+add_subdirectory( wordcompletion )
diff -Nuar kdelibs-orig//kate/plugins/insertfile/CMakeLists.txt kdelibs/kate/plugins/insertfile/CMakeLists.txt
--- kdelibs-orig//kate/plugins/insertfile/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/plugins/insertfile/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,52 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/interfaces
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES ktexteditor_insertfile.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES ktexteditor_insertfileui.rc DESTINATION ${DATA_INSTALL_DIR}/ktexteditor_insertfile )
+
+
+##### ktexteditor_insertfile ####################
+
+set( target ktexteditor_insertfile )
+
+set( ${target}_SRCS
+  insertfileplugin.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK ktexteditor-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kate/plugins/isearch/CMakeLists.txt kdelibs/kate/plugins/isearch/CMakeLists.txt
--- kdelibs-orig//kate/plugins/isearch/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/plugins/isearch/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,50 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/interfaces
+)
+
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES ktexteditor_isearch.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES ktexteditor_isearchui.rc DESTINATION ${DATA_INSTALL_DIR}/ktexteditor_isearch )
+
+
+##### ktexteditor_isearch #######################
+
+set( target ktexteditor_isearch )
+
+set( ${target}_SRCS
+  ISearchPlugin.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK ktexteditor-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kate/plugins/kdatatool/CMakeLists.txt kdelibs/kate/plugins/kdatatool/CMakeLists.txt
--- kdelibs-orig//kate/plugins/kdatatool/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/plugins/kdatatool/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,52 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/interfaces
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES ktexteditor_kdatatool.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES ktexteditor_kdatatoolui.rc DESTINATION ${DATA_INSTALL_DIR}/ktexteditor_kdatatool )
+
+
+##### ktexteditor_kdatatool #####################
+
+set( target ktexteditor_kdatatool )
+
+set( ${target}_SRCS
+  kate_kdatatool.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK ktexteditor-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kate/plugins/wordcompletion/CMakeLists.txt kdelibs/kate/plugins/wordcompletion/CMakeLists.txt
--- kdelibs-orig//kate/plugins/wordcompletion/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/plugins/wordcompletion/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,48 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/interfaces
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+##### other data ################################
+
+install( FILES ktexteditor_docwordcompletion.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES docwordcompletionui.rc DESTINATION ${DATA_INSTALL_DIR}/ktexteditor_docwordcompletion )
+
+
+##### ktexteditor_docwordcompletion #############
+
+set( target ktexteditor_docwordcompletion )
+
+set( ${target}_SRCS
+  docwordcompletion.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK ktexteditor-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kate/scripts/CMakeLists.txt kdelibs/kate/scripts/CMakeLists.txt
--- kdelibs-orig//kate/scripts/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kate/scripts/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,21 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    jstest.desktop jstest.js script-indent-c-newline.js
+    script-indent-c-char.js sort.js
+  DESTINATION ${DATA_INSTALL_DIR}/katepart/scripts )
+
+install( FILES
+    script-indent-c-test.js script-indent-c1-test.lua
+  DESTINATION ${DATA_INSTALL_DIR}/katepart/scripts/indent )
diff -Nuar kdelibs-orig//kcert/CMakeLists.txt kdelibs/kcert/CMakeLists.txt
--- kdelibs-orig//kcert/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kcert/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,54 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_BINARY_DIR}/kio/kssl
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kio/kssl
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kcertpart.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES kcertpart.rc DESTINATION ${DATA_INSTALL_DIR}/kcertpart )
+
+
+##### libkcertpart ##############################
+
+set( target libkcertpart )
+
+set( ${target}_SRCS
+  kcertpart.cc
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared kparts-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kcmshell/CMakeLists.txt kdelibs/kcmshell/CMakeLists.txt
--- kdelibs-orig//kcmshell/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kcmshell/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,45 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kutils
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kcmshell ##################################
+
+set( target kcmshell )
+
+set( ${target}_SRCS
+  main.cpp main.skel
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kutils-shared
+  DEPENDENCIES dcopidl
+)
diff -Nuar kdelibs-orig//kconf_update/CMakeLists.txt kdelibs/kconf_update/CMakeLists.txt
--- kdelibs-orig//kconf_update/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kconf_update/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,38 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kconf_update ##############################
+
+set( target kconf_update )
+
+set( ${target}_SRCS
+  kconf_update.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdecore-shared
+)
diff -Nuar kdelibs-orig//kdecore/CMakeLists.txt kdelibs/kdecore/CMakeLists.txt
--- kdelibs-orig//kdecore/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdecore/CMakeLists.txt	2010-10-25 00:31:05.000000000 +0300
@@ -0,0 +1,205 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( malloc )
+add_subdirectory( network )
+add_subdirectory( kconfig_compiler )
+
+if( WITH_LIBART )
+  add_subdirectory( svgicons )
+  set( KDESVGICONS kdesvgicons-static )
+endif( WITH_LIBART )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}/network
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/libltdl
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${LIBART_INCLUDE_DIRS}
+  ${LIBIDN_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${LIBIDN_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kconfig.h kconfigskeleton.h kconfigdata.h ksimpleconfig.h
+    kconfigdialogmanager.h kconfigbase.h kdesktopfile.h
+    kurl.h ksock.h kaboutdata.h kcmdlineargs.h kconfigbackend.h
+    kapp.h kapplication.h kuniqueapp.h kuniqueapplication.h
+    kcharsets.h kdeversion.h kpty.h kprocess.h kprocctrl.h
+    klocale.h kicontheme.h kiconloader.h kdebug.h kwinmodule.h
+    kwin.h krootprop.h kshortcut.h kkeynative.h kaccel.h
+    kglobalaccel.h kstdaccel.h kshortcutlist.h kcatalogue.h
+    kregexp.h kcompletion.h kstringhandler.h kstddirs.h
+    kstandarddirs.h kglobal.h kglobalsettings.h ksharedptr.h
+    kallocator.h kvmallocator.h kcrash.h krfcdate.h kinstance.h
+    kpalette.h kipc.h klibloader.h ktempfile.h ksavefile.h
+    krandomsequence.h knotifyclient.h kiconeffect.h kaudioplayer.h
+    kdcoppropertyproxy.h netwm.h kaccelmanager.h netwm_def.h
+    kpixmapprovider.h kunload.h kstaticdeleter.h kextsock.h
+    kextendedsocket.h ksockaddr.h kprocio.h kasyncio.h kbufferedio.h
+    kurldrag.h kmimesourcefactory.h kmdcodec.h ksocks.h ksycoca.h
+    ksycocaentry.h ksycocatype.h kxmessages.h kstartupinfo.h
+    klargefile.h kmultipledrag.h kgenericfactory.h kgenericfactory.tcc
+    ktypelist.h ksortablevaluelist.h kdebugclasses.h kclipboard.h
+    kcalendarsystem.h kcalendarsystemfactory.h kmacroexpander.h
+    kmanagerselection.h kmountpoint.h kuser.h klockfile.h
+    kidna.h ktempdir.h kshell.h fixx11h.h kxerrorhandler.h
+    kdelibs_export.h kde_file.h ktimezones.h
+    ${CMAKE_CURRENT_BINARY_DIR}/kdemacros.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+tde_install_empty_directory( ${LOCALE_INSTALL_DIR}/all_languages )
+
+install( FILES 40.colors Web.colors Royal.colors Rainbow.colors
+  DESTINATION ${CONFIG_INSTALL_DIR}/colors )
+
+install( FILES kdebug.areas kdebugrc language.codes
+  DESTINATION ${CONFIG_INSTALL_DIR} )
+
+install( FILES kmdcodec_compat.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kio RENAME kmdcodec.h )
+
+install( FILES eventsrc
+  DESTINATION ${DATA_INSTALL_DIR}/knotify )
+
+
+##### libkdecore ################################
+
+set( target kdecore )
+
+set( ${target}_SRCS
+  libintl.cpp kapplication.cpp kdebug.cpp netwm.cpp
+  kconfigbase.cpp kconfig.cpp ksimpleconfig.cpp kconfigbackend.cpp
+  kmanagerselection.cpp kdesktopfile.cpp kstandarddirs.cpp
+  ksock.cpp kpty.cpp kprocess.cpp kprocctrl.cpp klocale.cpp
+  krfcdate.cpp kiconeffect.cpp kicontheme.cpp kiconloader.cpp
+  kwin.cpp kwinmodule.cpp krootprop.cpp kcharsets.cpp
+  kckey.cpp kshortcut.cpp kkeynative_x11.cpp kkeyserver_x11.cpp
+  kaccelaction.cpp kshortcutmenu.cpp kaccelbase.cpp kaccel.cpp
+  kglobalaccel_x11.cpp kglobalaccel.cpp kstdaccel.cpp kshortcutlist.cpp
+  kcrash.cpp kurl.cpp kregexp.cpp kglobal.cpp kglobalsettings.cpp
+  kallocator.cpp kvmallocator.cpp kmimesourcefactory.cpp
+  kinstance.cpp kpalette.cpp kipc.cpp klibloader.cpp ktempfile.cpp
+  kuniqueapplication.cpp kaccelmanager.cpp ksavefile.cpp
+  krandomsequence.cpp kstringhandler.cpp kcompletion.cpp
+  kcmdlineargs.cpp kaboutdata.cpp kcompletionbase.cpp knotifyclient.cpp
+  kaudioplayer.cpp kdcoppropertyproxy.cpp ksockaddr.cpp
+  kextsock.cpp netsupp.cpp kprocio.cpp kbufferedio.cpp
+  kpixmapprovider.cpp kurldrag.cpp kmdcodec.cpp ksocks.cpp
+  fakes.c vsnprintf.c ksycoca.cpp ksycocadict.cpp ksycoca.skel
+  ksycocafactory.cpp kxmessages.cpp kstartupinfo.cpp
+  kcatalogue.cpp kasyncio.cpp kmultipledrag.cpp kstaticdeleter.cpp
+  kappdcopiface.cpp kappdcopiface.skel kclipboard.cpp
+  kcheckaccelerators.cpp kdeversion.cpp kdebugdcopiface.cpp
+  kdebugdcopiface.skel kcalendarsystem.cpp kcalendarsystemgregorian.cpp
+  kcalendarsystemhijri.cpp kcalendarsystemhebrew.cpp
+  kcalendarsystemfactory.cpp kmacroexpander.cpp kidna.cpp
+  ktempdir.cpp kshell.cpp kmountpoint.cpp kcalendarsystemjalali.cpp
+  kprotocolinfo_kdecore.cpp kprotocolinfofactory.cpp kxerrorhandler.cpp
+  kuser.cpp kconfigskeleton.cpp kconfigdialogmanager.cpp klockfile.cpp
+  kqiodevicegzip_p.cpp ktimezones.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  EMBED kdecorenetwork-static
+  LINK ltdlc-static ${KDESVGICONS} DCOP-shared kdefx-shared ${ZLIB_LIBRARIES} ${LIBIDN_LIBRARIES}
+  DEPENDENCIES dcopidl dcopidl2cpp
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kdefakes_nonpic ###########################
+
+set( target kdefakes_nonpic )
+
+set( ${target}_SRCS
+  fakes.c vsnprintf.c
+)
+
+tde_add_library( ${target} STATIC
+  SOURCES ${${target}_SRCS}
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+##### kdefakes_pic ##############################
+
+set( target kdefakes_pic )
+
+set( ${target}_SRCS
+  fakes.c vsnprintf.c
+)
+
+tde_add_library( ${target} STATIC_PIC
+  SOURCES ${${target}_SRCS}
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### libkdefakes ###############################
+
+set( target kdefakes )
+
+set( ${target}_SRCS
+  fakes.c vsnprintf.c
+)
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kde-config ################################
+
+# FIXME still need some research and improvements
+configure_file( kde-config.cpp.cmake kde-config.cpp @ONLY )
+
+
+tde_add_executable( kde-config
+  SOURCES ${CMAKE_CURRENT_BINARY_DIR}/kde-config.cpp
+  LINK kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+##### kgrantpty #################################
+
+# FIXME there is something named KDE_USE_FPIE, I'm not sure what is this
+#set_target_properties( kgrantpty PROPERTIES COMPILE_FLAGS ${KDE_USE_FPIE} )
+#set_target_properties( kgrantpty PROPERTIES LINK_FLAGS ${KDE_USE_FPIE} )
+
+tde_add_executable(kgrantpty SETUID
+  SOURCES kgrantpty.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdecore/kconfig_compiler/CMakeLists.txt kdelibs/kdecore/kconfig_compiler/CMakeLists.txt
--- kdelibs-orig//kdecore/kconfig_compiler/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdecore/kconfig_compiler/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,33 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kconfig_compiler ##########################
+
+tde_add_executable( kconfig_compiler
+  SOURCES kconfig_compiler.cpp
+  LINK kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdecore/kde-config.cpp.cmake kdelibs/kdecore/kde-config.cpp.cmake
--- kdelibs-orig//kdecore/kde-config.cpp.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdecore/kde-config.cpp.cmake	2010-11-15 01:06:32.000000000 +0200
@@ -0,0 +1,272 @@
+// -*- c++ -*-
+
+#include <kcmdlineargs.h>
+#include <klocale.h>
+#include <kinstance.h>
+#include <kstandarddirs.h>
+#include <kglobal.h>
+#include <kglobalsettings.h>
+#include <stdio.h>
+#include <kaboutdata.h>
+#include <config.h>
+#include <kapplication.h>
+
+static const char *description = I18N_NOOP("A little program to output installation paths");
+
+static KCmdLineOptions options[] =
+{
+    { "expandvars", I18N_NOOP("expand ${prefix} and ${exec_prefix} in output"), 0 },
+    { "prefix",	   I18N_NOOP("Compiled in prefix for KDE libraries"), 0 },
+    { "exec-prefix", I18N_NOOP("Compiled in exec_prefix for KDE libraries"), 0 },
+    { "libsuffix", I18N_NOOP("Compiled in library path suffix"), 0 },
+    { "localprefix", I18N_NOOP("Prefix in $HOME used to write files"), 0},
+    { "version",   I18N_NOOP("Compiled in version string for KDE libraries"), 0 },
+    { "types",     I18N_NOOP("Available KDE resource types"), 0 },
+    { "path type", I18N_NOOP("Search path for resource type"), 0 },
+    { "userpath type", I18N_NOOP("User path: desktop|autostart|trash|document"), 0 },
+    { "install type", I18N_NOOP("Prefix to install resource files to"), 0},
+    { 0,0,0 }
+};
+
+bool _expandvars = false;
+
+TQString expandvars(const char *_input)
+{
+    TQString result = TQString::fromLatin1(_input);
+    if (!_expandvars)
+        return result;
+
+    bool changed = false;
+    int index = result.find("${prefix}");
+    if (index >= 0) {
+        result = result.replace(index, 9, "@CMAKE_INSTALL_PREFIX@");
+        changed = true;
+    }
+    index = result.find("$(prefix)");
+    if (index >= 0) {
+        result = result.replace(index, 9, "@CMAKE_INSTALL_PREFIX@");
+        changed = true;
+    }
+    index = result.find("${datadir}");
+    if (index >= 0) {
+        result = result.replace(index, 10, "@SHARE_INSTALL_PREFIX@");
+        changed = true;
+    }
+    index = result.find("$(datadir)");
+    if (index >= 0) {
+        result = result.replace(index, 10, "@SHARE_INSTALL_PREFIX@");
+        changed = true;
+    }
+    index = result.find("${exec_prefix}");
+    if (index >= 0) {
+        result = result.replace(index, 14, "@EXEC_INSTALL_PREFIX@");
+        changed = true;
+    }
+    index = result.find("$(exec_prefix)");
+    if (index >= 0) {
+        result = result.replace(index, 14, "@EXEC_INSTALL_PREFIX@");
+        changed = true;
+    }
+    index = result.find("${libdir}");
+    if (index >= 0) {
+        result = result.replace(index, 9, "@LIB_INSTALL_DIR@");
+        changed = true;
+    }
+    index = result.find("$(libdir)");
+    if (index >= 0) {
+        result = result.replace(index, 9, "@LIB_INSTALL_DIR@");
+        changed = true;
+    }
+    index = result.find("${includedir}");
+    if (index >= 0) {
+        result = result.replace(index, 20, "@INCLUDE_INSTALL_DIR@");
+        changed = true;
+    }
+    index = result.find("$(includedir)");
+    if (index >= 0) {
+        result = result.replace(index, 20, "@INCLUDE_INSTALL_DIR@");
+        changed = true;
+    }
+    index = result.find("${sysconfdir}");
+    if (index >= 0) {
+        result = result.replace(index, 13, "@SYSCONF_INSTALL_DIR@");
+        changed = true;
+    }
+    index = result.find("$(sysconfdir)");
+    if (index >= 0) {
+        result = result.replace(index, 13, "@SYSCONF_INSTALL_DIR@");
+        changed = true;
+    }
+    if (changed)
+        return expandvars(result.latin1());
+    else
+        return result;
+}
+
+void printResult(const TQString &s)
+{
+    if (s.isEmpty())
+        printf("\n");
+    else
+        printf("%s\n", s.local8Bit().data());
+}
+
+int main(int argc, char **argv)
+{
+    KLocale::setMainCatalogue("kdelibs");
+    KAboutData about("kde-config", "kde-config", "1.0", description, KAboutData::License_GPL, "(C) 2000 Stephan Kulow");
+    KCmdLineArgs::init( argc, argv, &about);
+
+    KCmdLineArgs::addCmdLineOptions( options ); // Add my own options.
+
+    KInstance a("kde-config");
+    (void)KGlobal::dirs(); // trigger the creation
+    (void)KGlobal::config();
+
+    // Get application specific arguments
+    KCmdLineArgs *args = KCmdLineArgs::parsedArgs();
+
+    _expandvars = args->isSet("expandvars");
+
+    if (args->isSet("prefix"))
+    {
+        printResult(expandvars("@CMAKE_INSTALL_PREFIX@"));
+        return 0;
+    }
+
+    if (args->isSet("exec-prefix"))
+    {
+        printResult(expandvars("@EXEC_INSTALL_PREFIX@"));
+        return 0;
+    }
+
+    if (args->isSet("libsuffix"))
+    {
+        TQString tmp(KDELIBSUFF);
+        tmp.remove('"');
+        printResult(expandvars(tmp.local8Bit()));
+        return 0;
+    }
+
+    if (args->isSet("localprefix"))
+    {
+        printResult(KGlobal::dirs()->localkdedir());
+        return 0;
+    }
+
+    if (args->isSet("version"))
+    {
+        printf("%s\n", KDE_VERSION_STRING);
+        return 0;
+    }
+
+    if (args->isSet("types"))
+    {
+        TQStringList types = KGlobal::dirs()->allTypes();
+        types.sort();
+        const char *helptexts[] = {
+            "apps", I18N_NOOP("Applications menu (.desktop files)"),
+            "cgi", I18N_NOOP("CGIs to run from kdehelp"),
+            "config", I18N_NOOP("Configuration files"),
+            "data", I18N_NOOP("Where applications store data"),
+            "exe", I18N_NOOP("Executables in $prefix/bin"),
+            "html", I18N_NOOP("HTML documentation"),
+            "icon", I18N_NOOP("Icons"),
+            "kcfg", I18N_NOOP("Configuration description files"),
+            "lib", I18N_NOOP("Libraries"),
+            "include", I18N_NOOP("Includes/Headers"),
+            "locale", I18N_NOOP("Translation files for KLocale"),
+            "mime", I18N_NOOP("Mime types"),
+            "module", I18N_NOOP("Loadable modules"),
+            "qtplugins", I18N_NOOP("Qt plugins"),
+            "services", I18N_NOOP("Services"),
+            "servicetypes", I18N_NOOP("Service types"),
+            "sound", I18N_NOOP("Application sounds"),
+            "templates", I18N_NOOP("Templates"),
+            "wallpaper", I18N_NOOP("Wallpapers"),
+            "xdgdata-apps", I18N_NOOP("XDG Application menu (.desktop files)"),
+            "xdgdata-dirs", I18N_NOOP("XDG Menu descriptions (.directory files)"),
+            "xdgconf-menu", I18N_NOOP("XDG Menu layout (.menu files)"),
+            "cmake", I18N_NOOP("CMake import modules (.cmake files)"),
+            "tmp", I18N_NOOP("Temporary files (specific for both current host and current user)"),
+            "socket", I18N_NOOP("UNIX Sockets (specific for both current host and current user)"),
+            0, 0
+        };
+        for (TQStringList::ConstIterator it = types.begin(); it != types.end(); ++it)
+        {
+            int index = 0;
+            while (helptexts[index] && *it != helptexts[index]) {
+                index += 2;
+            }
+            if (helptexts[index]) {
+                printf("%s - %s\n", helptexts[index], i18n(helptexts[index+1]).local8Bit().data());
+            } else {
+                printf("%s", i18n("%1 - unknown type\n").arg(*it).local8Bit().data());
+            }
+        }
+        return 0;
+    }
+
+    TQString type = args->getOption("path");
+    if (!type.isEmpty())
+    {
+        printResult(KGlobal::dirs()->resourceDirs(type.latin1()).join(":"));
+        return 0;
+    }
+
+    type = args->getOption("userpath");
+    if (!type.isEmpty())
+    {
+        if ( type == "desktop" )
+            printResult(KGlobalSettings::desktopPath());
+        else if ( type == "autostart" )
+            printResult(KGlobalSettings::autostartPath());
+        else if ( type == "trash" )
+            printResult(KGlobalSettings::trashPath());
+        else if ( type == "document" )
+            printResult(KGlobalSettings::documentPath());
+        else
+            fprintf(stderr, "%s", i18n("%1 - unknown type of userpath\n").arg(type).local8Bit().data() );
+        return 0;
+    }
+
+    type = args->getOption("install");
+    if (!type.isEmpty())
+    {
+        const char *installprefixes[] = {
+            "apps",   "@APPS_INSTALL_DIR@",
+            "config", "@CONFIG_INSTALL_DIR@",
+            "kcfg",   "@KCFG_INSTALL_DIR@",
+            "data",   "@DATA_INSTALL_DIR@",
+            "exe",    "@BIN_INSTALL_DIR@",
+            "html",   "@HTML_INSTALL_DIR@",
+            "icon",   "@ICON_INSTALL_DIR@",
+            "lib",    "@LIB_INSTALL_DIR@",
+            "module", "@PLUGIN_INSTALL_DIR@",
+            "qtplugins", "@PLUGIN_INSTALL_DIR@/plugins",
+            "locale", "@LOCALE_INSTALL_DIR@",
+            "mime",   "@MIME_INSTALL_DIR@",
+            "services", "@SERVICES_INSTALL_DIR@",
+            "servicetypes", "@SERVICETYPES_INSTALL_DIR@",
+            "sound", "@SOUND_INSTALL_DIR@",
+            "templates", "@TEMPLATES_INSTALL_DIR@",
+            "wallpaper", "@WALLPAPER_INSTALL_DIR@",
+            "xdgconf-menu", "@XDG_MENU_INSTALL_DIR@",
+            "xdgdata-apps", "@XDG_APPS_INSTALL_DIR@",
+            "xdgdata-dirs", "@XDG_DIRECTORY_INSTALL_DIR@",
+            "include", "@INCLUDE_INSTALL_DIR@",
+            "cmake", "@CMAKE_INSTALL_DIR@",
+            0, 0
+        };
+        int index = 0;
+        while (installprefixes[index] && type != installprefixes[index]) {
+            index += 2;
+        }
+        if (installprefixes[index]) {
+            printResult(expandvars(installprefixes[index+1]));
+        } else {
+            printResult("NONE"); // no i18n here as for scripts
+        }
+    }
+    return 0;
+}
diff -Nuar kdelibs-orig//kdecore/kdemacros.h.cmake kdelibs/kdecore/kdemacros.h.cmake
--- kdelibs-orig//kdecore/kdemacros.h.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdecore/kdemacros.h.cmake	2010-10-06 12:47:41.000000000 +0300
@@ -0,0 +1,220 @@
+/* This file is part of the KDE libraries
+    Copyright (c) 2002-2003 KDE Team
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#ifndef _KDE_MACROS_H_
+#define _KDE_MACROS_H_
+
+/* Set by configure */
+#cmakedefine __KDE_HAVE_GCC_VISIBILITY 1
+
+/**
+ * The KDE_NO_EXPORT macro marks the symbol of the given variable 
+ * to be hidden. A hidden symbol is stripped during the linking step, 
+ * so it can't be used from outside the resulting library, which is similar
+ * to static. However, static limits the visibility to the current 
+ * compilation unit. hidden symbols can still be used in multiple compilation
+ * units.
+ *
+ * \code
+ * int KDE_NO_EXPORT foo;
+ * int KDE_EXPORT bar;
+ * \end
+ */
+
+#ifdef __KDE_HAVE_GCC_VISIBILITY
+#define KDE_NO_EXPORT __attribute__ ((visibility("hidden")))
+#define KDE_EXPORT __attribute__ ((visibility("default")))
+#elif defined(Q_WS_WIN)
+#define KDE_NO_EXPORT
+#define KDE_EXPORT __declspec(dllexport)
+#else
+#define KDE_NO_EXPORT
+#define KDE_EXPORT
+#endif
+
+/**
+ * KDE_Q_EXPORT_PLUGIN is a workaround for Qt not being able to
+ * cope with symbol visibility.
+ */
+#define KDE_Q_EXPORT_PLUGIN(PLUGIN) \
+  Q_EXTERN_C KDE_EXPORT const char* qt_ucm_query_verification_data(); \
+  Q_EXTERN_C KDE_EXPORT QUnknownInterface* ucm_instantiate(); \
+  Q_EXPORT_PLUGIN(PLUGIN)
+
+/**
+ * The KDE_PACKED can be used to hint the compiler that a particular
+ * structure or class should not contain unnecessary paddings. 
+ */
+
+#ifdef __GNUC__
+#define KDE_PACKED __attribute__((__packed__))
+#else
+#define KDE_PACKED
+#endif
+
+/**
+ * The KDE_DEPRECATED macro can be used to trigger compile-time warnings
+ * with newer compilers when deprecated functions are used.
+ *
+ * For non-inline functions, the macro gets inserted at the very end of the
+ * function declaration, right before the semicolon:
+ *
+ * \code
+ * DeprecatedConstructor() KDE_DEPRECATED;
+ * void deprecatedFunctionA() KDE_DEPRECATED;
+ * int deprecatedFunctionB() const KDE_DEPRECATED;
+ * \endcode
+ *
+ * Functions which are implemented inline are handled differently: for them,
+ * the KDE_DEPRECATED macro is inserted at the front, right before the return
+ * type, but after "static" or "virtual":
+ *
+ * \code
+ * KDE_DEPRECATED void deprecatedInlineFunctionA() { .. }
+ * virtual KDE_DEPRECATED int deprecatedInlineFunctionB() { .. }
+ * static KDE_DEPRECATED bool deprecatedInlineFunctionC() { .. }
+ * \end
+ *
+ * You can also mark whole structs or classes as deprecated, by inserting the
+ * KDE_DEPRECATED macro after the struct/class keyword, but before the
+ * name of the struct/class:
+ *
+ * \code
+ * class KDE_DEPRECATED DeprecatedClass { };
+ * struct KDE_DEPRECATED DeprecatedStruct { };
+ * \endcode
+ *
+ * \note
+ * It does not make much sense to use the KDE_DEPRECATED keyword for a Qt signal;
+ * this is because usually get called by the class which they belong to,
+ * and one'd assume that a class author doesn't use deprecated methods of his
+ * own class. The only exception to this are signals which are connected to
+ * other signals; they get invoked from moc-generated code. In any case, 
+ * printing a warning message in either case is not useful.
+ * For slots, it can make sense (since slots can be invoked directly) but be
+ * aware that if the slots get triggered by a signal, the will get called from
+ * moc code as well and thus the warnings are useless.
+ *
+ * \par
+ * Also note that it is not possible to use KDE_DEPRECATED for classes which
+ * use the k_dcop keyword (to indicate a DCOP interface declaration); this is
+ * because the dcopidl program would choke on the unexpected declaration
+ * syntax.
+ */
+
+#ifndef KDE_DEPRECATED
+#if __GNUC__ - 0 > 3 || (__GNUC__ - 0 == 3 && __GNUC_MINOR__ - 0 >= 2)
+  /* gcc >= 3.2 */
+# define KDE_DEPRECATED __attribute__ ((deprecated))
+#elif defined(_MSC_VER) && (_MSC_VER >= 1300)
+  /* msvc >= 7 */
+# define KDE_DEPRECATED __declspec(deprecated)
+#else
+# define KDE_DEPRECATED
+#endif
+#endif
+
+/**
+ * The KDE_ISLIKELY macro tags a boolean expression as likely to evaluate to
+ * 'true'. When used in an if ( ) statement, it gives a hint to the compiler
+ * that the following codeblock is likely to get executed. Providing this
+ * information helps the compiler to optimize the code for better performance.
+ * Using the macro has an insignificant code size or runtime memory footprint impact.
+ * The code semantics is not affected.
+ *
+ * \note
+ * Providing wrong information ( like marking a condition that almost never
+ * passes as 'likely' ) will cause a significant runtime slowdown. Therefore only
+ * use it for cases where you can be sure about the odds of the expression to pass
+ * in all cases ( independent from e.g. user configuration ).
+ *
+ * \par
+ * The KDE_ISUNLIKELY macro tags an expression as unlikely evaluating to 'true'. 
+ *
+ * \note
+ * Do NOT use ( !KDE_ISLIKELY(foo) ) as an replacement for KDE_ISUNLIKELY !
+ *
+ * \code
+ * if ( KDE_ISUNLIKELY( testsomething() ) )
+ *     abort();     // assume its unlikely that the application aborts
+ * \endcode
+ */
+#if __GNUC__ - 0 >= 3
+# define KDE_ISLIKELY( x )    __builtin_expect(!!(x),1)
+# define KDE_ISUNLIKELY( x )  __builtin_expect(!!(x),0)
+#else
+# define KDE_ISLIKELY( x )   ( x )
+# define KDE_ISUNLIKELY( x )  ( x )
+#endif
+
+/**
+ * This macro, and it's friends going up to 10 reserve a fixed number of virtual
+ * functions in a class.  Because adding virtual functions to a class changes the
+ * size of the vtable, adding virtual functions to a class breaks binary
+ * compatibility.  However, by using this macro, and decrementing it as new
+ * virtual methods are added, binary compatibility can still be preserved.
+ *
+ * \note The added functions must be added to the header at the same location
+ * as the macro; changing the order of virtual functions in a header is also
+ * binary incompatible as it breaks the layout of the vtable.
+ */
+
+#define RESERVE_VIRTUAL_1 \
+    virtual void reservedVirtual1() {}
+#define RESERVE_VIRTUAL_2 \
+    virtual void reservedVirtual2() {} \
+    RESERVE_VIRTUAL_1
+#define RESERVE_VIRTUAL_3 \
+    virtual void reservedVirtual3() {} \
+    RESERVE_VIRTUAL_2
+#define RESERVE_VIRTUAL_4 \
+    virtual void reservedVirtual4() {} \
+    RESERVE_VIRTUAL_3
+#define RESERVE_VIRTUAL_5 \
+    virtual void reservedVirtual5() {} \
+    RESERVE_VIRTUAL_4
+#define RESERVE_VIRTUAL_6 \
+    virtual void reservedVirtual6() {} \
+    RESERVE_VIRTUAL_5
+#define RESERVE_VIRTUAL_7 \
+    virtual void reservedVirtual7() {} \
+    RESERVE_VIRTUAL_6
+#define RESERVE_VIRTUAL_8 \
+    virtual void reservedVirtual8() {} \
+    RESERVE_VIRTUAL_7
+#define RESERVE_VIRTUAL_9 \
+    virtual void reservedVirtual9() {} \
+    RESERVE_VIRTUAL_8
+#define RESERVE_VIRTUAL_10 \
+    virtual void reservedVirtual10() {} \
+    RESERVE_VIRTUAL_9
+
+/**
+ * The KDE_WEAK_SYMBOL macro can be used to tell the compiler that
+ * a particular function should be a weak symbol (that e.g. may be overriden
+ * in another library, -Bdirect will not bind this symbol directly)
+ */
+
+#ifdef __GNUC__
+#define KDE_WEAK_SYMBOL __attribute__((__weak__))
+#else
+#define KDE_WEAK_SYMBOL
+#endif
+
+#endif /* _KDE_MACROS_H_ */
diff -Nuar kdelibs-orig//kdecore/malloc/CMakeLists.txt kdelibs/kdecore/malloc/CMakeLists.txt
--- kdelibs-orig//kdecore/malloc/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdecore/malloc/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,18 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+include_directories(
+  ${CMAKE_BINARY_DIR}
+)
+
+tde_add_library( klmalloc STATIC_PIC
+  SOURCES malloc.c
+)
diff -Nuar kdelibs-orig//kdecore/network/CMakeLists.txt kdelibs/kdecore/network/CMakeLists.txt
--- kdelibs-orig//kdecore/network/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdecore/network/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,58 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_BINARY_DIR}/kdecore
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kresolver.h kreverseresolver.h ksocketaddress.h
+    ksocketbase.h ksocketdevice.h kclientsocketbase.h
+    kstreamsocket.h kserversocket.h kdatagramsocket.h
+    kmulticastsocketdevice.h kmulticastsocket.h
+    knetworkinterface.h khttpproxysocketdevice.h
+    ksockssocketdevice.h kbufferedsocket.h kiobuffer.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other files ###############################
+
+install( FILES ipv6blacklist DESTINATION ${CONFIG_INSTALL_DIR} )
+
+
+##### kdecorenetwork ############################
+
+set( target kdecorenetwork )
+
+set( ${target}_SRCS
+  kresolver.cpp kresolvermanager.cpp kresolverworkerbase.cpp
+  ksocketaddress.cpp kresolverstandardworkers.cpp
+  kreverseresolver.cpp ksocketdevice.cpp ksocketbase.cpp
+  kclientsocketbase.cpp kstreamsocket.cpp kserversocket.cpp
+  kdatagramsocket.cpp khttpproxysocketdevice.cpp
+  ksockssocketdevice.cpp kbufferedsocket.cpp ksocketbuffer.cpp
+  ksrvresolverworker.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kdecore/svgicons/CMakeLists.txt kdelibs/kdecore/svgicons/CMakeLists.txt
--- kdelibs-orig//kdecore/svgicons/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdecore/svgicons/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,42 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${LIBART_INCLUDE_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    ksvgiconengine.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### kdesvgicons ###############################
+
+set( target kdesvgicons )
+
+set( ${target}_SRCS
+  ksvgiconengine.cpp ksvgiconpainter.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC
+  SOURCES ${${target}_SRCS}
+  LINK ${LIBART_LIBRARIES}
+)
diff -Nuar kdelibs-orig//kded/CMakeLists.txt kdelibs/kded/CMakeLists.txt
--- kdelibs-orig//kded/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kded/CMakeLists.txt	2010-11-16 01:13:50.000000000 +0200
@@ -0,0 +1,121 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES kdedmodule.h DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES kdedmodule.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+install( FILES applications.menu DESTINATION ${XDG_MENU_INSTALL_DIR} )
+install( FILES kded.upd DESTINATION ${KCONF_UPDATE_INSTALL_DIR} )
+
+
+#### kded #######################################
+
+set( target kded )
+
+set( ${target}_SRCS
+  kded.cpp kdedmodule.cpp
+)
+
+# we must to export kdeinit_kded-shared because various
+# modules need this library
+tde_add_kdeinit_executable( ${target} AUTOMOC EXPORT
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+)
+
+
+#### kbuildsycoca ###############################
+
+set( target kbuildsycoca )
+
+set( ${target}_SRCS
+  kbuildsycoca.cpp kbuildservicetypefactory.cpp
+  kbuildservicefactory.cpp kbuildservicegroupfactory.cpp
+  kbuildimageiofactory.cpp kbuildprotocolinfofactory.cpp
+  kctimefactory.cpp vfolder_menu.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+)
+
+
+#### kdontchangethehostname #####################
+
+set( target kdontchangethehostname )
+
+set( ${target}_SRCS
+  khostname.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kde-menu ###################################
+
+set( target kde-menu )
+
+set( ${target}_SRCS
+  kde-menu.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kmimelist ##################################
+
+set( target kmimelist )
+
+set( ${target}_SRCS
+  kmimelist.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdefx/CMakeLists.txt kdelibs/kdefx/CMakeLists.txt
--- kdelibs-orig//kdefx/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdefx/CMakeLists.txt	2010-11-26 22:42:01.000000000 +0200
@@ -0,0 +1,52 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kpixmap.h kpixmapsplitter.h kpixmapeffect.h
+    kimageeffect.h kdrawutil.h kstyle.h kcpuinfo.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### libkdefx ##################################
+
+set( target kdefx )
+
+set( ${target}_SRCS
+  kpixmap.cpp kpixmapsplitter.cpp kpixmapeffect.cpp
+  kimageeffect.cpp kdrawutil.cpp kstyle.cpp kcpuinfo.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK ${TQT_LIBRARIES} ${XRENDER_LIBRARIES}
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeprint/CMakeLists.txt kdelibs/kdeprint/CMakeLists.txt
--- kdelibs-orig//kdeprint/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,129 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( management )
+add_subdirectory( lpdunix )
+if( CUPS_FOUND )
+  add_subdirectory( cups )
+endif( CUPS_FOUND )
+add_subdirectory( lpr )
+add_subdirectory( rlpr )
+add_subdirectory( ext )
+add_subdirectory( filters )
+add_subdirectory( pics )
+add_subdirectory( tools )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kded
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kprinter.h kprintaction.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+install( FILES
+    kprintdialogpage.h kpreloadobject.h kmmanager.h
+    kmprinter.h kmobject.h kprintdialog.h driver.h
+    kmjobmanager.h kmjob.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kdeprint )
+
+
+##### other data ################################
+
+install( FILES kprintpreviewui.rc DESTINATION ${CONFIG_INSTALL_DIR}/ui )
+install( FILES testprint.ps specials.desktop DESTINATION ${DATA_INSTALL_DIR}/kdeprint )
+install( FILES kdeprintd.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+install( FILES kdeprintrc DESTINATION ${CONFIG_INSTALL_DIR} )
+install( FILES kdeprintrc.upd DESTINATION ${KCONF_UPDATE_INSTALL_DIR} )
+
+
+##### driverparse ###############################
+
+set( target driverparse )
+
+tde_add_library( ${target} STATIC_PIC
+  SOURCES driverparse.c
+)
+
+
+##### kded_kdeprintd ############################
+
+set( target kded_kdeprintd )
+
+set( ${target}_SRCS
+  kdeprintd.cpp kprintprocess.cpp kdeprintd.skel
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared kdeinit_kded-shared
+  DEPENDENCIES dcopidl dcopidl2cpp
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+#### kdeprint ###################################
+
+set( target kdeprint )
+
+set( ${target}_SRCS
+  kmfactory.cpp kmjob.cpp kmjobmanager.cpp kmmanager.cpp
+  kmprinter.cpp kmuimanager.cpp kmvirtualmanager.cpp
+  driver.cpp driveritem.cpp droptionview.cpp driverview.cpp
+  kmdbentry.cpp kprintpreview.cpp kprintdialog.cpp
+  kprinter.cpp kprinterimpl.cpp kprintdialogpage.cpp
+  kpcopiespage.cpp kpdriverpage.cpp kprinterpropertydialog.cpp
+  kpgeneralpage.cpp kpqtpage.cpp kmthreadjob.cpp
+  kpipeprocess.cpp kpfilterpage.cpp kmspecialmanager.cpp
+  kdeprintcheck.cpp plugincombobox.cpp kpreloadobject.cpp
+  kfilelist.cpp kprintaction.cpp kpfileselectpage.cpp
+  treecombobox.cpp kxmlcommand.cpp util.cpp printerfilter.cpp
+  marginpreview.cpp marginvaluewidget.cpp marginwidget.cpp
+  kpmarginpage.cpp messagewindow.cpp posterpreview.cpp
+  kpposterpage.cpp foomatic2loader.cpp fooparser.cpp
+  fooscanner.cpp ppdparser.cpp ppdscanner.cpp ppdloader.cpp
+  kmfactory.skel
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK kio-shared
+  DEPENDENCIES dcopidl dcopidl2cpp
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+set_target_properties( ${target}-shared PROPERTIES COMPILE_FLAGS -D_KDEPRINT_COMPILE )
diff -Nuar kdelibs-orig//kdeprint/cups/CMakeLists.txt kdelibs/kdeprint/cups/CMakeLists.txt
--- kdelibs-orig//kdeprint/cups/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/cups/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,98 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( cupsdconf2 )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -D_KDEPRINT_COMPILE
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore/network
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kdeprint
+  ${CMAKE_SOURCE_DIR}/kdeprint/management
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES cups.print DESTINATION ${DATA_INSTALL_DIR}/kdeprint/plugins )
+install( FILES preview.png preview-mini.png DESTINATION ${DATA_INSTALL_DIR}/kdeprint )
+
+
+#### kdeprint_cups ##############################
+
+set( target kdeprint_cups )
+
+set( ${target}_SRCS
+  cupsinfos.cpp ipprequest.cpp kmcupsfactory.cpp
+  kmcupsjobmanager.cpp kmcupsmanager.cpp kmcupsuimanager.cpp
+  kmpropbanners.cpp kmwbanners.cpp kmwipp.cpp kmwippselect.cpp
+  kcupsprinterimpl.cpp kmcupsconfigwidget.cpp kmconfigcups.cpp
+  kmconfigcupsdir.cpp kmwippprinter.cpp kmwfax.cpp kmwquota.cpp
+  kmpropquota.cpp kmwusers.cpp kmpropusers.cpp kpschedulepage.cpp
+  image.cpp imagepreview.cpp imageposition.cpp kpimagepage.cpp
+  kptextpage.cpp kphpgl2page.cpp cupsaddsmb2.cpp
+  kmwother.cpp ippreportdlg.cpp kptagspage.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeprint_management-shared ${CUPS_LIBRARIES}
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+#### make_driver_db_cups ########################
+
+set( target make_driver_db_cups )
+
+set( ${target}_SRCS
+  make_driver_db_cups.c
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK driverparse-static kdefakes-shared ${ZLIB_LIBRARIES} ${DL_LIBRARIES}
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### cupsdoprint ################################
+
+set( target cupsdoprint )
+
+set( ${target}_SRCS
+  cupsdoprint.c
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdefakes-shared ${CUPS_LIBRARIES}
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeprint/cups/cupsdconf2/CMakeLists.txt kdelibs/kdeprint/cups/cupsdconf2/CMakeLists.txt
--- kdelibs-orig//kdeprint/cups/cupsdconf2/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/cups/cupsdconf2/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,58 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES
+    kde_logo.png cups_logo.png cupsd.conf.template
+  DESTINATION ${DATA_INSTALL_DIR}/kdeprint )
+
+
+#### cupsdconf ##################################
+
+set( target cupsdconf )
+
+set( ${target}_SRCS
+  cupsdconf.cpp cupsddialog.cpp cupsdpage.cpp cupsdcomment.cpp
+  cupsdsplash.cpp cupsdserverpage.cpp cupsdlogpage.cpp
+  cupsdjobspage.cpp cupsdfilterpage.cpp qdirlineedit.cpp
+  cupsddirpage.cpp portdialog.cpp cupsdnetworkpage.cpp
+  editlist.cpp cupsdbrowsingpage.cpp browsedialog.cpp
+  cupsdsecuritypage.cpp locationdialog.cpp addressdialog.cpp
+  cups-util.c qdirmultilineedit.cpp sizewidget.cpp main.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared ${CUPS_LIBRARIES}
+)
diff -Nuar kdelibs-orig//kdeprint/ext/CMakeLists.txt kdelibs/kdeprint/ext/CMakeLists.txt
--- kdelibs-orig//kdeprint/ext/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/ext/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,51 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -D_KDEPRINT_COMPILE
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kdeprint
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES ext.print DESTINATION ${DATA_INSTALL_DIR}/kdeprint/plugins )
+
+
+##### kdeprint_ext ##############################
+
+set( target kdeprint_ext )
+
+set( ${target}_SRCS
+  kmextfactory.cpp kmextmanager.cpp kextprinterimpl.cpp
+  kmextuimanager.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeprint-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeprint/filters/CMakeLists.txt kdelibs/kdeprint/filters/CMakeLists.txt
--- kdelibs-orig//kdeprint/filters/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/filters/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,23 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    enscript.desktop enscript.xml psnup.desktop psnup.xml
+    imagetops.desktop imagetops.xml pdfwrite.desktop
+    pdfwrite.xml psbook1.desktop psbook1.xml psbook2.desktop
+    psbook2.xml psbook.desktop psbook.xml psselect.desktop
+    psselect.xml ps2pdf.desktop ps2pdf.xml pdf2ps.desktop
+    pdf2ps.xml poster.desktop poster.xml
+  DESTINATION ${DATA_INSTALL_DIR}/kdeprint/filters )
+
+install( PROGRAMS imagetops DESTINATION ${BIN_INSTALL_DIR} )
diff -Nuar kdelibs-orig//kdeprint/lpdunix/CMakeLists.txt kdelibs/kdeprint/lpdunix/CMakeLists.txt
--- kdelibs-orig//kdeprint/lpdunix/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/lpdunix/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,53 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -D_KDEPRINT_COMPILE
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kdeprint
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES lpdunix.print DESTINATION ${DATA_INSTALL_DIR}/kdeprint/plugins )
+
+
+#### kdeprint_lpdunix ###########################
+
+set( target kdeprint_lpdunix )
+
+set( ${target}_SRCS
+  kmlpdunixfactory.cpp kmlpdunixmanager.cpp
+  klpdunixprinterimpl.cpp kmlpdunixuimanager.cpp
+)
+
+tde_add_kpart( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdeprint-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeprint/lpr/CMakeLists.txt kdelibs/kdeprint/lpr/CMakeLists.txt
--- kdelibs-orig//kdeprint/lpr/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/lpr/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,81 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -D_KDEPRINT_COMPILE
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kdeprint
+  ${CMAKE_SOURCE_DIR}/kdeprint/management
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    printcapentry.h lprhandler.h lprsettings.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kdeprint/lpr )
+
+
+##### other data ################################
+
+install( FILES lpr.print DESTINATION ${DATA_INSTALL_DIR}/kdeprint/plugins )
+install( FILES apsdriver1 apsdriver2 lprngtooldriver1 DESTINATION ${DATA_INSTALL_DIR}/kdeprint )
+
+
+#### kdeprint_lpr ###############################
+
+set( target kdeprint_lpr )
+
+set( ${target}_SRCS
+  printcapreader.cpp lprhandler.cpp matichandler.cpp
+  klprfactory.cpp kmlprmanager.cpp kmlpruimanager.cpp
+  lpchelper.cpp lpqhelper.cpp kmlprjobmanager.cpp
+  matichelper.cpp klprprinterimpl.cpp printcapentry.cpp
+  lprsettings.cpp kmconfiglpr.cpp apshandler.cpp
+  lprngtoolhandler.cpp editentrydialog.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeprint_management-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+#### make_driver_db_lpr #########################
+
+set( target make_driver_db_lpr )
+
+set( ${target}_SRCS
+  make_driver_db_lpr.c
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK driverparse-static kdefakes-shared ${DL_LIBRARIES}
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeprint/management/CMakeLists.txt kdelibs/kdeprint/management/CMakeLists.txt
--- kdelibs-orig//kdeprint/management/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/management/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,112 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -D_KDEPRINT_COMPILE
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kdeprint
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kmmainview.h kmjobviewer.h kmprinterpage.h
+    kiconselectaction.h kmtimer.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kdeprint )
+
+
+##### other data ################################
+
+install( FILES
+    tileup.png tiledown.png side.png
+  DESTINATION ${DATA_INSTALL_DIR}/kdeprint )
+
+
+#### kdeprint_management ########################
+
+set( target kdeprint_management )
+
+set( ${target}_SRCS
+  kmdbcreator.cpp kmdriverdb.cpp kmdriverdbwidget.cpp
+  kmiconview.cpp kminfopage.cpp kmmainview.cpp kmpages.cpp
+  kmprinterview.cpp kmjobviewer.cpp jobitem.cpp kmpropwidget.cpp
+  kmpropcontainer.cpp kmpropertypage.cpp kmpropgeneral.cpp
+  cjanuswidget.cpp kmpropmembers.cpp kmpropbackend.cpp
+  kmpropdriver.cpp kmlistview.cpp kminstancepage.cpp
+  kmtimer.cpp kmwizard.cpp kmwizardpage.cpp kmwinfopage.cpp
+  kmwpassword.cpp kmwsocketutil.cpp kmwbackend.cpp
+  kmwsocket.cpp kmwdriver.cpp kmwdriverselect.cpp
+  kmwdrivertest.cpp kmwinfobase.cpp kmwname.cpp kmwend.cpp
+  kmwclass.cpp kmwlpd.cpp kmwfile.cpp kmdriverdialog.cpp
+  kmwsmb.cpp smbview.cpp kmconfigdialog.cpp kmconfigpage.cpp
+  kmconfiggeneral.cpp kmspecialprinterdlg.cpp kmwlocal.cpp
+  kiconselectaction.cpp kmconfigpreview.cpp sidepixmap.cpp
+  pluginaction.cpp kxmlcommanddlg.cpp kxmlcommandselector.cpp
+  kmconfigcommand.cpp kmconfigfilter.cpp kmconfigfonts.cpp
+  kmconfigjobs.cpp networkscanner.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK kdeprint-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+#### libkdeprint_management_module ##############
+
+set( target libkdeprint_management_module )
+
+set( ${target}_SRCS
+  kdeprint_management_module.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeprint_management-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+#### kaddprinterwizard ##########################
+
+set( target kaddprinterwizard )
+
+set( ${target}_SRCS
+  kaddprinterwizard.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeprint-shared
+)
diff -Nuar kdelibs-orig//kdeprint/pics/CMakeLists.txt kdelibs/kdeprint/pics/CMakeLists.txt
--- kdelibs-orig//kdeprint/pics/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/pics/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,41 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    kdeprint_collate.png kdeprint_collate_reverse.png
+    kdeprint_color.png kdeprint_duplex_none.png
+    kdeprint_duplex_long.png kdeprint_duplex_short.png
+    kdeprint_grayscale.png kdeprint_landscape.png
+    kdeprint_nup1.png kdeprint_nup2.png kdeprint_nup4.png
+    kdeprint_portrait.png kdeprint_revlandscape.png
+    kdeprint_revportrait.png kdeprint_uncollate.png
+    kdeprint_uncollate_reverse.png kdeprint_nupother.png
+    kdeprint_prettyprint.png
+  DESTINATION ${DATA_INSTALL_DIR}/kdeprint/pics )
+
+tde_install_icons(
+    kdeprint_job kdeprint_job_error kdeprint_job_process
+    kdeprint_job_stopped kdeprint_printer kdeprint_printer_class
+    kdeprint_printer_class_stopped kdeprint_printer_defect
+    kdeprint_printer_remote kdeprint_printer_remote_stopped
+    kdeprint_printer_stopped kdeprint_printer_remote_process
+    kdeprint_printer_process kdeprint_printer_class_process
+    kdeprint_computer kdeprint_printer_infos history
+    kdeprint_printer_users filterstop kdeprint_job_completed
+    kdeprint_job_cancelled package_utilities kdeprint_enableprinter
+    kdeprint_stopprinter kdeprint_addprinter kdeprint_addpseudo
+    kdeprint_configmgr kdeprint_configsrv kdeprint_defaulthard
+    kdeprint_defaultsoft kdeprint_report kdeprint_testprinter
+    kdeprint_uploadsmb kdeprint_restartsrv kdeprint_inklevel
+    kdeprint_printstate kdeprint_queuestate
+  DESTINATION ${DATA_INSTALL_DIR}/kdeprint/icons )
diff -Nuar kdelibs-orig//kdeprint/rlpr/CMakeLists.txt kdelibs/kdeprint/rlpr/CMakeLists.txt
--- kdelibs-orig//kdeprint/rlpr/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/rlpr/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,55 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -D_KDEPRINT_COMPILE
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kdeprint
+  ${CMAKE_SOURCE_DIR}/kdeprint/management
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES rlpr.print DESTINATION ${DATA_INSTALL_DIR}/kdeprint/plugins )
+
+
+##### kdeprint_rlpr #############################
+
+set( target kdeprint_rlpr )
+
+set( ${target}_SRCS
+  kmrlprfactory.cpp kmrlprmanager.cpp krlprprinterimpl.cpp
+  kmrlpruimanager.cpp kmwrlpr.cpp kmproprlpr.cpp
+  kmproxywidget.cpp kmconfigproxy.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeprint_management-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeprint/tools/CMakeLists.txt kdelibs/kdeprint/tools/CMakeLists.txt
--- kdelibs-orig//kdeprint/tools/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/tools/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,12 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( escputil )
diff -Nuar kdelibs-orig//kdeprint/tools/escputil/CMakeLists.txt kdelibs/kdeprint/tools/escputil/CMakeLists.txt
--- kdelibs-orig//kdeprint/tools/escputil/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeprint/tools/escputil/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,46 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES escputil.desktop DESTINATION ${DATA_INSTALL_DIR}/kdeprint/tools )
+
+
+##### kdeprint_tool_escputil ####################
+
+set( target kdeprint_tool_escputil )
+
+set( ${target}_SRCS
+  escpwidget.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeui-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdesu/CMakeLists.txt kdelibs/kdesu/CMakeLists.txt
--- kdelibs-orig//kdesu/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdesu/CMakeLists.txt	2010-11-26 01:29:31.000000000 +0200
@@ -0,0 +1,61 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    defaults.h client.h process.h kdesu_pty.h
+    kcookie.h su.h ssh.h stub.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kdesu )
+
+
+##### libkdesu ##################################
+
+set( target kdesu )
+
+set( ${target}_SRCS
+  client.cpp process.cpp kcookie.cpp
+  su.cpp ssh.cpp stub.cpp kdesu_pty.cpp
+)
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK kdecore-shared ${LIB_UTIL}
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+tde_install_symlink( kdesu_pty.h ${INCLUDE_INSTALL_DIR}/kdesu/pty.h )
+
+
+##### kdesu_stub ################################
+
+tde_add_executable( kdesu_stub
+  SOURCES kdesu_stub.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeui/about/CMakeLists.txt kdelibs/kdeui/about/CMakeLists.txt
--- kdelibs-orig//kdeui/about/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeui/about/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,21 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+  bar-bottom-left.png bar-top-right.png bar-bottom-middle.png bottom-left.png
+  box-middle-left.png top-left.png  bar-bottom-right.png bottom-middle.png
+  box-middle-right.png top-middle.png  bar-middle-left.png bottom-right.png
+  box-top-left.png bar-middle-right.png box-bottom-left.png box-top-middle.png
+  bar-top-left.png box-bottom-middle.png box-top-right.png bar-top-middle.png
+  box-bottom-right.png kde_infopage.css kde_infopage_rtl.css
+ DESTINATION ${DATA_INSTALL_DIR}/kdeui/about )
diff -Nuar kdelibs-orig//kdeui/CMakeLists.txt kdelibs/kdeui/CMakeLists.txt
--- kdelibs-orig//kdeui/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeui/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,172 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+if( BUILD_KDEUI_TESTS )
+  add_subdirectory( tests )
+endif( BUILD_KDEUI_TESTS )
+
+add_subdirectory( about )
+add_subdirectory( kdetrayproxy )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${FREETYPE_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kprogressbox.h kprogress.h kcolordlg.h
+    kcolordialog.h kselect.h
+    kdatepik.h kdatepicker.h kdatetbl.h kfontdialog.h kpopupmenu.h
+    kfontrequester.h ktabctl.h kstatusbar.h
+    kmainwindow.h kmainwindowiface.h ktoolbar.h kmenubar.h
+    knuminput.h kseparator.h klineedit.h
+    krestrictedline.h kcolorbutton.h kcolorbtn.h
+    ksystemtray.h kdockwindow.h kbuttonbox.h
+    keditcl.h kled.h keditlistbox.h
+    kwizard.h kkeydialog.h kkeybutton.h
+    kurllabel.h kruler.h kcursor.h
+    klineeditdlg.h kinputdialog.h kactivelabel.h
+    kcharselect.h kcolordrag.h qxembed.h
+    knumvalidator.h kdialog.h kdialogbase.h
+    kjanuswidget.h kaboutdialog.h
+    kauthicon.h kmessagebox.h ksharedpixmap.h
+    kdualcolorbtn.h kdualcolorbutton.h ktoolbarbutton.h
+    ktoolbarradiogroup.h ktextbrowser.h
+    kaction.h kactioncollection.h kactionclasses.h khelpmenu.h kswitchlanguagedialog.h
+    kcmodule.h kcmenumngr.h kpanelmenu.h kpanelappmenu.h
+    kactionshortcutlist.h kstdaction.h kcombobox.h
+    kiconview.h klistview.h klistbox.h kbugreport.h kpassdlg.h
+    kxmlguiclient.h kxmlgui.h kxmlguibuilder.h kxmlguifactory.h
+    kpixmapio.h kwordwrap.h
+    kedittoolbar.h kdockwidget.h kanimwidget.h
+    krootpixmap.h kaboutkde.h kaboutapplication.h
+    kpanelapplet.h kpushbutton.h kdcopactionproxy.h kcolorcombo.h
+    kpanelextension.h kcompletionbox.h ksqueezedtextlabel.h
+    kcommand.h kwindowlistmenu.h kfontcombo.h kaccelgen.h ktip.h
+    kdatewidget.h karrowbutton.h kguiitem.h kstdguiitem.h
+    kstringvalidator.h kwindowinfo.h
+    ktextedit.h kpassivepopup.h
+    kdatetimewidget.h ktimewidget.h ktimezonewidget.h kscrollview.h
+    kspell.h ksconfig.h kspelldlg.h ksyntaxhighlighter.h
+    ktabbar.h ktabwidget.h ksplashscreen.h kconfigdialog.h
+    kactionselector.h klanguagebutton.h klistviewsearchline.h
+    kpixmapregionselectorwidget.h kpixmapregionselectordialog.h
+    kiconviewsearchline.h ktoolbarlabelaction.h kshortcutdialog.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES
+    aboutkde.png ktip-bulb.png ktip-background.png
+  DESTINATION ${DATA_INSTALL_DIR}/kdeui/pics )
+
+install( FILES
+    ui_standards.rc
+  DESTINATION ${CONFIG_INSTALL_DIR}/ui )
+
+install( PROGRAMS
+    preparetips
+  DESTINATION ${BIN_INSTALL_DIR} )
+
+
+##### libkdeui ##################################
+
+set( target kdeui )
+
+set( ${target}_SRCS
+  qxembed.cpp ksharedpixmap.cpp kpixmapio.cpp
+  kpopupmenu.cpp ktoolbar.cpp kaction.cpp kstdaction.cpp
+  kactioncollection.cpp kactionclasses.cpp
+  kurllabel.cpp kmenubar.cpp kinputdialog.cpp
+  knuminput.cpp klineedit.cpp klistview.cpp kprogress.cpp
+  kprogressbox.cpp kcolordialog.cpp kselect.cpp kdatepicker.cpp
+  kdatetbl.cpp kfontrequester.cpp kfontdialog.cpp ktabctl.cpp
+  kstatusbar.cpp kmainwindow.cpp
+  keditlistbox.cpp kscrollview.cpp
+  kseparator.cpp krestrictedline.cpp
+  kcolorbutton.cpp ksystemtray.cpp
+  kbuttonbox.cpp keditcl1.cpp keditcl2.cpp kled.cpp
+  kshortcutdialog_simple.ui kshortcutdialog_advanced.ui
+  kshortcutdialog.cpp kkeybutton.cpp kkeydialog.cpp
+  kruler.cpp kcursor.cpp klineeditdlg.cpp
+  kcharselect.cpp kcolordrag.cpp
+  knumvalidator.cpp kdialog.cpp kdialogbase.cpp
+  kjanuswidget.cpp kaboutdialog.cpp
+  kauthicon.cpp kmessagebox.cpp kdualcolorbutton.cpp
+  ktoolbarradiogroup.cpp ktoolbarbutton.cpp
+  ktextbrowser.cpp khelpmenu.cpp kswitchlanguagedialog.cpp
+  kcmenumngr.cpp kpanelmenu.cpp
+  kiconview.cpp klistbox.cpp kwordwrap.cpp kbugreport.cpp
+  kcombobox.cpp kpassdlg.cpp kxmlguiclient.cpp kxmlguifactory.cpp
+  kxmlguifactory_p.cpp kxmlguibuilder.cpp kedittoolbar.cpp
+  kpanelappmenu.cpp kdockwidget.cpp kdockwidget_private.cpp
+  kanimwidget.cpp krootpixmap.cpp kaboutkde.cpp
+  kaboutapplication.cpp kpanelapplet.cpp kdcopactionproxy.cpp
+  kcolorcombo.cpp kpushbutton.cpp kpanelextension.cpp
+  kcompletionbox.cpp ksqueezedtextlabel.cpp kcmodule.cpp
+  kcommand.cpp kwindowlistmenu.cpp kfontcombo.cpp ktip.cpp
+  kdatewidget.cpp karrowbutton.cpp kmainwindowiface.cpp
+  kmainwindowiface.skel kguiitem.cpp kstdguiitem.cpp
+  kstringvalidator.cpp kactivelabel.cpp
+  kwindowinfo.cpp ktextedit.cpp kwizard.cpp kpassivepopup.cpp
+  ktoolbarhandler.cpp kdatetimewidget.cpp ktimewidget.cpp ktimezonewidget.cpp
+  ksconfig.cpp kspelldlg.cpp
+  kspell.cpp ksyntaxhighlighter.cpp ktabbar.cpp ktabwidget.cpp
+  ksplashscreen.cpp kspellui.ui kconfigdialog.cpp
+  kactionselector.cpp klanguagebutton.cpp klistviewsearchline.cpp
+  kpixmapregionselectorwidget.cpp kpixmapregionselectordialog.cpp
+  kwhatsthismanager.cpp kiconviewsearchline.cpp
+  ktoolbarlabelaction.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK kdecore-shared ${FREETYPE_LIBRARIES} ${FONTCONFIG_LIBRARIES}
+  DEPENDENCIES dcopidl
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### libkspell #################################
+
+set( target kspell )
+
+configure_file( ${CMAKE_SOURCE_DIR}/cmake/modules/template_dummy_cpp.cmake dummy.cpp COPYONLY )
+
+tde_add_library( ${target} SHARED
+  SOURCES ${CMAKE_CURRENT_BINARY_DIR}/dummy.cpp
+  VERSION 4.2.0
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeui/dummy.cpp.cmake kdelibs/kdeui/dummy.cpp.cmake
--- kdelibs-orig//kdeui/dummy.cpp.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeui/dummy.cpp.cmake	2010-09-12 18:37:49.000000000 +0300
@@ -0,0 +1,5 @@
+#ifdef _AIX
+namespace {
+void *not_empty_file;
+}
+#endif
diff -Nuar kdelibs-orig//kdeui/kdetrayproxy/CMakeLists.txt kdelibs/kdeui/kdetrayproxy/CMakeLists.txt
--- kdelibs-orig//kdeui/kdetrayproxy/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeui/kdetrayproxy/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,50 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kded
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES
+    kdetrayproxy.desktop
+  DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+
+
+##### kded_kdetrayproxy #########################
+
+set( target kded_kdetrayproxy )
+
+set( ${target}_SRCS
+  kdetrayproxy.cpp module.cpp module.skel
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdecore-shared kdeinit_kded-shared
+  DEPENDENCIES dcopidl
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kdeui/tests/CMakeLists.txt kdelibs/kdeui/tests/CMakeLists.txt
--- kdelibs-orig//kdeui/tests/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdeui/tests/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,54 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/dcop
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+set( test_PROGS
+  kaboutdialogtest kblendtest kbuttonboxtest kcharselecttest
+  kcolortest kcolordlgtest kcomboboxtest kcompletiontest
+  kdatepicktest kdatewidgettest kdialogbasetest
+  kdockwidgetdemo kdockwidgettest
+  kdualcolortest keditlistboxtest kfontdialogtest
+  kgradienttest khashtest kdesattest
+  kledtest klineedittest klineeditdlgtest
+  kmessageboxtest knuminputtest
+  kpalettetest
+  kpopuptest kprogresstest krulertest kseparatortest
+  kstatusbartest ktabctltest
+  kunbalancedgrdtest kwindowtest kwizardtest
+  itemcontainertest kpanelmenutest kedittest
+  kxmlguitest kaccelgentest ksystemtraytest klistviewtest
+  ktextedittest kmainwindowtest kmainwindowrestoretest
+  kactiontest kdatetimewidgettest ktimewidgettest
+  kspelltest kinputdialogtest ktabwidgettest kwordwraptest
+  kdocktest qxembedtest ksqueezedtextlabeltest
+  kpixmapregionselectordialogtest kjanuswidgettest ktoolbarlabelactiontest
+)
+
+foreach( PROG ${test_PROGS} )
+  tde_add_executable( ${PROG} AUTOMOC SOURCES "${PROG}.cpp" LINK kdeui-shared )
+endforeach( PROG ${test_PROGS} )
diff -Nuar kdelibs-orig//kdewidgets/CMakeLists.txt kdelibs/kdewidgets/CMakeLists.txt
--- kdelibs-orig//kdewidgets/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdewidgets/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,67 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( pics )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -DQT_PLUGIN
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### makekdewidgets ############################
+
+set( target makekdewidgets )
+
+set( ${target}_SRCS
+  makekdewidgets.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+##### kdewidgets ################################
+
+set( target kdewidgets )
+
+set( ${target}_SRCS
+  classpreviews.cpp kdewidgets.cpp
+)
+
+add_custom_command( OUTPUT kdewidgets.cpp
+  COMMAND ./makekdewidgets -o kdewidgets.cpp ${CMAKE_CURRENT_SOURCE_DIR}/kde.widgets
+  DEPENDS makekdewidgets ${CMAKE_CURRENT_SOURCE_DIR}/kde.widgets
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kabc-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/designer
+)
diff -Nuar kdelibs-orig//kdewidgets/pics/CMakeLists.txt kdelibs/kdewidgets/pics/CMakeLists.txt
--- kdelibs-orig//kdewidgets/pics/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdewidgets/pics/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,27 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    klineedit.png ktextbrowser.png kpasswordedit.png kdatewidget.png
+    kfontrequester.png kurlrequester.png kcombobox.png kiconview.png
+    kintspinbox.png kled.png ksqueezedtextlabel.png  kprogress.png
+    kurllabel.png kruler.png kcmodule.png kdoublespinbox.png
+    kdoublenuminput.png klistbox.png klistview.png kactivelabel.png
+    kiconbutton.png kcolorcombo.png khsselector.png kcolorbutton.png
+    kgradientselector.png kdualcolorbutton.png ktimewidget.png
+    kpushbutton.png kcharselect.png kdatepicker.png
+    kdialog.png keditlistbox.png kfontcombo.png khistorycombo.png
+    kintnuminput.png krestrictedline.png ktextedit.png
+    kurlcomborequester.png kkeybutton.png kpalettetable.png
+    kactionselector.png kdatetable.png kdatetimewidget.png
+  DESTINATION ${DATA_INSTALL_DIR}/kdewidgets/pics )
diff -Nuar kdelibs-orig//kdoctools/checkXML.cmake kdelibs/kdoctools/checkXML.cmake
--- kdelibs-orig//kdoctools/checkXML.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdoctools/checkXML.cmake	2010-10-06 12:48:48.000000000 +0300
@@ -0,0 +1,7 @@
+#! /bin/sh
+
+prefix=@CMAKE_INSTALL_PREFIX@
+# FIXME this must be separate?
+exec_prefix=@CMAKE_INSTALL_PREFIX@
+exit `@CMAKE_INSTALL_PREFIX@/@BIN_INSTALL_DIR@/meinproc --check --stdout $@ > /dev/null`
+
diff -Nuar kdelibs-orig//kdoctools/CMakeLists.txt kdelibs/kdoctools/CMakeLists.txt
--- kdelibs-orig//kdoctools/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kdoctools/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,109 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kioslave
+  ${LIBXML2_INCLUDE_DIRS}
+  ${LIBXSLT_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/checkXML DESTINATION ${BIN_INSTALL_DIR} )
+install( PROGRAMS move_kio_help_cache.sh DESTINATION ${KCONF_UPDATE_INSTALL_DIR} )
+install( FILES kio_help.upd DESTINATION ${KCONF_UPDATE_INSTALL_DIR} )
+install( FILES help.protocol ghelp.protocol DESTINATION ${SERVICES_INSTALL_DIR} )
+
+# FIXME why automake version is so complicated?
+# install-data-local:
+#       @(for subdir in customization docbook; do \
+#           for dir in `( cd $(srcdir)/$$subdir && find . -type d ! -name CVS | grep -v '\.svn' )`; do \
+#               $(mkinstalldirs) $(DESTDIR)$(kde_datadir)/ksgmltools2/$$subdir/$$dir ;\
+#               for file in `(cd $(srcdir)/$$subdir && ls -1 $$dir/*)`; do \
+#                   if test -f $(srcdir)/$$subdir/$$file; then \
+#                       $(INSTALL_DATA) $(srcdir)/$$subdir/$$file  $(DESTDIR)$(kde_datadir)/ksgmltools2/$$subdir/$$file; fi ;\
+#               done ;\
+#           done ;\
+#       done )
+install( DIRECTORY customization docbook DESTINATION ${DATA_INSTALL_DIR}/ksgmltools2 PATTERN ".svn" EXCLUDE )
+
+
+##### kbzipfilter_dummy ##############################
+
+tde_add_library( kbzipfilter_dummy STATIC_PIC
+  SOURCES ${CMAKE_SOURCE_DIR}/kioslave/bzip2/kbzip2filter.cpp
+)
+
+
+#### kio_help ###################################
+
+set( target kio_help )
+
+set( ${target}_SRCS
+  kio_help.cpp main.cpp xslt.cpp
+)
+
+tde_add_kpart( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  LINK kbzipfilter_dummy-static kio-shared ${BZIP2_LIBRARIES} ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES}
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+#### kio_ghelp ###################################
+
+set( target kio_ghelp )
+
+set( ${target}_SRCS
+  kio_help.cpp main_ghelp.cpp xslt.cpp
+)
+
+tde_add_kpart( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  LINK kbzipfilter_dummy-static kio-shared ${BZIP2_LIBRARIES} ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES}
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+#### meinproc ###################################
+
+set( target meinproc )
+
+set( ${target}_SRCS
+  meinproc.cpp xslt_pure.cpp
+)
+
+# FIXME I think this can be improved
+add_custom_command( OUTPUT xslt_pure.cpp COMMAND cp ARGS ${CMAKE_CURRENT_SOURCE_DIR}/xslt.cpp xslt_pure.cpp )
+set_source_files_properties( xslt_pure.cpp PROPERTIES COMPILE_FLAGS -DSIMPLE_XSLT )
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kbzipfilter_dummy-static kio-shared ${BZIP2_LIBRARIES} ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES}
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//khtml/CMakeLists.txt kdelibs/khtml/CMakeLists.txt
--- kdelibs-orig//khtml/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,142 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WOVERLOADED_VIRTUAL}" )
+
+add_subdirectory( misc )
+add_subdirectory( dom )
+add_subdirectory( css )
+add_subdirectory( xml )
+add_subdirectory( html )
+add_subdirectory( rendering )
+add_subdirectory( pics )
+add_subdirectory( java )
+add_subdirectory( ecma )
+add_subdirectory( kmultipart )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kjs
+  ${CMAKE_BINARY_DIR}/kio/kssl
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kio/kssl
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+  ${CMAKE_SOURCE_DIR}/kdeprint
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    khtmlview.h khtml_part.h khtml_events.h
+    khtml_settings.h khtmldefaults.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES khtml.desktop khtmlimage.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES khtml.rc khtml_browser.rc khtml_popupmenu.rc DESTINATION ${DATA_INSTALL_DIR}/khtml )
+
+
+##### khtml #####################################
+
+set( target khtml )
+
+set( ${target}_SRCS
+  khtmlview.cpp khtml_part.cpp khtml_run.cpp
+  khtml_factory.cpp khtml_settings.cc khtml_events.cpp
+  khtml_ext.cpp khtml_pagecache.cpp khtml_iface.cc
+  khtml_printsettings.cpp khtmlimage.cpp kjserrordlg.ui
+  htmlpageinfo.ui khtml_iface.skel
+)
+
+### FIXME what is this?
+### if include_VERSION_SCRIPT
+### VSCRIPT = -Wl,--version-script=$(srcdir)/libkhtml.map
+### endif
+
+### FIXME what about java?
+### FIXME maybe static libs must be embedded?
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK ${VSCRIPT} kjava-static kjs_html-static khtmldom-static khtmlcss-static
+    khtmlhtml-static khtmlxml-static khtmlrender-static khtmlmisc-static
+    kutils-shared kdeprint-shared kjs-shared ${JPEG_LIBRARIES}
+  DESTINATION ${LIB_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
+
+
+##### libkhtmlpart ##############################
+
+set( target libkhtmlpart )
+
+set( ${target}_SRCS
+  dummy.cpp
+)
+
+file( WRITE ${CMAKE_CURRENT_BINARY_DIR}/dummy.cpp
+"#include <kdelibs_export.h>
+extern \"C\" KDE_EXPORT void* init_libkhtml();
+extern \"C\" KDE_EXPORT void* init_libkhtmlpart() { return init_libkhtml(); }
+" )
+
+tde_add_kpart( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK khtml-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### khtmlimagepart ############################
+
+set( target khtmlimagepart )
+
+set( ${target}_SRCS
+  imgdummy.cpp
+)
+
+file( WRITE ${CMAKE_CURRENT_BINARY_DIR}/imgdummy.cpp
+"
+#include <kdelibs_export.h>
+extern \"C\"  KDE_EXPORT void* init_khtmlimagefactory();
+extern \"C\"  KDE_EXPORT void* init_khtmlimagepart() { return init_khtmlimagefactory(); }
+" )
+
+tde_add_kpart( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK khtml-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//khtml/css/CMakeLists.txt kdelibs/khtml/css/CMakeLists.txt
--- kdelibs-orig//khtml/css/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/css/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,51 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+  ${CMAKE_SOURCE_DIR}/kutils
+)
+
+
+##### other data ################################
+
+install( FILES html4.css quirks.css DESTINATION ${DATA_INSTALL_DIR}/khtml/css )
+
+
+##### khtmlcss (static) #########################
+
+set( target khtmlcss )
+
+set( ${target}_SRCS
+  css_stylesheetimpl.cpp css_ruleimpl.cpp css_valueimpl.cpp
+  css_base.cpp cssparser.cpp cssstyleselector.cpp
+  csshelper.cpp parser.cpp css_renderstyledeclarationimpl.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
+
diff -Nuar kdelibs-orig//khtml/dom/CMakeLists.txt kdelibs/khtml/dom/CMakeLists.txt
--- kdelibs-orig//khtml/dom/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/dom/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,62 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+set( CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${USE_EXCEPTIONS} )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio
+)
+
+
+##### headers ###################################
+
+install( FILES
+    dom_exception.h html_base.h html_inline.h
+    css_rule.h dom_html.h html_block.h html_list.h
+    css_stylesheet.h dom_misc.h html_document.h html_misc.h
+    css_value.h dom_node.h html_element.h html_object.h
+    dom_core.h dom_string.h html_form.h html_table.h
+    dom_doc.h dom_text.h html_head.h
+    dom_element.h dom_xml.h html_image.h
+    dom2_range.h dom2_traversal.h dom2_events.h
+    dom2_views.h
+    #css_extensions.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/dom )
+
+
+##### khtmldom-static ############################
+
+set( target khtmldom )
+
+set( ${target}_SRCS
+  dom_misc.cpp html_block.cpp html_inline.cpp css_rule.cpp
+  dom_node.cpp html_document.cpp html_list.cpp css_stylesheet.cpp
+  dom_string.cpp html_element.cpp html_misc.cpp css_value.cpp
+  dom_text.cpp html_object.cpp dom_doc.cpp  dom_xml.cpp
+  html_head.cpp dom_element.cpp html_base.cpp html_image.cpp
+  html_form.cpp dom2_range.cpp html_table.cpp dom2_traversal.cpp
+  dom2_events.cpp dom2_views.cpp
+  #css_extensions.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//khtml/ecma/CMakeLists.txt kdelibs/khtml/ecma/CMakeLists.txt
--- kdelibs-orig//khtml/ecma/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/ecma/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,65 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kjs
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/bookmarks
+  ${CMAKE_SOURCE_DIR}/kjs
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+  ${CMAKE_SOURCE_DIR}/kutils
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kjs_html-static ###########################
+
+set( target kjs_html )
+
+set( ${target}_SRCS
+  kjs_binding.cpp kjs_dom.cpp kjs_html.cpp kjs_window.cpp
+  kjs_navigator.cpp kjs_proxy.cpp kjs_css.cpp
+  kjs_range.cpp kjs_traversal.cpp kjs_events.cpp
+  kjs_views.cpp kjs_debugwin.cpp kjs_mozilla.cpp
+  xmlhttprequest.cpp xmlserializer.cpp domparser.cpp
+)
+
+set( ${target}_LUTS
+  kjs_dom.cpp kjs_html.cpp kjs_css.cpp kjs_events.cpp
+  kjs_navigator.cpp kjs_mozilla.cpp kjs_range.cpp
+  kjs_traversal.cpp kjs_views.cpp kjs_window.cpp
+  xmlhttprequest.cpp xmlserializer.cpp domparser.cpp
+)
+
+tde_add_luts( ${${target}_LUTS} )
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
+
diff -Nuar kdelibs-orig//khtml/html/CMakeLists.txt kdelibs/khtml/html/CMakeLists.txt
--- kdelibs-orig//khtml/html/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/html/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,48 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kio/kssl
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+)
+
+##### khtmlhtml-static ###########################
+
+set( target khtmlhtml )
+
+set( ${target}_SRCS
+  htmlparser.cpp htmltokenizer.cpp dtd.cpp html_headimpl.cpp
+  html_blockimpl.cpp html_elementimpl.cpp html_inlineimpl.cpp
+  html_documentimpl.cpp html_baseimpl.cpp html_imageimpl.cpp
+  html_listimpl.cpp html_miscimpl.cpp html_formimpl.cpp
+  html_objectimpl.cpp html_tableimpl.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//khtml/java/CMakeLists.txt kdelibs/khtml/java/CMakeLists.txt
--- kdelibs-orig//khtml/java/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/java/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,79 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( dummy )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_BINARY_DIR}/kio/kssl
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kssl
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### configure #################################
+
+set( KJAVA_POLICYPATH "${CMAKE_INSTALL_PREFIX}/${DATA_INSTALL_DIR}/kjava/-" )
+configure_file( kjava.policy.in kjava.policy @ONLY )
+
+
+##### install data ##############################
+
+install( FILES kjavaappletviewer.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES kjava.jar ${CMAKE_CURRENT_BINARY_DIR}/kjava.policy pluginsinfo DESTINATION ${DATA_INSTALL_DIR}/kjava )
+tde_install_icons( DESTINATION ${DATA_INSTALL_DIR}/kjava/icons )
+
+
+##### kjava-static ##############################
+
+set( target kjava )
+
+set( ${target}_SRCS
+  kjavaapplet.cpp kjavaappletcontext.cpp kjavaappletserver.cpp
+  kjavaappletwidget.cpp kjavaprocess.cpp kjavadownloader.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC
+  SOURCES ${${target}_SRCS}
+)
+
+
+##### kjavaappletviewer #########################
+
+set( target kjavaappletviewer )
+
+set( ${target}_SRCS
+  kjavaapplet.cpp kjavaappletcontext.cpp
+  kjavaappletserver.cpp kjavaappletwidget.cpp kjavaprocess.cpp
+  kjavadownloader.cpp kjavaappletviewer.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kparts-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//khtml/java/dummy/CMakeLists.txt kdelibs/khtml/java/dummy/CMakeLists.txt
--- kdelibs-orig//khtml/java/dummy/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/java/dummy/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,22 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### kjava #####################################
+
+set( target kjava )
+
+configure_file( ${CMAKE_SOURCE_DIR}/cmake/modules/template_dummy_cpp.cmake dummy.cpp COPYONLY )
+
+tde_add_library( ${target} SHARED
+  SOURCES dummy.cpp
+  VERSION 1.0.0
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//khtml/kmultipart/CMakeLists.txt kdelibs/khtml/kmultipart/CMakeLists.txt
--- kdelibs-orig//khtml/kmultipart/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/kmultipart/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,52 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kutils
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kmultipart.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### libkmultipart #############################
+
+set( target libkmultipart )
+
+set( ${target}_SRCS
+  kmultipart.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK httpfilter-static kparts-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//khtml/misc/CMakeLists.txt kdelibs/khtml/misc/CMakeLists.txt
--- kdelibs-orig//khtml/misc/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/misc/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,45 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+
+##### khtmlmisc-static ###########################
+
+set( target khtmlmisc )
+
+set( ${target}_SRCS
+  decoder.cpp loader.cpp loader_jpeg.cpp guess_ja.cpp
+  htmlhashes.cpp helper.cpp arena.cpp stringit.cpp
+  knsplugininstaller.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//khtml/pics/CMakeLists.txt kdelibs/khtml/pics/CMakeLists.txt
--- kdelibs-orig//khtml/pics/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/pics/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,20 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### icons #####################################
+
+tde_install_icons(
+    bug images_display wallet_open
+  DESTINATION ${DATA_INSTALL_DIR}/khtml/icons )
+
+tde_install_icons(
+    dbgnext dbgrun dbgrunto dbgstep
+)
diff -Nuar kdelibs-orig//khtml/rendering/CMakeLists.txt kdelibs/khtml/rendering/CMakeLists.txt
--- kdelibs-orig//khtml/rendering/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/rendering/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,51 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+  ${CMAKE_SOURCE_DIR}/kutils
+)
+
+
+##### khtmlrender-static #########################
+
+set( target khtmlrender )
+
+set( ${target}_SRCS
+  bidi.cpp break_lines.cpp render_block.cpp render_inline.cpp
+  render_style.cpp render_object.cpp render_container.cpp render_box.cpp
+  render_flow.cpp render_text.cpp render_arena.cpp render_layer.cpp
+  render_image.cpp render_table.cpp table_layout.cpp
+  render_replaced.cpp render_form.cpp render_list.cpp
+  render_canvas.cpp render_frames.cpp render_br.cpp
+  render_body.cpp font.cpp render_line.cpp render_generated.cpp
+  enumerate.cpp counter_tree.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//khtml/xml/CMakeLists.txt kdelibs/khtml/xml/CMakeLists.txt
--- kdelibs-orig//khtml/xml/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/khtml/xml/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,47 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kjs
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/khtml
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+  ${CMAKE_SOURCE_DIR}/kutils
+)
+
+
+##### khtmlxml-static ############################
+
+set( target khtmlxml )
+
+set( ${target}_SRCS
+  dom_docimpl.cpp dom_nodeimpl.cpp dom_textimpl.cpp
+  dom_elementimpl.cpp dom_stringimpl.cpp dom2_rangeimpl.cpp
+  dom2_traversalimpl.cpp xml_tokenizer.cpp dom_xmlimpl.cpp
+  dom2_eventsimpl.cpp dom2_viewsimpl.cpp dom_restyler.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kimgio/CMakeLists.txt kdelibs/kimgio/CMakeLists.txt
--- kdelibs-orig//kimgio/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kimgio/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,181 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+set( CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${USE_EXCEPTIONS} )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kimg_eps ##################################
+
+set( target kimg_eps )
+
+tde_add_kpart( ${target}
+  SOURCES eps.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_xview ################################
+
+set( target kimg_xview )
+
+tde_add_kpart( ${target}
+  SOURCES xview.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_tiff #################################
+
+if( TIFF_FOUND )
+  set( target kimg_tiff )
+  tde_add_kpart( ${target}
+    SOURCES tiffr.cpp
+    LINK kdecore-shared ${TIFF_LIBRARIES}
+    DESTINATION ${PLUGIN_INSTALL_DIR}
+  )
+  install( FILES tiff.kimgio DESTINATION ${SERVICES_INSTALL_DIR} )
+endif( TIFF_FOUND )
+
+
+##### kimg_ico ##################################
+
+set( target kimg_ico )
+
+tde_add_kpart( ${target}
+  SOURCES ico.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_jp2 ##################################
+
+if( JASPER_FOUND )
+  set( target kimg_jp2 )
+  tde_add_kpart( ${target}
+    SOURCES jp2.cpp
+    LINK kdecore-shared ${JASPER_LIBRARIES}
+    DESTINATION ${PLUGIN_INSTALL_DIR}
+  )
+  install( FILES jp2.kimgio DESTINATION ${SERVICES_INSTALL_DIR} )
+endif( JASPER_FOUND )
+
+
+##### kimg_pcx ##################################
+
+set( target kimg_pcx )
+tde_add_kpart( ${target}
+  SOURCES pcx.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_tga ##################################
+
+set( target kimg_tga )
+tde_add_kpart( ${target}
+  SOURCES tga.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_rgb ##################################
+
+set( target kimg_rgb )
+tde_add_kpart( ${target}
+  SOURCES rgb.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_xcf ##################################
+
+set( target kimg_xcf )
+tde_add_kpart( ${target}
+  SOURCES xcf.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_dds ##################################
+
+set( target kimg_dds )
+tde_add_kpart( ${target}
+  SOURCES dds.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kimg_exr ##################################
+
+if( OPENEXR_FOUND )
+  set( target kimg_exr )
+  tde_add_kpart( ${target}
+    SOURCES exr.cpp
+    LINK kdecore-shared ${OPENEXR_LIBRARIES}
+    DESTINATION ${PLUGIN_INSTALL_DIR}
+  )
+  # FIXME COMPILE_FLAGS must be written a little better
+  set_target_properties( ${target}-module PROPERTIES COMPILE_FLAGS -I${OPENEXR_INCLUDE_DIRS} )
+  install( FILES exr.kimgio DESTINATION ${SERVICES_INSTALL_DIR} )
+endif( OPENEXR_FOUND )
+
+
+##### kimg_psd ##################################
+
+set( target kimg_psd )
+tde_add_kpart( ${target}
+  SOURCES psd.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+##### kimg_hdr ##################################
+
+set( target kimg_hdr )
+tde_add_kpart( ${target}
+  SOURCES hdr.cpp
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### other data ################################
+
+install( FILES
+    png.kimgio xpm.kimgio bmp.kimgio pbm.kimgio pgm.kimgio
+    ppm.kimgio xbm.kimgio jpeg.kimgio xv.kimgio eps.kimgio
+    ico.kimgio gif.kimgio pcx.kimgio tga.kimgio rgb.kimgio
+    xcf.kimgio dds.kimgio mng.kimgio psd.kimgio hdr.kimgio
+  DESTINATION ${SERVICES_INSTALL_DIR} )
diff -Nuar kdelibs-orig//kinit/CMakeLists.txt kdelibs/kinit/CMakeLists.txt
--- kdelibs-orig//kinit/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kinit/CMakeLists.txt	2010-12-04 04:45:11.000000000 +0200
@@ -0,0 +1,171 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${FREETYPE_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+#### kdeinit ####################################
+
+set( target kdeinit )
+
+set( ${target}_SRCS
+  kinit.cpp setproctitle.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kparts-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kdeinit_wrapper ############################
+
+set( target kdeinit_wrapper )
+
+tde_add_executable( ${target}
+  SOURCES wrapper.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kshell #####################################
+
+set( target kshell )
+
+tde_add_executable( ${target}
+  SOURCES shell.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kdeinit_shutdown ###########################
+
+set( target kdeinit_shutdown )
+
+tde_add_executable( ${target}
+  SOURCES wrapper.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### lnusertemp #################################
+
+set( target lnusertemp )
+
+tde_add_executable( ${target}
+  SOURCES lnusertemp.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kwrapper ###################################
+
+set( target kwrapper )
+
+tde_add_executable( ${target}
+  SOURCES kwrapper.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kioslave ###################################
+
+set( target kioslave )
+
+tde_add_executable( ${target} AUTOMOC
+  SOURCES kioslave.cpp
+  LINK kio-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kstartupconfig #############################
+
+set( target kstartupconfig )
+
+tde_add_executable( ${target} AUTOMOC
+  SOURCES kstartupconfig.cpp
+  LINK kdefakes-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### kdostartupconfig ###########################
+
+set( target kdostartupconfig )
+
+tde_add_executable( ${target} AUTOMOC
+  SOURCES kdostartupconfig.cpp
+  LINK kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### start_kdeinit ##############################
+
+set( target start_kdeinit )
+
+if( KDEINIT_SETUID )
+  set( _setuid SETUID )
+endif( KDEINIT_SETUID )
+
+tde_add_executable( ${target} ${_setuid}
+  SOURCES start_kdeinit.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+set_target_properties( ${target} PROPERTIES COMPILE_FLAGS -DEXECUTE=\\"${BIN_INSTALL_DIR}/kdeinit\\" )
+
+
+#### start_kdeinit_wrapper ######################
+
+set( target start_kdeinit_wrapper )
+
+tde_add_executable( ${target}
+  SOURCES start_kdeinit_wrapper.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+#### klauncher ##################################
+
+set( target klauncher )
+
+set( ${target}_SRCS
+  klauncher.cpp klauncher_main.cpp autostart.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+)
diff -Nuar kdelibs-orig//kio/bookmarks/CMakeLists.txt kdelibs/kio/bookmarks/CMakeLists.txt
--- kdelibs-orig//kio/bookmarks/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/bookmarks/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,59 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kbookmark.h kbookmarkbar.h kbookmarkdrag.h kbookmarkexporter.h
+    kbookmarkimporter.h kbookmarkmanager.h kbookmarkmenu.h
+    kbookmarknotifier.h kbookmarkimporter_crash.h
+    kbookmarkimporter_opera.h kbookmarkimporter_ie.h
+    kbookmarkimporter_ns.h kbookmarkimporter_kde1.h
+    kbookmarkdombuilder.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### kbookmarks ################################
+
+set( target kbookmarks )
+
+set( ${target}_SRCS
+  kbookmark.cc kbookmarkbar.cc kbookmarkdrag.cc kbookmarkexporter.cc
+  kbookmarkimporter.cc kbookmarkmanager.cc kbookmarkmenu.cc
+  kbookmarkimporter_crash.cc kbookmarkimporter_opera.cc
+  kbookmarkimporter_ie.cc kbookmarkimporter_ns.cc
+  kbookmarkimporter_kde1.cc kbookmarkdombuilder.cc
+  kbookmarkmanager.skel kbookmarknotifier.skel
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+  DEPENDENCIES dcopidl
+)
diff -Nuar kdelibs-orig//kio/CMakeLists.txt kdelibs/kio/CMakeLists.txt
--- kdelibs-orig//kio/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,62 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  -D_LARGEFILE64_SOURCE=1
+)
+
+add_subdirectory( kssl )
+add_subdirectory( kio )
+add_subdirectory( bookmarks )
+add_subdirectory( kfile )
+add_subdirectory( pics )
+add_subdirectory( kioexec )
+add_subdirectory( httpfilter )
+add_subdirectory( misc )
+add_subdirectory( kpasswdserver )
+add_subdirectory( tests )
+
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES magic DESTINATION ${MIME_INSTALL_DIR} )
+
+install( FILES
+    application.desktop kurifilterplugin.desktop
+    kcomprfilter.desktop kscan.desktop kdatatool.desktop
+    kfileplugin.desktop kcmodule.desktop
+  DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+install( FILES kioslave.upd DESTINATION ${KCONF_UPDATE_INSTALL_DIR} )
+install( PROGRAMS useragent.pl proxytype.pl DESTINATION ${KCONF_UPDATE_INSTALL_DIR} )
+install( FILES renamedlgplugin.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+install( FILES kpasswdserver.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+install( FILES data.protocol DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### libkio ####################################
+
+set( target kio )
+
+configure_file( ${CMAKE_SOURCE_DIR}/cmake/modules/template_dummy_cpp.cmake dummy.cpp COPYONLY )
+
+tde_add_library( ${target} SHARED
+  SOURCES ${CMAKE_CURRENT_BINARY_DIR}/dummy.cpp
+  VERSION 4.2.0
+  EMBED kssl-static kiocore-static ksycoca-static kbookmarks-static kfile-static
+  LINK kdeui-shared kdesu-shared kwalletclient-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/httpfilter/CMakeLists.txt kdelibs/kio/httpfilter/CMakeLists.txt
--- kdelibs-orig//kio/httpfilter/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/httpfilter/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,36 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio
+)
+
+
+##### httpfilter ################################
+
+set( target httpfilter )
+
+set( ${target}_SRCS
+  httpfilter.cc
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kio/kfile/CMakeLists.txt kdelibs/kio/kfile/CMakeLists.txt
--- kdelibs-orig//kio/kfile/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kfile/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,80 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/bookmarks
+  ${LIBART_INCLUDE_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kfiledialog.h kencodingfiledialog.h
+    kdiroperator.h kfileview.h kfilefiltercombo.h
+    kfiledetailview.h kcombiview.h kdiskfreesp.h
+    kfileiconview.h krecentdocument.h
+    kurlrequester.h kfilepreview.h kfile.h
+    kurlcombobox.h kurlrequesterdlg.h kopenwith.h kpropsdlg.h
+    kicondialog.h kdirsize.h kpreviewwidgetbase.h kimagefilepreview.h kfilesharedlg.h
+    kfiletreeview.h kfiletreeviewitem.h kfiletreebranch.h
+    kdirselectdialog.h kurlbar.h kpropertiesdialog.h knotifydialog.h
+    kcustommenueditor.h ${CMAKE_CURRENT_BINARY_DIR}/knotifywidgetbase.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES
+    kpropsdlgplugin.desktop
+ DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+
+##### kfile #####################################
+
+set( target kfile )
+
+set( ${target}_SRCS
+  kfilefiltercombo.cpp kfileview.cpp kfileiconview.cpp
+  krecentdocument.cpp kfiledialog.cpp kdiroperator.cpp
+  kfiledetailview.cpp kcombiview.cpp kurlrequester.cpp
+  kfilepreview.cpp kurlcombobox.cpp kurlrequesterdlg.cpp
+  kopenwith.cpp kpropertiesdialog.cpp kicondialog.cpp
+  kdirsize.cpp krecentdirs.cpp kdiskfreesp.cpp kimagefilepreview.cpp
+  kfilesharedlg.cpp kurlbar.cpp kmetaprops.cpp kpreviewprops.cpp
+  kfiletreeview.cpp kfiletreeviewitem.cpp kfiletreebranch.cpp
+  kdirselectdialog.cpp kfilebookmarkhandler.cpp kfilemetainfowidget.cpp
+  kcustommenueditor.cpp knotifywidgetbase.ui knotifydialog.cpp
+  kfilespeedbar.cpp kpreviewwidgetbase.cpp kfilemetapreview.cpp
+  kpropertiesdesktopbase.ui kpropertiesdesktopadvbase.ui
+  kpropertiesmimetypebase.ui kencodingfiledialog.cpp
+  kacleditwidget.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kio/kio/CMakeLists.txt kdelibs/kio/kio/CMakeLists.txt
--- kdelibs-orig//kio/kio/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kio/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,119 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kio/kssl
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore/network
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kssl
+  ${CMAKE_SOURCE_DIR}/interfaces
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kservicetype.h kmimetype.h kmimemagic.h kservice.h
+    krun.h kdirwatch.h kautomount.h kuserprofile.h
+    kshred.h kar.h ktar.h kzip.h ktrader.h kurifilter.h
+    kurlcompletion.h kshellcompletion.h kfileitem.h
+    kfileshare.h ksambashare.h knfsshare.h kdirlister.h
+    kservicegroup.h kimageio.h kdirnotify.h kdirnotify_stub.h
+    kurlpixmapprovider.h kprotocolinfo.h kprotocolmanager.h
+    kfilterbase.h kfilterdev.h kemailsettings.h kscan.h
+    kdatatool.h karchive.h kfilefilter.h kfilemetainfo.h
+    renamedlgplugin.h kmimetyperesolver.h kdcopservicestarter.h
+    kremoteencoding.h kmimetypechooser.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+# FIXME seems that ACL is no longer optional
+#if( USE_POSIX_ACL )
+  install( FILES kacl.h DESTINATION ${INCLUDE_INSTALL_DIR} )
+#endif( USE_POSIX_ACL )
+
+install( FILES
+    connection.h slaveinterface.h slave.h slaveconfig.h
+    sessiondata.h global.h passdlg.h netaccess.h job.h
+    scheduler.h jobclasses.h paste.h slavebase.h
+    progressbase.h defaultprogress.h statusbarprogress.h
+    tcpslavebase.h forwardingslavebase.h observer.h
+    chmodjob.h kmdbase.h authinfo.h ioslave_defaults.h
+    http_slave_defaults.h previewjob.h thumbcreator.h
+    metainfojob.h davjob.h renamedlg.h skipdlg.h
+    ${CMAKE_CURRENT_BINARY_DIR}/uiserver_stub.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kio )
+
+
+##### kiocore ###################################
+
+set( target kiocore )
+
+set( ${target}_SRCS
+  authinfo.cpp kshred.cpp kprotocolmanager.cpp slave.cpp
+  slaveinterface.cpp observer.stub sessiondata.cpp
+  scheduler.cpp connection.cpp job.cpp global.cpp
+  slaveconfig.cpp kurlpixmapprovider.cpp netaccess.cpp
+  paste.cpp pastedialog.cpp kmimemagic.cpp tcpslavebase.cpp
+  slavebase.cpp passdlg.cpp forwardingslavebase.cpp
+  progressbase.cpp defaultprogress.cpp statusbarprogress.cpp
+  kdirnotify.cpp kdirnotify.skel kdirnotify_stub.cpp
+  observer.cpp ../misc/uiserver.stub observer.skel kemailsettings.cpp
+  kprotocolinfo.cpp renamedlg.cpp skipdlg.cpp kremoteencoding.cpp
+  kmimetypechooser.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+  DEPENDENCIES dcopidl
+)
+
+
+##### ksycoca ###################################
+
+set( target ksycoca )
+
+set( ${target}_SRCS
+  kdirwatch.cpp kfileshare.cpp ksambashare.cpp
+  knfsshare.cpp ktrader.cpp ktraderparse.cpp
+  ktraderparsetree.cpp kservicetypefactory.cpp
+  kservicetype.cpp kmimetype.cpp kservicegroup.cpp
+  kservice.cpp kservicefactory.cpp kuserprofile.cpp
+  kservicegroupfactory.cpp kurifilter.cpp kfilterbase.cpp
+  kfilterdev.cpp kshellcompletion.cpp kurlcompletion.cpp
+  kautomount.cpp krun.cpp kfileitem.cpp kdirlister.cpp
+  kimageio.cpp yacc.c lex.c chmodjob.cpp kscan.cpp
+  kar.cpp ktar.cpp kzip.cpp previewjob.cpp metainfojob.cpp
+  davjob.cpp kdatatool.cpp karchive.cpp kfilefilter.cpp
+  kfilemetainfo.cpp kdcopservicestarter.cpp dataslave.cpp
+  dataprotocol.cpp
+)
+
+# FIXME seems that ACL is no longer optional
+#if( USE_POSIX_ACL )
+  set( ${target}_SRCS ${${target}_SRCS} kacl.cpp posixacladdons.cpp )
+#endif( USE_POSIX_ACL )
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kio/kioexec/CMakeLists.txt kdelibs/kio/kioexec/CMakeLists.txt
--- kdelibs-orig//kio/kioexec/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kioexec/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,46 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kioexec ###################################
+
+set( target kioexec )
+
+set( ${target}_SRCS
+  main.cpp
+)
+
+tde_add_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+tde_install_symlink( ${target} ${BIN_INSTALL_DIR}/kfmexec )
diff -Nuar kdelibs-orig//kio/kpasswdserver/CMakeLists.txt kdelibs/kio/kpasswdserver/CMakeLists.txt
--- kdelibs-orig//kio/kpasswdserver/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kpasswdserver/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,47 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+  ${CMAKE_SOURCE_DIR}/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+#### kded_kpasswdserver ##############################
+
+set( target kded_kpasswdserver )
+
+set( ${target}_SRCS
+  kpasswdserver.cpp kpasswdserver.skel
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeinit_kded-shared
+  DEPENDENCIES dcopidl
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/kssl/CMakeLists.txt kdelibs/kio/kssl/CMakeLists.txt
--- kdelibs-orig//kio/kssl/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kssl/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,62 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( kssl )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore/network
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kssl.h ksslcertificatehome.h ksslsettings.h ksslcertificate.h
+    ksslconnectioninfo.h ksslcertificatefactory.h ksslcertificatecache.h
+    ksslpeerinfo.h ksslinfodlg.h ksslcertdlg.h ksslutils.h kopenssl.h
+    ksslall.h ksslpkcs12.h ksslcertchain.h ksslkeygen.h ksslx509v3.h
+    ksslsigners.h ksslpkcs7.h ksslpemcallback.h ksslsession.h
+    ${CMAKE_CURRENT_BINARY_DIR}/ksslconfig.h ksslx509map.h ksmimecrypto.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### kssl ######################################
+
+set( target kssl )
+
+set( ${target}_SRCS
+  kssl.cc ksslcertificatehome.cc ksslsettings.cc
+  ksslcertificate.cc ksslconnectioninfo.cc ksslcertificatefactory.cc
+  ksslcertificatecache.cc ksslpeerinfo.cc ksslinfodlg.cc
+  ksslcertdlg.cc ksslutils.cc kopenssl.cc ksslpkcs12.cc
+  ksslcertchain.cc ksslkeygen.cc ksslx509v3.cc
+  ksslsigners.cc ksslpkcs7.cc ksslpemcallback.cc
+  ksslx509map.cc ksslsession.cc keygenwizard.ui
+  keygenwizard2.ui ksmimecrypto.cc ksslcsessioncache.cc
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kio/kssl/kssl/caroot/CMakeLists.txt kdelibs/kio/kssl/kssl/caroot/CMakeLists.txt
--- kdelibs-orig//kio/kssl/kssl/caroot/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kssl/kssl/caroot/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,12 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+install( FILES ca-bundle.crt DESTINATION ${DATA_INSTALL_DIR}/kssl )
diff -Nuar kdelibs-orig//kio/kssl/kssl/CMakeLists.txt kdelibs/kio/kssl/kssl/CMakeLists.txt
--- kdelibs-orig//kio/kssl/kssl/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kssl/kssl/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,14 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( caroot )
+
+install( FILES ksslcalist DESTINATION ${CONFIG_INSTALL_DIR} )
diff -Nuar kdelibs-orig//kio/kssl/ksslconfig.h.cmake kdelibs/kio/kssl/ksslconfig.h.cmake
--- kdelibs-orig//kio/kssl/ksslconfig.h.cmake	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/kssl/ksslconfig.h.cmake	2010-10-06 12:47:12.000000000 +0300
@@ -0,0 +1,26 @@
+/* This file is part of the KDE project
+ *
+ * Copyright (C) 2002 George Staikos <staikos@kde.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public License
+ * along with this library; see the file COPYING.LIB.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef KSSLCONFIG_H
+#define KSSLCONFIG_H
+
+#cmakedefine KSSL_HAVE_SSL 1
+
+#endif
diff -Nuar kdelibs-orig//kio/misc/CMakeLists.txt kdelibs/kio/misc/CMakeLists.txt
--- kdelibs-orig//kio/misc/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,102 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( ksendbugmail )
+add_subdirectory( kpac )
+add_subdirectory( kdesasl )
+add_subdirectory( kssld )
+add_subdirectory( kfile )
+add_subdirectory( kwalletd )
+add_subdirectory( kntlm )
+
+add_definitions(
+  -D_LARGEFILE64_SOURCE
+  ${TQT_CFLAGS_OTHER}
+  -include tqt.h
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_BINARY_DIR}/kio
+  ${CMAKE_BINARY_DIR}/kio/kio
+  ${CMAKE_BINARY_DIR}/kio/kssl
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kssl
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES uiserver.h DESTINATION ${INCLUDE_INSTALL_DIR}/kio )
+
+
+##### other data ################################
+
+install(FILES
+    kio_uiserver.desktop kmailservice.protocol
+    telnet.protocol rlogin.protocol rtsp.protocol
+    ssh.protocol mms.protocol mmst.protocol mmsu.protocol
+    pnm.protocol rtspt.protocol rtspu.protocol
+  DESTINATION ${SERVICES_INSTALL_DIR} )
+
+install( FILES fileshareset DESTINATION ${BIN_INSTALL_DIR}
+  PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE SETUID )
+
+
+#### kio_uiserver ###############################
+
+set( target kio_uiserver )
+
+set( ${target}_SRCS
+  uiserver.cpp uiserver.skel
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DEPENDENCIES dcopidl
+)
+
+
+##### kmailservice ##############################
+
+set( target kmailservice )
+
+tde_add_executable( ${target}
+  SOURCES ${target}.cpp
+  LINK kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+
+##### ktelnetservice ############################
+
+set( target ktelnetservice )
+
+tde_add_executable( ${target}
+  SOURCES ${target}.cpp
+  LINK kdeui-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+tde_install_symlink( ${target} ${BIN_INSTALL_DIR}/filesharelist )
diff -Nuar kdelibs-orig//kio/misc/kdesasl/CMakeLists.txt kdelibs/kio/misc/kdesasl/CMakeLists.txt
--- kdelibs-orig//kio/misc/kdesasl/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/kdesasl/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,46 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install(FILES kdesasl.h DESTINATION ${INCLUDE_INSTALL_DIR}/kio )
+
+
+##### kdesasl ###################################
+
+set( target kdesasl )
+
+set( ${target}_SRCS
+  kdesasl.cpp
+)
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 1.2.0
+  LINK kdecore-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/misc/kfile/CMakeLists.txt kdelibs/kio/misc/kfile/CMakeLists.txt
--- kdelibs-orig//kio/misc/kfile/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/kfile/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,43 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kfile #####################################
+
+set( target kfile )
+
+set( ${target}_SRCS
+  fileprops.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
\ Dosya sonunda yenisatır yok.
diff -Nuar kdelibs-orig//kio/misc/kntlm/CMakeLists.txt kdelibs/kio/misc/kntlm/CMakeLists.txt
--- kdelibs-orig//kio/misc/kntlm/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/kntlm/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,47 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install(FILES kntlm.h DESTINATION ${INCLUDE_INSTALL_DIR}/kio )
+
+
+##### kntlm ###################################
+
+set( target kntlm )
+
+set( ${target}_SRCS
+  kntlm.cpp des.cpp
+)
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK kdecore-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/misc/kpac/CMakeLists.txt kdelibs/kio/misc/kpac/CMakeLists.txt
--- kdelibs-orig//kio/misc/kpac/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/kpac/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,70 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_BINARY_DIR}/kjs
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore/network
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kded
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+##### other data ################################
+
+install(FILES proxyscout.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+install(FILES eventsrc DESTINATION ${DATA_INSTALL_DIR}/proxyscout )
+
+
+##### kded_proxyscout ###########################
+
+set( target kded_proxyscout )
+
+set( ${target}_SRCS
+  proxyscout.cpp proxyscout.skel script.cpp
+  downloader.cpp discovery.cpp
+)
+
+set( ${target}_SKELS
+  proxyscout.h
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeinit_kded-shared kjs-shared ${RESOLV_LIBRARIES}
+  DEPENDENCIES dcopidl
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
+
+##### kpac_dhcp_helper ##########################
+
+set( target kpac_dhcp_helper )
+
+# FIXME on Gentoo this binary is not suided
+tde_add_executable( ${target} SETUID
+  SOURCES kpac_dhcp_helper.c
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/misc/ksendbugmail/CMakeLists.txt kdelibs/kio/misc/ksendbugmail/CMakeLists.txt
--- kdelibs-orig//kio/misc/ksendbugmail/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/ksendbugmail/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,41 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### ksendbugmail ##############################
+
+set( target ksendbugmail )
+
+set( ${target}_SRCS
+  main.cpp smtp.cpp
+)
+
+tde_add_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/misc/kssld/CMakeLists.txt kdelibs/kio/misc/kssld/CMakeLists.txt
--- kdelibs-orig//kio/misc/kssld/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/kssld/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,51 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kio/kssl
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio/kssl
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install(FILES kssld.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+
+
+##### kded_kssld ###########################
+
+set( target kded_kssld )
+
+set( ${target}_SRCS
+  kssld.cpp kssld.skel
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeinit_kded-shared
+  DEPENDENCIES dcopidl
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/misc/kwalletd/CMakeLists.txt kdelibs/kio/misc/kwalletd/CMakeLists.txt
--- kdelibs-orig//kio/misc/kwalletd/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/misc/kwalletd/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,53 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+  ${CMAKE_SOURCE_DIR}/kwallet/backend
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install(FILES kwalletd.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+
+
+#### kded_kwalletd ##############################
+
+set( target kded_kwalletd )
+
+set( ${target}_SRCS
+  kwalletd.cpp kwalletd.skel ktimeout.cpp kwalletwizard.ui
+  kbetterthankdialogbase.ui
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeinit_kded-shared kwalletbackend-shared
+  DEPENDENCIES dcopidl
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kio/pics/CMakeLists.txt kdelibs/kio/pics/CMakeLists.txt
--- kdelibs-orig//kio/pics/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/pics/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,14 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+tde_install_icons( DESTINATION ${DATA_INSTALL_DIR}/kio_uiserver/icons )
diff -Nuar kdelibs-orig//kio/tests/CMakeLists.txt kdelibs/kio/tests/CMakeLists.txt
--- kdelibs-orig//kio/tests/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kio/tests/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,40 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### ktradertest ###############################
+
+set( target ktradertest )
+
+set( ${target}_SRCS
+  ktradertest.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kioslave/bzip2/CMakeLists.txt kdelibs/kioslave/bzip2/CMakeLists.txt
--- kdelibs-orig//kioslave/bzip2/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/bzip2/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,46 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kbzip2filter.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### kbzip2filter ##############################
+
+set( target kbzip2filter )
+
+set( ${target}_SRCS
+  kbzip2filter.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared ${BZIP2_LIBRARIES}
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kioslave/CMakeLists.txt kdelibs/kioslave/CMakeLists.txt
--- kdelibs-orig//kioslave/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,18 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( file )
+add_subdirectory( http )
+add_subdirectory( ftp )
+add_subdirectory( gzip )
+add_subdirectory( bzip2 )
+add_subdirectory( metainfo )
+add_subdirectory( iso )
diff -Nuar kdelibs-orig//kioslave/file/CMakeLists.txt kdelibs/kioslave/file/CMakeLists.txt
--- kdelibs-orig//kioslave/file/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/file/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,56 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -D_LARGEFILE64_SOURCE
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES file.h DESTINATION ${INCLUDE_INSTALL_DIR}/kio )
+
+
+##### other data ################################
+
+install( FILES file.protocol DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### kio_file ##################################
+
+set( target kio_file )
+
+set( ${target}_SRCS
+  file.cc
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
+
diff -Nuar kdelibs-orig//kioslave/ftp/CMakeLists.txt kdelibs/kioslave/ftp/CMakeLists.txt
--- kdelibs-orig//kioslave/ftp/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/ftp/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,48 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore/network
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES ftp.protocol DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### kio_ftp ###################################
+
+set( target kio_ftp )
+
+set( ${target}_SRCS
+  ftp.cc
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kioslave/gzip/CMakeLists.txt kdelibs/kioslave/gzip/CMakeLists.txt
--- kdelibs-orig//kioslave/gzip/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/gzip/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,45 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kgzipfilter.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### kgzipfilter ###############################
+
+set( target kgzipfilter )
+
+set( ${target}_SRCS
+  kgzipfilter.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kioslave/http/CMakeLists.txt kdelibs/kioslave/http/CMakeLists.txt
--- kdelibs-orig//kioslave/http/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/http/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,73 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( kcookiejar )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore/network
+  ${CMAKE_SOURCE_DIR}/interfaces
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/httpfilter
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES
+    http_cache_cleaner.desktop http.protocol https.protocol
+    webdav.protocol webdavs.protocol
+  DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### kio_http_cache_cleaner ####################
+
+set( target kio_http_cache_cleaner )
+
+set( ${target}_SRCS
+  http_cache_cleaner.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+)
+
+
+##### kio_http ##################################
+
+# FIXME GSSAPI support is not handled yet
+
+set( target kio_http )
+
+set( ${target}_SRCS
+  http.cc
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK httpfilter-static kntlm-shared kio-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kioslave/http/kcookiejar/CMakeLists.txt kdelibs/kioslave/http/kcookiejar/CMakeLists.txt
--- kdelibs-orig//kioslave/http/kcookiejar/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/http/kcookiejar/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,67 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kcookiejar.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+install( FILES kcookiescfg.upd DESTINATION ${KCONF_UPDATE_INSTALL_DIR} )
+install( FILES domain_info DESTINATION ${DATA_INSTALL_DIR}/khtml )
+
+
+##### kcookiejar ################################
+
+set( target kcookiejar )
+
+set( ${target}_SRCS
+  main.cpp
+)
+
+tde_add_kdeinit_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdecore-shared
+)
+
+
+##### kded_kcookiejar ###########################
+
+set( target kded_kcookiejar )
+
+set( ${target}_SRCS
+  kcookiejar.cpp kcookieserver.cpp kcookiewin.cpp
+  kcookieserver.skel
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeui-shared kdeinit_kded-shared
+  DEPENDENCIES dcopidl
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kioslave/iso/CMakeLists.txt kdelibs/kioslave/iso/CMakeLists.txt
--- kdelibs-orig//kioslave/iso/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/iso/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,55 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( libisofs )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES iso.protocol DESTINATION ${SERVICES_INSTALL_DIR} )
+install( FILES isoservice.desktop DESTINATION ${DATA_INSTALL_DIR}/konqueror/servicemenus )
+install( FILES kio_isorc DESTINATION ${CONFIG_INSTALL_DIR} )
+install( FILES kio_iso.desktop DESTINATION ${APPS_INSTALL_DIR} )
+
+
+##### kio_iso ###################################
+
+set( target kio_iso )
+
+set( ${target}_SRCS
+  kisodirectory.cpp kisofile.cpp qfilehack.cpp
+  kiso.cpp iso.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK isofs-static kio-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kioslave/iso/libisofs/CMakeLists.txt kdelibs/kioslave/iso/libisofs/CMakeLists.txt
--- kdelibs-orig//kioslave/iso/libisofs/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/iso/libisofs/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,23 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+include_directories(
+  ${CMAKE_BINARY_DIR}
+)
+
+
+##### isofs-static ##############################
+
+set( target isofs )
+
+tde_add_library( ${target} STATIC_PIC
+  SOURCES isofs.c
+)
diff -Nuar kdelibs-orig//kioslave/metainfo/CMakeLists.txt kdelibs/kioslave/metainfo/CMakeLists.txt
--- kdelibs-orig//kioslave/metainfo/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kioslave/metainfo/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,47 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES metainfo.protocol DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+##### kio_metainfo ##############################
+
+set( target kio_metainfo )
+
+set( ${target}_SRCS
+  metainfo.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kio-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kjs/CMakeLists.txt kdelibs/kjs/CMakeLists.txt
--- kdelibs-orig//kjs/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kjs/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,68 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    value.h types.h object.h interpreter.h operations.h
+    ustring.h lookup.h ${CMAKE_CURRENT_BINARY_DIR}/global.h
+    identifier.h property_map.h reference.h reference_list.h
+    completion.h scope_chain.h list.h simple_number.h function.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kjs )
+
+
+##### libkjs ####################################
+
+set( target kjs )
+
+set( ${target}_SRCS
+  ustring.cpp date_object.cpp collector.cpp nodes.cpp
+  grammar.cpp lexer.cpp lookup.cpp operations.cpp
+  regexp.cpp function_object.cpp string_object.cpp
+  bool_object.cpp number_object.cpp internal.cpp
+  array_object.cpp math_object.cpp object_object.cpp
+  regexp_object.cpp error_object.cpp function.cpp
+  debugger.cpp value.cpp list.cpp object.cpp
+  interpreter.cpp property_map.cpp nodes2string.cpp
+  identifier.cpp reference.cpp reference_list.cpp
+  scope_chain.cpp dtoa.cpp
+)
+
+tde_add_luts(
+  array_object.cpp math_object.cpp date_object.cpp
+  number_object.cpp string_object.cpp
+)
+
+tde_add_lut( keywords.table lexer.lut.h lexer.cpp )
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 1.2.0
+  LINK kdecore-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kmdi/CMakeLists.txt kdelibs/kmdi/CMakeLists.txt
--- kdelibs-orig//kmdi/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kmdi/CMakeLists.txt	2010-10-24 23:23:04.000000000 +0300
@@ -0,0 +1,65 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( kmdi )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}/res
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/kmdi
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kmdichildarea.h kmdichildfrm.h kmdichildfrmcaption.h
+    kmdidefines.h kmdiiterator.h kmdilistiterator.h
+    kmdimainfrm.h kmdinulliterator.h kmditaskbar.h
+    kmdichildview.h kmditoolviewaccessor.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+#### kmdi #######################################
+
+set( target kmdi )
+
+set( ${target}_SRCS
+  kmdichildarea.cpp kmdichildfrm.cpp kmdichildfrmcaption.cpp
+  kmdichildview.cpp kmdimainfrm.cpp kmditaskbar.cpp
+  kmdidockcontainer.cpp kmditoolviewaccessor.cpp
+  kmdiguiclient.cpp kmdidocumentviewtabwidget.cpp
+  kmdifocuslist.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kmdi2-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kmdi/kmdi/CMakeLists.txt kdelibs/kmdi/kmdi/CMakeLists.txt
--- kdelibs-orig//kmdi/kmdi/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kmdi/kmdi/CMakeLists.txt	2010-10-24 23:23:04.000000000 +0300
@@ -0,0 +1,56 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kmdi
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kutils
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    global.h mainwindow.h toolviewaccessor.h tabwidget.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kmdi )
+
+
+#### kmdi2 ######################################
+
+set( target kmdi2 )
+
+set( ${target}_SRCS
+  mainwindow.cpp dockcontainer.cpp toolviewaccessor.cpp
+  guiclient.cpp tabwidget.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kutils-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//knewstuff/CMakeLists.txt kdelibs/knewstuff/CMakeLists.txt
--- kdelibs-orig//knewstuff/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/knewstuff/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,79 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    downloaddialog.h engine.h entry.h knewstuffgeneric.h
+    knewstuff.h providerdialog.h provider.h uploaddialog.h
+    knewstuffbutton.h knewstuffsecure.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/knewstuff )
+
+
+##### other data ################################
+
+install( FILES types DESTINATION ${DATA_INSTALL_DIR}/knewstuff )
+install( FILES khotnewstuffrc DESTINATION ${CONFIG_INSTALL_DIR} )
+tde_install_icons( )
+
+
+##### knewstuff #################################
+
+set( target knewstuff )
+
+set( ${target}_SRCS
+  engine.cpp entry.cpp downloaddialog.cpp uploaddialog.cpp
+  providerdialog.cpp provider.cpp knewstuff.cpp security.cpp
+  knewstuffgeneric.cpp knewstuffbutton.cpp knewstuffsecure.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kio-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### khotnewstuff ##############################
+
+set( target khotnewstuff )
+
+set( ${target}_SRCS
+  khotnewstuff.cpp
+)
+
+tde_add_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK knewstuff-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kparts/CMakeLists.txt kdelibs/kparts/CMakeLists.txt
--- kdelibs-orig//kparts/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kparts/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,68 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    part.h plugin.h partmanager.h mainwindow.h dockmainwindow.h
+    event.h browserextension.h factory.h historyprovider.h
+    browserinterface.h genericfactory.h componentfactory.h
+    browserrun.h statusbarextension.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kparts )
+
+
+##### other data ################################
+
+install( FILES
+    kpart.desktop krop.desktop krwp.desktop browserview.desktop
+  DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+
+#### kparts #####################################
+
+set( target kparts )
+
+set( ${target}_SRCS
+  part.cpp plugin.cpp partmanager.cpp mainwindow.cpp
+  dockmainwindow.cpp event.cpp browserextension.cpp
+  factory.cpp  historyprovider.cpp browserinterface.cpp
+  browserrun.cpp statusbarextension.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 2.1.0
+  LINK kio-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//krandr/CMakeLists.txt kdelibs/krandr/CMakeLists.txt
--- kdelibs-orig//krandr/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/krandr/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,52 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${XRANDR_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${XRANDR_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    randr.h lowlevel_randr.h ktimerdialog.h libkrandr.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/libkrandr )
+
+
+##### krandr ####################################
+
+set( target krandr )
+
+set( ${target}_SRCS
+  randr.cpp lowlevel_randr.c ktimerdialog.cpp libkrandr.cc
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.95
+  LINK kdeui-shared ${XRANDR_LIBRARIES}
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kresources/CMakeLists.txt kdelibs/kresources/CMakeLists.txt
--- kdelibs-orig//kresources/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kresources/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,82 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kio/kfile
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    resource.h configwidget.h factory.h manageriface.h
+    managerimpl.h manager.h selectdialog.h configdialog.h
+    configpage.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kresources )
+
+
+##### other data ################################
+
+install( FILES kresources_plugin.desktop kresources_manager.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+# FIXME what is xdg_apps_DATA = kresources.desktop
+install( FILES kresources.desktop DESTINATION ${XDG_APPS_INSTALL_DIR} )
+
+
+##### kresources ################################
+
+set( target kresources )
+
+set( ${target}_SRCS
+  resource.cpp factory.cpp managerimpl.cpp configwidget.cpp
+  configdialog.cpp selectdialog.cpp configpage.cpp
+  manageriface.skel manageriface.stub
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.2.0
+  LINK kio-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
+
+
+##### kcm_kresources ############################
+
+set( target kcm_kresources )
+
+set( ${target}_SRCS
+  kcmkresources.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kresources-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kspell2/CMakeLists.txt kdelibs/kspell2/CMakeLists.txt
--- kdelibs-orig//kspell2/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kspell2/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,62 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( ui )
+add_subdirectory( plugins )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/kio
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    settings.h filter.h dictionary.h broker.h
+    backgroundchecker.h defaultdictionary.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kspell2 )
+
+
+##### other data ################################
+
+install( FILES kspellclient.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+
+#### kspell2base ################################
+
+set( target kspell2base )
+
+set( ${target}_SRCS
+  settings.cpp broker.cpp client.cpp filter.cpp
+  backgroundchecker.cpp backgroundthread.cpp
+  backgroundengine.cpp defaultdictionary.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kspell2/plugins/aspell/CMakeLists.txt kdelibs/kspell2/plugins/aspell/CMakeLists.txt
--- kdelibs-orig//kspell2/plugins/aspell/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kspell2/plugins/aspell/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,48 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kspell2
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${ASPELL_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${ASPELL_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kspell_aspell.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+#### kspell_aspell ##############################
+
+set( target kspell_aspell )
+
+set( ${target}_SRCS
+  kspell_aspellclient.cpp kspell_aspelldict.cpp
+)
+
+tde_add_kpart( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kspell2-shared ${ASPELL_LIBRARIES}
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kspell2/plugins/CMakeLists.txt kdelibs/kspell2/plugins/CMakeLists.txt
--- kdelibs-orig//kspell2/plugins/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kspell2/plugins/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,20 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+if( WITH_ASPELL )
+  add_subdirectory( aspell )
+endif(WITH_ASPELL)
+
+if( WITH_HSPELL )
+  add_subdirectory( hspell )
+endif(WITH_HSPELL)
+
+add_subdirectory( ispell )
diff -Nuar kdelibs-orig//kspell2/plugins/hspell/CMakeLists.txt kdelibs/kspell2/plugins/hspell/CMakeLists.txt
--- kdelibs-orig//kspell2/plugins/hspell/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kspell2/plugins/hspell/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,53 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kspell2
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${HSPELL_INCLUDE_DIRS}
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+  ${HSPELL_LIBARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kspell_hspell.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+#### kspell_hspell ##############################
+
+### FIXME Not checked because hspell was removed from gentoo few years ago.
+### FIXME The maintainer recommend to use aspell with hebrew dictionary.
+### FIXME Maybe support for hspell will be removed too?
+### FIXME http://bugs.gentoo.org/show_bug.cgi?id=177546
+
+set( target kspell_hspell )
+
+set( ${target}_SRCS
+  kspell_hspellclient.cpp kspell_hspelldict.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kspell2-shared ${HSPELL_LIBRARIES}
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kspell2/plugins/ispell/CMakeLists.txt kdelibs/kspell2/plugins/ispell/CMakeLists.txt
--- kdelibs-orig//kspell2/plugins/ispell/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kspell2/plugins/ispell/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,48 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kspell2
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES kspell_ispell.desktop DESTINATION ${SERVICES_INSTALL_DIR} )
+
+
+#### kspell_ispell ##############################
+
+set( target kspell_ispell )
+
+set( ${target}_SRCS
+  kspell_ispellclient.cpp kspell_ispelldict.cpp
+  correct.cpp good.cpp hash.cpp lookup.cpp makedent.cpp
+  tgood.cpp ispell_checker.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kspell2-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kspell2/ui/CMakeLists.txt kdelibs/kspell2/ui/CMakeLists.txt
--- kdelibs-orig//kspell2/ui/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kspell2/ui/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,67 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -DKDE_NO_COMPAT
+  -DQT_NO_COMPAT
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kspell2
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    dialog.h highlighter.h configdialog.h configwidget.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kspell2 )
+
+
+#### kspell2 (static) ###########################
+
+set( target kspell2 )
+
+set( ${target}_SRCS
+   configwidget.cpp highlighter.cpp configdialog.cpp
+   kspell2ui.ui configui.ui
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
+
+
+#### kspell2 ####################################
+
+set( target kspell2 )
+
+set( ${target}_SRCS
+  dialog.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kspell2-static kspell2base-static kutils-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kstyles/CMakeLists.txt kdelibs/kstyles/CMakeLists.txt
--- kdelibs-orig//kstyles/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,20 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( plastik )
+add_subdirectory( highcolor )
+add_subdirectory( highcontrast )
+add_subdirectory( themes )
+add_subdirectory( light )
+add_subdirectory( kthemestyle )
+add_subdirectory( riscos )
+add_subdirectory( utils )
+add_subdirectory( keramik )
diff -Nuar kdelibs-orig//kstyles/highcolor/CMakeLists.txt kdelibs/kstyles/highcolor/CMakeLists.txt
--- kdelibs-orig//kstyles/highcolor/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/highcolor/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,42 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -DQT_PLUGIN
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### highcolor #################################
+
+set( target highcolor )
+
+set( ${target}_SRCS
+  highcolor.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdefx-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/styles
+)
diff -Nuar kdelibs-orig//kstyles/highcontrast/CMakeLists.txt kdelibs/kstyles/highcontrast/CMakeLists.txt
--- kdelibs-orig//kstyles/highcontrast/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/highcontrast/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,50 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( config )
+
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -DQT_PLUGIN
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES highcontrast.themerc DESTINATION ${DATA_INSTALL_DIR}/kstyle/themes )
+
+
+##### highcontrast ##############################
+
+set( target highcontrast )
+
+set( ${target}_SRCS
+  highcontrast.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdefx-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/styles
+)
diff -Nuar kdelibs-orig//kstyles/highcontrast/config/CMakeLists.txt kdelibs/kstyles/highcontrast/config/CMakeLists.txt
--- kdelibs-orig//kstyles/highcontrast/config/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/highcontrast/config/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,41 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kstyle_highcontrast_config ################
+
+set( target kstyle_highcontrast_config )
+
+set( ${target}_SRCS
+  highcontrastconfig.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kstyles/keramik/CMakeLists.txt kdelibs/kstyles/keramik/CMakeLists.txt
--- kdelibs-orig//kstyles/keramik/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/keramik/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,71 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -UQT_NO_ASCII_CAST
+  -DQT_PLUGIN
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### genembed ##################################
+
+set( target genembed )
+
+set( ${target}_SRCS
+  genembed.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdefx-shared
+)
+
+
+##### pixmaps.keramik ###########################
+
+file(GLOB _pics "${CMAKE_CURRENT_SOURCE_DIR}/pics/*.png" )
+
+add_custom_command(
+  OUTPUT pixmaps.keramik keramikrc.h
+  COMMAND ./genembed ${_pics} 2>/dev/null > pixmaps.keramik
+  DEPENDS genembed )
+
+
+##### keramik ###################################
+
+set( target keramik )
+
+set( ${target}_SRCS
+  keramik.cpp pixmaploader.cpp gradients.cpp colorutil.cpp
+)
+
+set_source_files_properties( pixmaploader.cpp PROPERTIES OBJECT_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/pixmaps.keramik )
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdefx-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/styles
+)
diff -Nuar kdelibs-orig//kstyles/kthemestyle/CMakeLists.txt kdelibs/kstyles/kthemestyle/CMakeLists.txt
--- kdelibs-orig//kstyles/kthemestyle/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/kthemestyle/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,42 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -DQT_PLUGIN
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kthemestyle ###############################
+
+set( target kthemestyle )
+
+set( ${target}_SRCS
+  kthemebase.cpp kthemestyle.cpp kstyledirs.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdefx-shared kdecore-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/styles
+)
diff -Nuar kdelibs-orig//kstyles/light/CMakeLists.txt kdelibs/kstyles/light/CMakeLists.txt
--- kdelibs-orig//kstyles/light/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/light/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,42 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -DQT_PLUGIN
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### light #####################################
+
+set( target light )
+
+set( ${target}_SRCS
+  light.cpp lightstyle-v2.cpp lightstyle-v3.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdefx-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/styles
+)
diff -Nuar kdelibs-orig//kstyles/plastik/CMakeLists.txt kdelibs/kstyles/plastik/CMakeLists.txt
--- kdelibs-orig//kstyles/plastik/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/plastik/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,49 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( config )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+  -DQT_PLUGIN
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+install( FILES plastik.themerc DESTINATION ${DATA_INSTALL_DIR}/kstyle/themes )
+
+
+##### plastik ###################################
+
+set( target plastik )
+
+set( ${target}_SRCS
+  plastik.cpp misc.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdefx-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/styles
+)
diff -Nuar kdelibs-orig//kstyles/plastik/config/CMakeLists.txt kdelibs/kstyles/plastik/config/CMakeLists.txt
--- kdelibs-orig//kstyles/plastik/config/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/plastik/config/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,41 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### kstyle_plastik_config ######################
+
+set( target kstyle_plastik_config )
+
+set( ${target}_SRCS
+  plastikconf.cpp
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeui-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kstyles/riscos/CMakeLists.txt kdelibs/kstyles/riscos/CMakeLists.txt
--- kdelibs-orig//kstyles/riscos/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/riscos/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,30 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    arrowdown.png arrowdown_down.png arrowleft.png
+    arrowleft_down.png arrowright.png arrowright_down.png
+    arrowup.png arrowup_down.png background.png
+    check.png check_checked.png checkmark.png
+    combo.png combo_down.png hscrollback.png
+    hscrollbar.png hscrollbar_down.png hscrollborder.png
+    htab.png menu_back.png radio.png radio_down.png
+    raised_border.png scrollborder.png slider.png
+    sunk_border.png tab_up.png vscrollback.png
+    vscrollbar.png vscrollbar_down.png vscrollborder.png
+    vtab.png
+  DESTINATION ${DATA_INSTALL_DIR}/kstyle/pixmaps/riscos )
+
+install( FILES
+    riscos.themerc
+  DESTINATION ${DATA_INSTALL_DIR}/kstyle/themes )
diff -Nuar kdelibs-orig//kstyles/themes/CMakeLists.txt kdelibs/kstyles/themes/CMakeLists.txt
--- kdelibs-orig//kstyles/themes/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/themes/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,23 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    qtplatinum.themerc qtcde.themerc qtmotif.themerc
+    qtwindows.themerc qtsgi.themerc qtmotifplus.themerc
+    highcolor.themerc default.themerc b3.themerc
+    light-v2.themerc light-v3.themerc keramik.themerc
+  DESTINATION ${DATA_INSTALL_DIR}/kstyle/themes )
+
+install( FILES
+    kthemestylerc
+  DESTINATION ${CONFIG_INSTALL_DIR} )
diff -Nuar kdelibs-orig//kstyles/utils/CMakeLists.txt kdelibs/kstyles/utils/CMakeLists.txt
--- kdelibs-orig//kstyles/utils/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/utils/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,12 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( installtheme )
diff -Nuar kdelibs-orig//kstyles/utils/installtheme/CMakeLists.txt kdelibs/kstyles/utils/installtheme/CMakeLists.txt
--- kdelibs-orig//kstyles/utils/installtheme/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kstyles/utils/installtheme/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,38 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+##### kinstalltheme #############################
+
+set( target kinstalltheme )
+
+set( ${target}_SRCS
+  main.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kunittest/CMakeLists.txt kdelibs/kunittest/CMakeLists.txt
--- kdelibs-orig//kunittest/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kunittest/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,56 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES runner.h tester.h module.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/kunittest )
+
+
+##### libkunittest ##############################
+
+set( target kunittest )
+
+set( ${target}_SRCS
+  runner.cpp tester.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kdecore-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### kunittestmodrunner ########################
+
+tde_add_executable( kunittestmodrunner
+  SOURCES modrunner.cpp
+  LINK kunittest-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kutils/CMakeLists.txt kdelibs/kutils/CMakeLists.txt
--- kdelibs-orig//kutils/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kutils/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,70 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( ksettings )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+   ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio/kio
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/interfaces/kregexpeditor
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kfind.h kfinddialog.h kreplace.h kreplacedialog.h
+    kcmoduleinfo.h kcmoduleloader.h kcmultidialog.h
+    kmultitabbar.h kplugininfo.h kcmoduleproxy.h
+    kpluginselector.h kcmodulecontainer.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES kplugininfo.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
+
+
+#### kutils #####################################
+
+set( target kutils )
+
+set( ${target}_SRCS
+  kfind.cpp kfinddialog.cpp kreplace.cpp
+  kreplacedialog.cpp kcmoduleinfo.cpp kcmoduleloader.cpp
+  kcmultidialog.cpp kmultitabbar.cpp kplugininfo.cpp
+  kcmoduleproxy.cpp kpluginselector.cpp kcmodulecontainer.cpp
+  kcmoduleproxyIface.skel kcmoduleproxyIfaceImpl.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.2.0
+  EMBED ksettings-static
+  LINK kparts-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
diff -Nuar kdelibs-orig//kutils/ksettings/CMakeLists.txt kdelibs/kutils/ksettings/CMakeLists.txt
--- kdelibs-orig//kutils/ksettings/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kutils/ksettings/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,43 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kutils
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kio/kio
+)
+
+##### headers ###################################
+
+install( FILES
+    dispatcher.h dialog.h pluginpage.h componentsdialog.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/ksettings )
+
+
+##### ksettings #################################
+
+set( target ksettings )
+
+set( ${target}_SRCS
+  dispatcher.cpp dialog.cpp pluginpage.cpp componentsdialog.cpp
+)
+
+tde_add_library( ${target} STATIC_PIC AUTOMOC
+  SOURCES ${${target}_SRCS}
+)
diff -Nuar kdelibs-orig//kwallet/backend/CMakeLists.txt kdelibs/kwallet/backend/CMakeLists.txt
--- kdelibs-orig//kwallet/backend/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kwallet/backend/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,45 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kwallet/client
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### libkwalletbackend #########################
+
+set( target kwalletbackend )
+
+set( ${target}_SRCS
+  blockcipher.cc blowfish.cc
+  cbc.cc sha1.cc kwalletentry.cc
+  kwalletbackend.cc
+)
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.0
+  LINK kdecore-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kwallet/client/CMakeLists.txt kdelibs/kwallet/client/CMakeLists.txt
--- kdelibs-orig//kwallet/client/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kwallet/client/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,50 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kwallet.h kwallettypes.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### libkwalletclient ##############################
+
+set( target kwalletclient )
+
+set( ${target}_SRCS
+  kwallet.skel kwallet.cc
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 1.0.1
+  LINK kdecore-shared
+  DEPENDENCIES dcopidl
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//kwallet/CMakeLists.txt kdelibs/kwallet/CMakeLists.txt
--- kdelibs-orig//kwallet/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/kwallet/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,13 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( client )
+add_subdirectory( backend )
diff -Nuar kdelibs-orig//libkmid/CMakeLists.txt kdelibs/libkmid/CMakeLists.txt
--- kdelibs-orig//libkmid/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/libkmid/CMakeLists.txt	2010-10-24 23:23:04.000000000 +0300
@@ -0,0 +1,55 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    midiout.h player.h track.h midimapper.h midfile.h
+    dattypes.h midistat.h deviceman.h synthout.h
+    fmout.h gusout.h alsaout.h voiceman.h notearray.h
+    mt32togm.h midispec.h libkmid.h
+  DESTINATION ${INCLUDE_INSTALL_DIR}/libkmid )
+
+
+##### kmid ######################################
+
+set( target kmid )
+
+set( ${target}_SRCS
+  midiout.cc player.cc track.cc midimapper.cc
+  midfile.cc dattypes.cc midistat.cc deviceman.cc
+  synthout.cc fmout.cc gusout.cc alsaout.cc voiceman.cc
+  mt32togm.cc notearray.cc libkmid.cc
+)
+
+tde_add_library( ${target} SHARED
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.95
+  LINK kdecore-shared ${ALSA_LIBRARIES}
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//libkscreensaver/CMakeLists.txt kdelibs/libkscreensaver/CMakeLists.txt
--- kdelibs-orig//libkscreensaver/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/libkscreensaver/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,51 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore
+)
+
+list( REMOVE_ITEM CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined" )
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    kscreensaver.h kscreensaver_vroot.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### kscreensaver ##############################
+
+set( target kscreensaver )
+
+set( ${target}_SRCS
+  main.cpp kscreensaver.cpp
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 4.2.0
+  LINK kdecore-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
diff -Nuar kdelibs-orig//libltdl/CMakeLists.txt kdelibs/libltdl/CMakeLists.txt
--- kdelibs-orig//libltdl/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/libltdl/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,19 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+include_directories(
+  ${CMAKE_BINARY_DIR}
+)
+
+tde_add_library( ltdlc STATIC_PIC
+  SOURCES ltdl.c
+  LINK ${DL_LIBRARIES}
+)
diff -Nuar kdelibs-orig//licenses/CMakeLists.txt kdelibs/licenses/CMakeLists.txt
--- kdelibs-orig//licenses/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/licenses/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,16 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    BSD GPL_V2 LGPL_V2 QPL_V1.0 ARTISTIC
+  DESTINATION ${DATA_INSTALL_DIR}/LICENSES )
diff -Nuar kdelibs-orig//mimetypes/application/CMakeLists.txt kdelibs/mimetypes/application/CMakeLists.txt
--- kdelibs-orig//mimetypes/application/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/application/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,110 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    x-dvi.desktop x-gzdvi.desktop x-bz2dvi.desktop
+    x-tex-gf.desktop x-gzip.desktop x-pak.desktop
+    x-object.desktop x-tex-pk.desktop pdf.desktop
+    x-tar.desktop x-trash.desktop x-zip.desktop
+    x-zip-compressed.desktop x-core.desktop x-javascript.desktop
+    java.desktop x-java.desktop x-java-applet.desktop
+    x-jar.desktop x-arj.desktop x-tarz.desktop
+    x-gzpostscript.desktop postscript.desktop octet-stream.desktop
+    x-shellscript.desktop x-desktop.desktop
+    x-executable.desktop x-executable-script.desktop x-archive.desktop x-lha.desktop
+    x-tbz.desktop x-tgz.desktop x-awk.desktop
+    x-perl.desktop x-perl-module.desktop x-compress.desktop x-cpio.desktop
+    x-rpm.desktop msword.desktop x-sharedlib.desktop
+    wordperfect.desktop x-troff.desktop x-troff-man.desktop
+    x-python.desktop x-python-bytecode.desktop
+    x-bzip.desktop x-bzip2.desktop mspowerpoint.desktop vnd.ms-powerpoint.desktop
+    msexcel.desktop smil.desktop x-rar.desktop x-zoo.desktop
+    x-tzo.desktop x-lzop.desktop
+    x-applixword.desktop x-applixspread.desktop x-applixgraphics.desktop
+    xhtml+xml.desktop vnd.ms-excel.desktop vnd.ms-word.desktop
+    x-shockwave-flash.desktop x-designer.desktop x-linguist.desktop
+    x-ogg.desktop ogg.desktop x-pkcs12.desktop x-x509-ca-cert.desktop
+    pkcs7-signature.desktop pgp-signature.desktop pgp-encrypted.desktop
+    pgp-keys.desktop pgp.desktop x-msmetafile.desktop
+    x-mswrite.desktop illustrator.desktop x-abiword.desktop
+    x-gnumeric.desktop x-graphite.desktop x-karbon.desktop x-kchart.desktop
+    x-kformula.desktop x-kivio.desktop x-kontour.desktop
+    x-kpresenter.desktop x-krita.desktop
+    x-kspread.desktop x-kugar.desktop x-kword.desktop
+    x-quattropro.desktop x-amipro.desktop x-tgif.desktop
+    x-lyx.desktop x-zerosize.desktop x-kpovmodeler.desktop x-cda.desktop
+    pkcs7-mime.desktop pkcs10.desktop sieve.desktop mbox.desktop
+    x-hancomword.desktop
+    x-font-bdf.desktop x-font-pcf.desktop x-font-speedo.desktop x-font-type1.desktop
+    x-font-ghostscript.desktop x-font-snf.desktop x-font-ttf.desktop
+    vnd.ms-asf.desktop x-msdos-program.desktop x-deb.desktop x-debian-package.desktop
+    vnd.stardivision.writer.desktop vnd.stardivision.calc.desktop
+    vnd.stardivision.impress.desktop
+    vnd.sun.xml.impress.desktop vnd.sun.xml.writer.desktop
+    vnd.sun.xml.base.desktop
+    x-magicpoint.desktop x-vnd.kde.kugar.mixed.desktop x-vnd.kde.kexi.desktop
+    vnd.palm.desktop x-kudesigner.desktop x-vnd.kde.kplato.desktop
+    vnd.sun.xml.calc.desktop mathml+xml.desktop x-bittorrent.desktop
+    x-msaccess.desktop x-gettext.desktop x-ruby.desktop x-kcsrc.desktop
+    x-php.desktop x-font-ttc.desktop x-font-otf.desktop
+    vnd.mozilla.xul+xml.desktop vnd.sun.xml.draw.desktop
+    x-kde-wallet.desktop x-cue.desktop x-ica.desktop x-iso.desktop x-ace.desktop
+    x-afm.desktop x-arc.desktop vnd.rn-realmedia.desktop x-dbase.desktop
+    vnd.sun.xml.calc.template.desktop vnd.sun.xml.writer.template.desktop
+    vnd.sun.xml.impress.template.desktop vnd.sun.xml.draw.template.desktop
+    vnd.stardivision.chart.desktop vnd.stardivision.draw.desktop
+    vnd.stardivision.math.desktop vnd.stardivision.writer-global.desktop vnd.sun.xml.writer.master.desktop
+    x-xliff.desktop x-7z.desktop xml.desktop x-webarchive.desktop  x-mimearchive.desktop
+    xsd.desktop relaxng.desktop
+    vnd.oasis.opendocument.graphics-template.desktop
+    vnd.oasis.opendocument.graphics.desktop
+    vnd.oasis.opendocument.formula.desktop
+    vnd.oasis.opendocument.presentation-template.desktop
+    vnd.oasis.opendocument.presentation.desktop
+    vnd.oasis.opendocument.spreadsheet-template.desktop
+    vnd.oasis.opendocument.spreadsheet.desktop
+    vnd.oasis.opendocument.text-template.desktop
+    vnd.oasis.opendocument.text.desktop
+    vnd.oasis.opendocument.image.desktop
+    vnd.oasis.opendocument.chart.desktop
+    x-java-jnlp-file.desktop xml-dtd.desktop fits.desktop
+    x-rar-compressed.desktop
+    x-sqlite2.desktop x-sqlite3.desktop chm.desktop
+    x-mplayer2.desktop
+    x-nzb.desktop
+    vnd.openxmlformats-officedocument.wordprocessingml.document.desktop
+    vnd.openxmlformats-officedocument.wordprocessingml.template.desktop
+    vnd.ms-word.document.macroEnabled.12.desktop
+    vnd.ms-word.template.macroEnabled.12.desktop
+    vnd.openxmlformats-officedocument.spreadsheetml.sheet.desktop
+    vnd.openxmlformats-officedocument.spreadsheetml.template.desktop
+    vnd.ms-excel.sheet.macroEnabled.12.desktop
+    vnd.ms-excel.template.macroEnabled.12.desktop
+    vnd.ms-excel.addin.macroEnabled.12.desktop
+    vnd.ms-excel.sheet.binary.macroEnabled.12.desktop
+    vnd.openxmlformats-officedocument.presentationml.presentation.desktop
+    vnd.openxmlformats-officedocument.presentationml.template.desktop
+    vnd.openxmlformats-officedocument.presentationml.slideshow.desktop
+    vnd.ms-powerpoint.addin.macroEnabled.12.desktop
+    vnd.ms-powerpoint.presentation.macroEnabled.12.desktop
+    vnd.ms-powerpoint.template.macroEnabled.12.desktop
+    vnd.ms-powerpoint.slideshow.macroEnabled.12.desktop
+    x-lzma.desktop
+    x-tlz.desktop
+    x-txz.desktop
+    x-xz.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/application )
+
+install( FILES uninstall.desktop DESTINATION ${MIME_INSTALL_DIR}/application RENAME x-applix.desktop )
+install( FILES uninstall.desktop DESTINATION ${MIME_INSTALL_DIR}/application RENAME x-oowriter.desktop )
+install( FILES uninstall.desktop DESTINATION ${MIME_INSTALL_DIR}/application RENAME x-ooimpress.desktop )
diff -Nuar kdelibs-orig//mimetypes/audio/CMakeLists.txt kdelibs/mimetypes/audio/CMakeLists.txt
--- kdelibs-orig//mimetypes/audio/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/audio/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,24 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    x-wav.desktop x-mod.desktop x-midi.desktop
+    x-mp3.desktop x-mp2.desktop mp4.desktop mpeg.desktop
+    basic.desktop x-adpcm.desktop x-aiff.desktop
+    x-pn-realaudio.desktop x-pn-realaudio-plugin.desktop vnd.rn-realaudio.desktop
+    x-mpegurl.desktop mpegurl.desktop x-scpls.desktop
+    vorbis.desktop x-vorbis.desktop
+    x-flac.desktop x-oggflac.desktop x-speex.desktop
+    x-matroska.desktop x-musepack.desktop
+    ac3.desktop aac.desktop x-ms-wma.desktop prs.sid.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/audio )
diff -Nuar kdelibs-orig//mimetypes/CMakeLists.txt kdelibs/mimetypes/CMakeLists.txt
--- kdelibs-orig//mimetypes/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,25 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( application )
+add_subdirectory( text )
+add_subdirectory( audio )
+add_subdirectory( video )
+add_subdirectory( image )
+add_subdirectory( inode )
+add_subdirectory( message )
+add_subdirectory( multipart )
+add_subdirectory( model )
+add_subdirectory( uri )
+
+##### other data ################################
+
+install( FILES all.desktop allfiles.desktop DESTINATION ${MIME_INSTALL_DIR}/all )
diff -Nuar kdelibs-orig//mimetypes/image/CMakeLists.txt kdelibs/mimetypes/image/CMakeLists.txt
--- kdelibs-orig//mimetypes/image/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/image/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,27 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    jpeg.desktop jpg.desktop tiff.desktop x-xpm.desktop x-xbm.desktop
+    svg+xml.desktop svg-xml.desktop png.desktop gif.desktop fax-g3.desktop cgm.desktop
+    x-bmp.desktop x-photo-cd.desktop x-eps.desktop x-ico.desktop
+    x-jng.desktop x-xcf-gimp.desktop x-wmf.desktop x-msod.desktop
+    x-xfig.desktop x-portable-bitmap.desktop x-portable-greymap.desktop
+    x-portable-pixmap.desktop x-pcx.desktop x-targa.desktop jp2.desktop
+    x-vnd.trolltech.qpicture.desktop x-vnd.adobe.photoshop.desktop
+    x-xcursor.desktop pjpeg.desktop x-exr.desktop
+    x-rgb.desktop x-dds.desktop x-djvu.desktop x-djvu-2.desktop x-hdr.desktop
+    fits.desktop x-raw.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/image )
+
+install( FILES uninstall.desktop DESTINATION ${MIME_INSTALL_DIR}/image RENAME wmf.desktop )
diff -Nuar kdelibs-orig//mimetypes/inode/CMakeLists.txt kdelibs/mimetypes/inode/CMakeLists.txt
--- kdelibs-orig//mimetypes/inode/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/inode/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,17 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    block.desktop chardevice.desktop directory-locked.desktop
+    directory.desktop fifo.desktop socket.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/inode )
diff -Nuar kdelibs-orig//mimetypes/message/CMakeLists.txt kdelibs/mimetypes/message/CMakeLists.txt
--- kdelibs-orig//mimetypes/message/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/message/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,16 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    rfc822.desktop news.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/message )
diff -Nuar kdelibs-orig//mimetypes/model/CMakeLists.txt kdelibs/mimetypes/model/CMakeLists.txt
--- kdelibs-orig//mimetypes/model/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/model/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,16 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    vrml.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/model )
diff -Nuar kdelibs-orig//mimetypes/multipart/CMakeLists.txt kdelibs/mimetypes/multipart/CMakeLists.txt
--- kdelibs-orig//mimetypes/multipart/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/multipart/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,17 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    mixed.desktop x-mixed-replace.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/multipart )
+
diff -Nuar kdelibs-orig//mimetypes/text/CMakeLists.txt kdelibs/mimetypes/text/CMakeLists.txt
--- kdelibs-orig//mimetypes/text/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/text/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,27 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    x-c++src.desktop x-c++hdr.desktop x-csrc.desktop x-java.desktop
+    x-makefile.desktop x-moc.desktop x-pascal.desktop x-objchdr.desktop
+    x-tcl.desktop x-tex.desktop html.desktop plain.desktop enriched.desktop x-chdr.desktop
+    rtf.desktop sgml.desktop xml.desktop css.desktop x-vcard.desktop x-ldif.desktop
+    x-vcalendar.desktop x-diff.desktop x-objcsrc.desktop x-log.desktop
+    x-bibtex.desktop rdf.desktop rss.desktop calendar.desktop x-adasrc.desktop
+    x-csv.desktop x-latex.desktop x-xslfo.desktop x-xslt.desktop vnd.wap.wml.desktop x-katefilelist.desktop
+    docbook.desktop x-mswinurl.desktop x-hex.desktop vnd.abc.desktop javascript.desktop x-python.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/text )
+
+install( FILES uninstall.desktop DESTINATION ${MIME_INSTALL_DIR}/text RENAME x-perl.desktop )
+install( FILES uninstall.desktop DESTINATION ${MIME_INSTALL_DIR}/text RENAME x-python.desktop )
+install( FILES uninstall.desktop DESTINATION ${MIME_INSTALL_DIR}/text RENAME x-lyx.desktop )
diff -Nuar kdelibs-orig//mimetypes/uri/CMakeLists.txt kdelibs/mimetypes/uri/CMakeLists.txt
--- kdelibs-orig//mimetypes/uri/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/uri/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,16 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    mms.desktop mmst.desktop mmsu.desktop pnm.desktop rtspt.desktop rtspu.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/uri )
diff -Nuar kdelibs-orig//mimetypes/video/CMakeLists.txt kdelibs/mimetypes/video/CMakeLists.txt
--- kdelibs-orig//mimetypes/video/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/mimetypes/video/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,19 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    mpeg.desktop quicktime.desktop x-flic.desktop
+    x-msvideo.desktop x-mng.desktop x-ms-asf.desktop x-ms-wmv.desktop
+    x-theora.desktop mp4.desktop x-ogm.desktop x-matroska.desktop
+    vnd.rn-realvideo.desktop avi.desktop
+  DESTINATION ${MIME_INSTALL_DIR}/video )
diff -Nuar kdelibs-orig//networkstatus/CMakeLists.txt kdelibs/networkstatus/CMakeLists.txt
--- kdelibs-orig//networkstatus/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/networkstatus/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,106 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/dcop
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdeui
+  ${CMAKE_SOURCE_DIR}/kded
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### headers ###################################
+
+install( FILES
+    serviceiface.h provideriface.h connectionmanager.h
+    networkstatuscommon.h networkstatusindicator.h
+    networkstatusiface.h
+  DESTINATION ${INCLUDE_INSTALL_DIR} )
+
+
+##### other data ################################
+
+install( FILES networkstatus.desktop DESTINATION ${SERVICES_INSTALL_DIR}/kded )
+
+
+##### networkstatus #############################
+
+set( target networkstatus )
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES networkstatuscommon.cpp
+  VERSION 0.0.0
+  LINK  kdeui-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+)
+
+
+##### connectionmanager #########################
+
+set( target connectionmanager )
+
+set( ${target}_SRCS
+  connectionmanager.cpp networkstatusindicator.cpp
+  connectionmanager.skel clientiface.stub networkstatusiface.stub
+)
+
+tde_add_library( ${target} SHARED AUTOMOC
+  SOURCES ${${target}_SRCS}
+  VERSION 0.0.0
+  LINK networkstatus-shared
+  DESTINATION ${LIB_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
+
+
+##### kded_networkstatus ########################
+
+set( target kded_networkstatus )
+
+set( ${target}_SRCS
+  networkstatus.cpp network.cpp networkstatus.skel
+  clientiface.skel serviceiface.skel
+)
+
+tde_add_kpart( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK kdeinit_kded-shared networkstatus-shared
+  DESTINATION ${PLUGIN_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
+
+
+##### networkstatustestservice ##################
+
+set( target networkstatustestservice )
+
+set( ${target}_SRCS
+  testservice.cpp provideriface.skel serviceiface.stub
+)
+
+tde_add_executable( ${target} AUTOMOC
+  SOURCES ${${target}_SRCS}
+  LINK networkstatus-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+  DEPENDENCIES dcopidl
+)
diff -Nuar kdelibs-orig//pics/CMakeLists.txt kdelibs/pics/CMakeLists.txt
--- kdelibs-orig//pics/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/pics/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,57 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+add_subdirectory( hicolor )
+add_subdirectory( crystalsvg )
+add_subdirectory( emoticons )
+
+
+# ksvgtopng is compiled only if we have libart support
+if( WITH_LIBART )
+
+add_definitions(
+  ${TQT_CFLAGS_OTHER}
+)
+
+include_directories(
+  ${TQT_INCLUDE_DIRS}
+  ${LIBART_INCLUDE_DIRS}
+  ${CMAKE_BINARY_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdefx
+  ${CMAKE_SOURCE_DIR}/kdecore
+  ${CMAKE_SOURCE_DIR}/kdecore/svgicons
+)
+
+link_directories(
+  ${TQT_LIBRARY_DIRS}
+)
+
+
+##### other data ################################
+
+tde_install_symlink( crystalsvg ${ICON_INSTALL_DIR}/default.kde )
+
+
+##### ksvgtopng #################################
+
+set( target ksvgtopng )
+
+set( ${target}_SRCS
+  ksvgtopng.cpp
+)
+
+tde_add_executable( ${target}
+  SOURCES ${${target}_SRCS}
+  LINK kdesvgicons-static kdecore-shared
+  DESTINATION ${BIN_INSTALL_DIR}
+)
+
+endif( WITH_LIBART )
diff -Nuar kdelibs-orig//pics/crystalsvg/CMakeLists.txt kdelibs/pics/crystalsvg/CMakeLists.txt
--- kdelibs-orig//pics/crystalsvg/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/pics/crystalsvg/CMakeLists.txt	2010-10-24 23:23:04.000000000 +0300
@@ -0,0 +1,15 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+# FIXME generating png icons are not implemented
+
+install( FILES index.theme DESTINATION ${ICON_INSTALL_DIR}/crystalsvg )
+tde_install_icons( )
diff -Nuar kdelibs-orig//pics/emoticons/CMakeLists.txt kdelibs/pics/emoticons/CMakeLists.txt
--- kdelibs-orig//pics/emoticons/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/pics/emoticons/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,24 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+##### other data ################################
+
+install( FILES
+    angry.png bat.png beer.png biggrin.png cake.png
+    camera.png cat.png clock.png cocktail.png confused.png
+    cry.png cup.png dog.png email.png embarassed.png
+    emoticons.xml film.png kiss.png lightbulb.png love.png
+    note.png oh.png omg.png phone.png present.png rose.png
+    sad.png shade.png sleep.png smile.png star.png
+    teeth.png thumbs_down.png thumbs_up.png tongue.png
+    unhappy.png unlove.png wilted_rose.png wink.png
+    foot_in_mouth.png innocent.png undecided.png
+  DESTINATION ${SHARE_INSTALL_PREFIX}/emoticons/Default )
diff -Nuar kdelibs-orig//pics/hicolor/CMakeLists.txt kdelibs/pics/hicolor/CMakeLists.txt
--- kdelibs-orig//pics/hicolor/CMakeLists.txt	1970-01-01 02:00:00.000000000 +0200
+++ kdelibs/pics/hicolor/CMakeLists.txt	2010-10-24 23:23:05.000000000 +0300
@@ -0,0 +1,12 @@
+#################################################
+#
+#  (C) 2010 Serghei Amelian
+#  serghei (DOT) amelian (AT) gmail.com
+#
+#  Improvements and feedback are welcome
+#
+#  This file is released under GPL >= 2
+#
+#################################################
+
+install( FILES index.theme DESTINATION ${ICON_INSTALL_DIR}/hicolor )
