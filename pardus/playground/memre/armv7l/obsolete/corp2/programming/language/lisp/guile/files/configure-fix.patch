Index: guile-1.8.6/configure.in
===================================================================
--- guile-1.8.6.orig/configure.in
+++ guile-1.8.6/configure.in
@@ -38,7 +38,6 @@ AC_INIT(patsubst(m4_esyscmd(. ./GUILE-VE
 ]),
         [bug-guile@gnu.org])
 AC_CONFIG_AUX_DIR([build-aux])
-AC_CONFIG_MACRO_DIR([m4])
 AC_CONFIG_SRCDIR(GUILE-VERSION)
 
 AM_INIT_AUTOMAKE([gnu no-define check-news -Wall -Wno-override])
@@ -1334,39 +1333,7 @@ AM_CONDITIONAL([BUILD_PTHREAD_SUPPORT],
 if test "$with_threads" = pthreads; then
 
 AC_MSG_CHECKING(whether pthread_attr_getstack works for the main thread)
-old_CFLAGS="$CFLAGS"
-CFLAGS="$PTHREAD_CFLAGS $CFLAGS"
-AC_RUN_IFELSE([AC_LANG_SOURCE([[
-#if HAVE_PTHREAD_ATTR_GETSTACK
-#include <pthread.h>
-
-int main ()
-{
-  pthread_attr_t attr;
-  void *start, *end;
-  size_t size;
-
-  pthread_getattr_np (pthread_self (), &attr);
-  pthread_attr_getstack (&attr, &start, &size);
-  end = (char *)start + size;
-
-  if ((void *)&attr < start || (void *)&attr >= end)
-    return 1;
-  else
-    return 0;
-}
-#else
-int main ()
-{
-  return 1;
-}
-#endif
-]])],
-[works=yes
-AC_DEFINE(PTHREAD_ATTR_GETSTACK_WORKS, [1], [Define when pthread_att_get_stack works for the main thread])],
-[works=no],
-[])
-CFLAGS="$old_CFLAGS"
+AC_DEFINE(PTHREAD_ATTR_GETSTACK_WORKS, [1], [Define when pthread_att_get_stack works for the main thread])
 AC_MSG_RESULT($works)
 
 fi # with_threads=pthreads
