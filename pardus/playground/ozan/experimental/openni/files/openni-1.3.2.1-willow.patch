Index: OpenNI-OpenNI-4dbf64b/Include/XnCppWrapper.h
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Include/XnCppWrapper.h
+++ OpenNI-OpenNI-4dbf64b/Include/XnCppWrapper.h
@@ -129,7 +129,7 @@ namespace xn
 		 *
 		 * @param	ppData		[in]	A pointer to the data member of the meta data object.
 		 */
-		inline OutputMetaData(const XnUInt8** ppData) : m_ppData(ppData), m_nAllocatedSize(0), m_pAllocatedData(NULL)
+		inline OutputMetaData(const XnUInt8** ppData) : m_pAllocatedData(NULL), m_ppData(ppData), m_nAllocatedSize(0)
 		{
 			xnOSMemSet(&m_output, 0, sizeof(XnOutputMetaData));
 		}
@@ -1175,6 +1175,7 @@ namespace xn
 		 *
 		 * @param	other		[in]	An object to copy from.
 		 */
+
 		NodeInfo(const NodeInfo& other) : m_pNeededNodes(NULL), m_bOwnerOfNode(FALSE)
 		{
 			SetUnderlyingObject(other.m_pInfo);
@@ -1292,7 +1293,7 @@ namespace xn
 			xnNodeQueryAllocate(&m_pQuery);
 		}
 
-		inline Query(XnNodeQuery* pNodeQuery) : m_bAllocated(FALSE), m_pQuery(pNodeQuery)
+		inline Query(XnNodeQuery* pNodeQuery) : m_pQuery(pNodeQuery), m_bAllocated(FALSE)
 		{
 		}
 
@@ -4180,6 +4181,7 @@ namespace xn
 		 */
 		inline XnBool IsCalibrated(XnUserID user) const
 		{
+
 			return xnIsSkeletonCalibrated(GetHandle(), user);
 		}
 
@@ -5346,7 +5348,7 @@ namespace xn
 	{
 	public:
 		/// Ctor
-		inline EnumerationErrors() : m_bAllocated(TRUE), m_pErrors(NULL) { xnEnumerationErrorsAllocate(&m_pErrors); }
+		inline EnumerationErrors() : m_pErrors(NULL), m_bAllocated(TRUE) { xnEnumerationErrorsAllocate(&m_pErrors); }
 
 		/**
 		 * Ctor
@@ -5354,7 +5356,7 @@ namespace xn
 		 * @param	pErrors		[in]	underlying C object to wrap
 		 * @param	bOwn		[in]	TRUE to own the object (i.e. free it upon destruction), FALSE otherwise.
 		 */
-		inline EnumerationErrors(XnEnumerationErrors* pErrors, XnBool bOwn = FALSE) : m_bAllocated(bOwn), m_pErrors(pErrors) {}
+		inline EnumerationErrors(XnEnumerationErrors* pErrors, XnBool bOwn = FALSE) : m_pErrors(pErrors), m_bAllocated(bOwn) {}
 
 		/// Dtor
 		~EnumerationErrors() { Free(); }
@@ -5935,6 +5937,7 @@ namespace xn
 
 		/** @copybrief xnUnregisterFromGlobalErrorStateChange
 		 * For full details and usage, see @ref xnUnregisterFromGlobalErrorStateChange
+
 		 */
 		inline void UnregisterFromErrorStateChange(XnCallbackHandle hCallback)
 		{
Index: OpenNI-OpenNI-4dbf64b/Include/XnOS.h
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Include/XnOS.h
+++ OpenNI-OpenNI-4dbf64b/Include/XnOS.h
@@ -47,9 +47,13 @@
 #elif (XN_PLATFORM == XN_PLATFORM_LINUX_X86 || XN_PLATFORM == XN_PLATFORM_LINUX_ARM || XN_PLATFORM == XN_PLATFORM_MACOSX || XN_PLATFORM == XN_PLATFORM_ANDROID_ARM)
 	#include "Linux-x86/XnOSLinux-x86.h"
 #elif defined(_ARC)
-	#include "ARC/XnOSARC.h"
+  #include "ARC/XnOSARC.h" 
 #else
-	#error OpenNI OS Abstraction Layer - Unsupported Platform!
+  #if defined __INTEL_COMPILER
+    #include "Linux/XnOSLinux.h" 
+  #else
+     #error OpenNI OS Abstraction Layer - Unsupported Platform!
+  #endif
 #endif
 
 //---------------------------------------------------------------------------
Index: OpenNI-OpenNI-4dbf64b/Include/XnPlatform.h
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Include/XnPlatform.h
+++ OpenNI-OpenNI-4dbf64b/Include/XnPlatform.h
@@ -69,11 +69,16 @@
 #elif _ARC
 	#include "ARC/XnPlatformARC.h"
 #elif (__APPLE__)
-	#include "MacOSX/XnPlatformMacOSX.h"
+    #include "MacOSX/XnPlatformMacOSX.h" 
 #else
-	#error OpenNI Platform Abstraction Layer - Unsupported Platform!
+ #if defined __INTEL_COMPILER
+   #include "Linux/XnPlatformLinux.h" 
+ #else
+    #error OpenNI Platform Abstraction Layer - Unsupported Platform!
+ #endif
 #endif
 
+
 //---------------------------------------------------------------------------
 // Basic Common Macros
 //---------------------------------------------------------------------------
Index: OpenNI-OpenNI-4dbf64b/Include/XnTypes.h
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Include/XnTypes.h
+++ OpenNI-OpenNI-4dbf64b/Include/XnTypes.h
@@ -325,7 +325,7 @@ typedef XnUInt16 XnLabel;
 
 // deprecated pragma is only supported in Visual Studio
 #if (XN_PLATFORM == XN_PLATFORM_WIN32)
-#pragma deprecated("XN_CAPABILITY_ANTI_FILCKER")
+//#pragma deprecated("XN_CAPABILITY_ANTI_FILCKER")
 #endif
 
 //---------------------------------------------------------------------------
Index: OpenNI-OpenNI-4dbf64b/Samples/NiAudioSample/NiAudioSample.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiAudioSample/NiAudioSample.cpp
+++ OpenNI-OpenNI-4dbf64b/Samples/NiAudioSample/NiAudioSample.cpp
@@ -31,7 +31,7 @@
 //---------------------------------------------------------------------------
 // Defines
 //---------------------------------------------------------------------------
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 
 #define NUMBER_OF_AUDIO_BUFFERS 100
 
Index: OpenNI-OpenNI-4dbf64b/Samples/NiCRead/NiCRead.c
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiCRead/NiCRead.c
+++ OpenNI-OpenNI-4dbf64b/Samples/NiCRead/NiCRead.c
@@ -27,7 +27,7 @@
 //---------------------------------------------------------------------------
 // Defines
 //---------------------------------------------------------------------------
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 
 //---------------------------------------------------------------------------
 // Macros
Index: OpenNI-OpenNI-4dbf64b/Samples/NiRecordRaw/NiRecordRaw.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiRecordRaw/NiRecordRaw.cpp
+++ OpenNI-OpenNI-4dbf64b/Samples/NiRecordRaw/NiRecordRaw.cpp
@@ -30,7 +30,7 @@
 //---------------------------------------------------------------------------
 // Defines
 //---------------------------------------------------------------------------
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 #define RECORDING_FILE_NAME "recordingWithRaw.oni"
 #define RAW_NODE_NAME "Raw1"
 
Index: OpenNI-OpenNI-4dbf64b/Samples/NiRecordSynthetic/NiRecordSynthetic.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiRecordSynthetic/NiRecordSynthetic.cpp
+++ OpenNI-OpenNI-4dbf64b/Samples/NiRecordSynthetic/NiRecordSynthetic.cpp
@@ -30,7 +30,7 @@
 //---------------------------------------------------------------------------
 // Defines
 //---------------------------------------------------------------------------
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 
 //---------------------------------------------------------------------------
 // Macros
Index: OpenNI-OpenNI-4dbf64b/Samples/NiSimpleRead/NiSimpleRead.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiSimpleRead/NiSimpleRead.cpp
+++ OpenNI-OpenNI-4dbf64b/Samples/NiSimpleRead/NiSimpleRead.cpp
@@ -30,7 +30,7 @@
 //---------------------------------------------------------------------------
 // Defines
 //---------------------------------------------------------------------------
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 #define SAMPLE_XML_PATH_LOCAL "SamplesConfig.xml"
 
 //---------------------------------------------------------------------------
Index: OpenNI-OpenNI-4dbf64b/Samples/NiSimpleViewer/NiSimpleViewer.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiSimpleViewer/NiSimpleViewer.cpp
+++ OpenNI-OpenNI-4dbf64b/Samples/NiSimpleViewer/NiSimpleViewer.cpp
@@ -36,7 +36,7 @@ using namespace xn;
 //---------------------------------------------------------------------------
 // Defines
 //---------------------------------------------------------------------------
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 
 #define GL_WIN_SIZE_X 1280
 #define GL_WIN_SIZE_Y 1024
Index: OpenNI-OpenNI-4dbf64b/Samples/NiUserTracker/main.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiUserTracker/main.cpp
+++ OpenNI-OpenNI-4dbf64b/Samples/NiUserTracker/main.cpp
@@ -304,7 +304,7 @@ void glInit (int * pargc, char ** argv)
 }
 #endif // USE_GLES
 
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 
 #define CHECK_RC(nRetVal, what)										\
 	if (nRetVal != XN_STATUS_OK)									\
Index: OpenNI-OpenNI-4dbf64b/Samples/NiViewer/NiViewer.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Samples/NiViewer/NiViewer.cpp
+++ OpenNI-OpenNI-4dbf64b/Samples/NiViewer/NiViewer.cpp
@@ -84,7 +84,7 @@ using namespace glh;
 // --------------------------------
 // Defines
 // --------------------------------
-#define SAMPLE_XML_PATH "../../../../Data/SamplesConfig.xml"
+#define SAMPLE_XML_PATH "/etc/openni/SamplesConfig.xml"
 
 // --------------------------------
 // Types
Index: OpenNI-OpenNI-4dbf64b/Source/OpenNI/XnOpenNI.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Source/OpenNI/XnOpenNI.cpp
+++ OpenNI-OpenNI-4dbf64b/Source/OpenNI/XnOpenNI.cpp
@@ -6991,9 +6991,9 @@ XN_C_API XnStatus xnScriptNodeRun(XnNode
 #if (XN_PLATFORM == XN_PLATFORM_WIN32)
 	#define XN_OPEN_NI_FILES_LOCATION "\\Data\\"
 #elif (CE4100)
-	#define XN_OPEN_NI_FILES_LOCATION "/usr/etc/ni/"
+	#define XN_OPEN_NI_FILES_LOCATION "/etc/openni/"
 #elif (XN_PLATFORM == XN_PLATFORM_LINUX_X86 || XN_PLATFORM == XN_PLATFORM_LINUX_ARM || XN_PLATFORM == XN_PLATFORM_MACOSX)
-	#define XN_OPEN_NI_FILES_LOCATION "/var/lib/ni/"
+	#define XN_OPEN_NI_FILES_LOCATION "/etc/openni/"
 #elif (XN_PLATFORM == XN_PLATFORM_ANDROID_ARM)
 	#define XN_OPEN_NI_FILES_LOCATION "/data/ni/"
 #else
@@ -7012,7 +7012,7 @@ XnStatus xnGetOpenNIConfFilesPath(XnChar
 			return nRetVal;
 		#else
 			// use root FS
-			strDest[0] = '\0';
+			strcpy (strDest, "");
 		#endif
 	}
 	else
Index: OpenNI-OpenNI-4dbf64b/Source/OpenNI/XnProfiling.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Source/OpenNI/XnProfiling.cpp
+++ OpenNI-OpenNI-4dbf64b/Source/OpenNI/XnProfiling.cpp
@@ -87,8 +87,8 @@ XN_THREAD_PROC xnProfilingThread(XN_THRE
 		// print profiled sections
 		nReportChars = 0;
 		nReportChars += sprintf(csReport + nReportChars, "Profiling Report:\n");
-		nReportChars += sprintf(csReport + nReportChars, "%-*s %-5s %-6s %-9s %-7s\n", g_ProfilingData.nMaxSectionName, "TaskName", "Times", "% Time", "TotalTime", "AvgTime");
-		nReportChars += sprintf(csReport + nReportChars, "%-*s %-5s %-6s %-9s %-7s\n", g_ProfilingData.nMaxSectionName, "========", "=====", "======", "=========", "=======");
+		nReportChars += sprintf(csReport + nReportChars, "%-*s %-5s %-6s %-9s %-7s\n", (int)g_ProfilingData.nMaxSectionName, "TaskName", "Times", "% Time", "TotalTime", "AvgTime");
+		nReportChars += sprintf(csReport + nReportChars, "%-*s %-5s %-6s %-9s %-7s\n", (int)g_ProfilingData.nMaxSectionName, "========", "=====", "======", "=========", "=======");
 
 		XnUInt64 nTotalTime = 0;
 
@@ -104,7 +104,7 @@ XN_THREAD_PROC xnProfilingThread(XN_THRE
 				nAvgTime = pSection->nTotalTime / pSection->nTimesExecuted;
 			}
 
-			nReportChars += sprintf(csReport + nReportChars, "%-*s %5u %6.2f %9llu %7llu\n", g_ProfilingData.nMaxSectionName, 
+			nReportChars += sprintf(csReport + nReportChars, "%-*s %5u %6.2f %9llu %7llu\n", (int)g_ProfilingData.nMaxSectionName, 
 				pSection->csName, pSection->nTimesExecuted, dCPUPercentage, pSection->nTotalTime, nAvgTime);
 
 			if (pSection->nIndentation == 0)
@@ -118,7 +118,7 @@ XN_THREAD_PROC xnProfilingThread(XN_THRE
 		// print total
 		XnDouble dCPUPercentage = ((XnDouble)nTotalTime) / (nNow - nLastTime) * 100.0;
 		nReportChars += sprintf(csReport + nReportChars, "%-*s %5s %6.2f %9llu %7s\n", 
-			g_ProfilingData.nMaxSectionName, "*** Total ***", "-", dCPUPercentage, nTotalTime, "-");
+			(int)g_ProfilingData.nMaxSectionName, "*** Total ***", "-", dCPUPercentage, nTotalTime, "-");
 
 		xnLogVerbose(XN_MASK_PROFILING, "%s", csReport);
 
Index: OpenNI-OpenNI-4dbf64b/Source/Utils/niLicense/niLicense.cpp
===================================================================
--- OpenNI-OpenNI-4dbf64b.orig/Source/Utils/niLicense/niLicense.cpp
+++ OpenNI-OpenNI-4dbf64b/Source/Utils/niLicense/niLicense.cpp
@@ -119,14 +119,14 @@ int main(int argc, char* argv[])
 		nRetVal = xnOSStrNCopy(license.strVendor, strVendor, strlen(strVendor) + 1, sizeof(license.strVendor));
 		if (nRetVal != XN_STATUS_OK)
 		{
-			printf("Error: Vendor name is too long (should be up to %u characters).", sizeof(license.strVendor) - 1);
+			printf("Error: Vendor name is too long (should be up to %u characters).", (unsigned)sizeof(license.strVendor) - 1);
 			return -1;
 		}
 
 		nRetVal = xnOSStrNCopy(license.strKey, strKey, strlen(strKey) + 1, sizeof(license.strKey));
 		if (nRetVal != XN_STATUS_OK)
 		{
-			printf("Error: Key is too long (should be up to %u characters).", sizeof(license.strKey) - 1);
+			printf("Error: Key is too long (should be up to %u characters).", (unsigned)sizeof(license.strKey) - 1);
 			return -1;
 		}
 	}
