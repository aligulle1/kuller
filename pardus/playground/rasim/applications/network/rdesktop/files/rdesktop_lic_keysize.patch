diff -Naur rdesktop.orig/licence.c rdesktop.fixed/licence.c
--- rdesktop.orig/licence.c	2007-01-09 08:24:44.000000000 +0100
+++ rdesktop.fixed/licence.c	2007-06-14 10:29:19.000000000 +0200
@@ -23,6 +23,7 @@
 
 extern char g_username[64];
 extern char g_hostname[16];
+extern uint32 g_server_public_key_len;
 
 static uint8 g_licence_key[16];
 static uint8 g_licence_sign_key[16];
@@ -56,12 +57,12 @@
 
 /* Present an existing licence to the server */
 static void
-licence_present(uint8 * client_random, uint8 * rsa_data,
+licence_present(uint8 * client_random, uint32 rsa_data_size, uint8 * rsa_data,
 		uint8 * licence_data, int licence_size, uint8 * hwid, uint8 * signature)
 {
 	uint32 sec_flags = SEC_LICENCE_NEG;
 	uint16 length =
-		16 + SEC_RANDOM_SIZE + SEC_MODULUS_SIZE + SEC_PADDING_SIZE +
+		24 + SEC_RANDOM_SIZE + rsa_data_size + SEC_PADDING_SIZE +
 		licence_size + LICENCE_HWID_SIZE + LICENCE_SIGNATURE_SIZE;
 	STREAM s;
 
@@ -77,8 +78,8 @@
 
 	out_uint8p(s, client_random, SEC_RANDOM_SIZE);
 	out_uint16(s, 0);
-	out_uint16_le(s, (SEC_MODULUS_SIZE + SEC_PADDING_SIZE));
-	out_uint8p(s, rsa_data, SEC_MODULUS_SIZE);
+	out_uint16_le(s, (rsa_data_size + SEC_PADDING_SIZE));
+	out_uint8p(s, rsa_data, rsa_data_size);
 	out_uint8s(s, SEC_PADDING_SIZE);
 
 	out_uint16_le(s, 1);
@@ -97,12 +98,12 @@
 
 /* Send a licence request packet */
 static void
-licence_send_request(uint8 * client_random, uint8 * rsa_data, char *user, char *host)
+licence_send_request(uint8 * client_random, uint32 rsa_data_size, uint8 * rsa_data, char *user, char *host)
 {
 	uint32 sec_flags = SEC_LICENCE_NEG;
 	uint16 userlen = strlen(user) + 1;
 	uint16 hostlen = strlen(host) + 1;
-	uint16 length = 128 + userlen + hostlen;
+	uint16 length = 64 + rsa_data_size + userlen + hostlen;
 	STREAM s;
 
 	s = sec_init(sec_flags, length + 2);
@@ -117,8 +118,8 @@
 
 	out_uint8p(s, client_random, SEC_RANDOM_SIZE);
 	out_uint16(s, 0);
-	out_uint16_le(s, (SEC_MODULUS_SIZE + SEC_PADDING_SIZE));
-	out_uint8p(s, rsa_data, SEC_MODULUS_SIZE);
+	out_uint16_le(s, (rsa_data_size + SEC_PADDING_SIZE));
+	out_uint8p(s, rsa_data, rsa_data_size);
 	out_uint8s(s, SEC_PADDING_SIZE);
 
 	out_uint16_le(s, LICENCE_TAG_USER);
@@ -137,7 +138,7 @@
 static void
 licence_process_demand(STREAM s)
 {
-	uint8 null_data[SEC_MODULUS_SIZE];
+	uint8 null_data[SEC_MAX_MODULUS_SIZE];
 	uint8 *server_random;
 	uint8 signature[LICENCE_SIGNATURE_SIZE];
 	uint8 hwid[LICENCE_HWID_SIZE];
@@ -164,12 +165,14 @@
 		ssl_rc4_set_key(&crypt_key, g_licence_key, 16);
 		ssl_rc4_crypt(&crypt_key, hwid, hwid, sizeof(hwid));
 
-		licence_present(null_data, null_data, licence_data, licence_size, hwid, signature);
+                /* FIXME: rsa_data is in fact the client_random encrypted by
+                 * server_public_key parsed in sec_parse_crypt_info() */
+		licence_present(null_data, g_server_public_key_len, null_data, licence_data, licence_size, hwid, signature);
 		xfree(licence_data);
 		return;
 	}
 
-	licence_send_request(null_data, null_data, g_username, g_hostname);
+	licence_send_request(null_data, g_server_public_key_len, null_data, g_username, g_hostname);
 }
 
 /* Send an authentication response packet */
diff -Naur rdesktop.orig/secure.c rdesktop.fixed/secure.c
--- rdesktop.orig/secure.c	2007-02-10 06:28:54.000000000 +0100
+++ rdesktop.fixed/secure.c	2007-06-14 10:25:24.000000000 +0200
@@ -39,7 +39,7 @@
 static int g_rc4_key_len;
 static SSL_RC4 g_rc4_decrypt_key;
 static SSL_RC4 g_rc4_encrypt_key;
-static uint32 g_server_public_key_len;
+uint32 g_server_public_key_len;
 
 static uint8 g_sec_sign_key[16];
 static uint8 g_sec_decrypt_key[16];
@@ -767,6 +767,9 @@
 				{
 					in_uint8s(s, 8);	/* signature */
 					sec_decrypt(s->p, s->end - s->p);
+                                        /* NOTE: the signature above should match
+                                         * the results of sec_sign() on the
+                                         * decrypted data.*/
 				}
 				return s;
 			}
