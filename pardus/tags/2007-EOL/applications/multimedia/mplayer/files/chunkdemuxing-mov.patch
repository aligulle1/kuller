Index: libavformat/mov.c
===================================================================
--- libavformat/mov.c	(revision 12559)
+++ libavformat/mov.c	(working copy)
@@ -223,9 +223,8 @@
         total_size += a.size;
     }
 
-    if (!err && total_size < atom.size && atom.size < 0x7ffff) {
+    if (!err && total_size < atom.size && atom.size < 0x7ffff)
         url_fskip(pb, atom.size - total_size);
-    }
 
     return err;
 }
@@ -769,7 +768,7 @@
                         if (color_index < 0)
                             color_index = 0;
                     }
-                } else if (st->codec->color_table_id & 0x08) {
+                } else if (st->codec->color_table_id) {
                     /* if flag bit 3 is set, use the default palette */
                     color_count = 1 << color_depth;
                     if (color_depth == 2)
@@ -932,6 +931,7 @@
         st->codec->codec_type = CODEC_TYPE_AUDIO; /* force type after stsd for m1a hdlr */
         st->need_parsing = AVSTREAM_PARSE_FULL;
         break;
+    case CODEC_ID_GSM:
     case CODEC_ID_ADPCM_MS:
     case CODEC_ID_ADPCM_IMA_WAV:
         st->codec->block_align = sc->bytes_per_frame;
@@ -1120,8 +1120,9 @@
     unsigned int stss_index = 0;
     unsigned int i, j;
 
-    if (sc->sample_sizes || st->codec->codec_type == CODEC_TYPE_VIDEO ||
-        sc->audio_cid == -2) {
+    /* only use old uncompressed audio chunk demuxing when stts specifies it */
+    if (!(st->codec->codec_type == CODEC_TYPE_AUDIO &&
+          sc->stts_count == 1 && sc->stts_data[0].duration == 1)) {
         unsigned int current_sample = 0;
         unsigned int stts_sample = 0;
         unsigned int keyframe, sample_size;
@@ -1236,7 +1237,8 @@
     /* sanity checks */
     if(!sc->stts_count || !sc->chunk_count || !sc->sample_to_chunk_sz ||
        (!sc->sample_size && !sc->sample_count)){
-        av_log(c->fc, AV_LOG_ERROR, "missing mandatory atoms, broken header\n");
+        av_log(c->fc, AV_LOG_ERROR, "stream %d, missing mandatory atoms, broken header\n",
+               st->index);
         sc->sample_count = 0; //ignore track
         return 0;
     }
@@ -1258,8 +1260,8 @@
 
     if (sc->dref_id-1 < sc->drefs_count && sc->drefs[sc->dref_id-1].path) {
         if (url_fopen(&sc->pb, sc->drefs[sc->dref_id-1].path, URL_RDONLY) < 0)
-            av_log(c->fc, AV_LOG_ERROR, "stream %d, error opening external essence: %s\n",
-                   st->index, strerror(errno));
+            av_log(c->fc, AV_LOG_ERROR, "stream %d, error opening file %s: %s\n",
+                   st->index, sc->drefs[sc->dref_id-1].path, strerror(errno));
     } else
         sc->pb = c->fc->pb;
 
