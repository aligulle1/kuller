diff -Nur mplayer-20080130-old/stream/stream_dvdnav.c mplayer-20080130/stream/stream_dvdnav.c
--- mplayer-20080130-old/stream/stream_dvdnav.c	2008-01-30 20:28:40.388456424 +0200
+++ mplayer-20080130/stream/stream_dvdnav.c	2008-01-30 20:33:02.407623456 +0200
@@ -47,7 +47,6 @@
 
 extern char *dvd_device;
 extern char *audio_lang, *dvdsub_lang;
-extern char *dvd_audio_stream_channels[6], *dvd_audio_stream_types[8];
 
 static struct stream_priv_s {
   int track;
@@ -169,7 +168,11 @@
 static int dvdnav_stream_read(dvdnav_priv_t * priv, unsigned char *buf, int *len) {
   int event = DVDNAV_NOP;
 
+
   *len=-1;
+
+
+
   if (dvdnav_get_next_block(priv->dvdnav,buf,&event,len)!=DVDNAV_STATUS_OK) {
     mp_msg(MSGT_OPEN,MSGL_V, "Error getting next block from DVD %d (%s)\n",event, dvdnav_err_to_string(priv->dvdnav) );
     *len=-1;
@@ -467,84 +470,6 @@
   return STREAM_UNSUPPORTED;
 }
 
-static void identify_chapters(dvdnav_t *nav, uint32_t title)
-{
-  uint64_t *parts=NULL, duration=0;
-  uint32_t n, i, t;
-  n = dvdnav_describe_title_chapters(nav, title, &parts, &duration);
-  if(parts) {
-    t = duration / 90;
-    mp_msg(MSGT_IDENTIFY, MSGL_V, "ID_DVD_TITLE_%d_LENGTH=%d.%03d\n", title, t / 1000, t % 1000);
-    mp_msg(MSGT_IDENTIFY, MSGL_INFO, "TITLE %u, CHAPTERS: ", title);
-    for(i=0; i<n; i++) {
-      t = parts[i] /  90000;
-      mp_msg(MSGT_IDENTIFY, MSGL_INFO, "%02d:%02d:%02d,", t/3600, (t/60)%60, t%60);
-    }
-    free(parts);
-    mp_msg(MSGT_IDENTIFY, MSGL_INFO, "\n");
-  }
-}
-
-static void identify(dvdnav_priv_t *priv, struct stream_priv_s *p)
-{
-  uint32_t titles=0, i;
-  if(p->track <= 0) {
-    dvdnav_get_number_of_titles(priv->dvdnav, &titles);
-    for(i=0; i<titles; i++)
-      identify_chapters(priv->dvdnav, i);
-  }
-  else
-    identify_chapters(priv->dvdnav, p->track);
-}
-
-static void show_audio_subs_languages(dvdnav_t *nav)
-{
-  uint8_t lg;
-  uint16_t i, lang, format, id, channels;
-  int base[7] = {128, 0, 0, 0, 160, 136, 0};
-  char tmp[3];
-  for(i=0; i<8; i++)
-  {
-    lg = dvdnav_get_audio_logical_stream(nav, i);
-    if(lg == 0xff) continue;
-    channels = dvdnav_audio_stream_channels(nav, lg);
-    if(channels == 0xFFFF)
-      channels = 2; //unknown
-    else
-      channels--;
-    lang = dvdnav_audio_stream_to_lang(nav, lg);
-    if(lang == 0xFFFF)
-      tmp[0] = tmp[1] = '?';
-    else
-    {
-      tmp[0] = lang >> 8;
-      tmp[1] = lang & 0xFF;
-    }
-    tmp[2] = 0;
-    format = dvdnav_audio_stream_format(nav, lg);
-    if(format == 0xFFFF || format > 6)
-      format = 1; //unknown
-    id = i + base[format];
-    mp_msg(MSGT_OPEN,MSGL_STATUS,MSGTR_DVDaudioStreamInfo, i,
-      dvd_audio_stream_types[format], dvd_audio_stream_channels[channels], tmp, id); 
-  }
-  
-  for(i=0; i<32; i++)
-  {
-    lg = dvdnav_get_spu_logical_stream(nav, i);
-    if(lg == 0xff) continue;
-    lang = dvdnav_spu_stream_to_lang(nav, lg);
-    if(lang == 0xFFFF)
-      tmp[0] = tmp[1] = '?';
-    else
-    {
-      tmp[0] = lang >> 8;
-      tmp[1] = lang & 0xFF;
-    }
-    tmp[2] = 0;
-    mp_msg(MSGT_OPEN,MSGL_STATUS,MSGTR_DVDsubtitleLanguage, i+0x20, tmp);
-  }
-}
 
 static int open_s(stream_t *stream,int mode, void* opts, int* file_format) {
   struct stream_priv_s* p = (struct stream_priv_s*)opts;
@@ -575,10 +500,6 @@
     if(dvdnav_menu_call(priv->dvdnav, DVD_MENU_Root) != DVDNAV_STATUS_OK)
       dvdnav_menu_call(priv->dvdnav, DVD_MENU_Title);
   }
-  if(mp_msg_test(MSGT_IDENTIFY, MSGL_INFO))
-    identify(priv, p);
-  if(p->track > 0)
-    show_audio_subs_languages(priv->dvdnav);
   if(dvd_angle > 1)
     dvdnav_angle_change(priv->dvdnav, dvd_angle);
 
