diff -Nur libpng-1.2.22.orig/pngpread.c libpng-1.2.22/pngpread.c
--- libpng-1.2.22.orig/pngpread.c	2008-04-15 16:44:36.000000000 +0300
+++ libpng-1.2.22/pngpread.c	2008-04-15 16:46:57.000000000 +0300
@@ -1493,9 +1493,14 @@
       png_strncpy((png_charp)png_ptr->unknown_chunk.name,
 	 (png_charp)png_ptr->chunk_name, 4);
       png_ptr->unknown_chunk.name[4] = '\0';
-      png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
       png_ptr->unknown_chunk.size = (png_size_t)length;
-      png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+      if (length == 0)
+          png_ptr->unknown_chunk.data = NULL;
+      else
+      {
+          png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
+          png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+      }
 #if defined(PNG_READ_USER_CHUNKS_SUPPORTED)
       if(png_ptr->read_user_chunk_fn != NULL)
       {
@@ -1518,8 +1523,11 @@
 #else
       png_set_unknown_chunks(png_ptr, info_ptr, &png_ptr->unknown_chunk, 1);
 #endif
-      png_free(png_ptr, png_ptr->unknown_chunk.data);
-      png_ptr->unknown_chunk.data = NULL;
+      if (png_ptr->unknown_chunk.data)
+      {
+          png_free(png_ptr, png_ptr->unknown_chunk.data);
+          png_ptr->unknown_chunk.data = NULL;
+      }
    }
    else
 #endif
diff -Nur libpng-1.2.22.orig/pngrutil.c libpng-1.2.22/pngrutil.c
--- libpng-1.2.22.orig/pngrutil.c	2008-04-15 16:44:37.000000000 +0300
+++ libpng-1.2.22/pngrutil.c	2008-04-15 16:48:08.000000000 +0300
@@ -2226,9 +2226,14 @@
        png_strncpy((png_charp)png_ptr->unknown_chunk.name,
 	 (png_charp)png_ptr->chunk_name, 4);
        png_ptr->unknown_chunk.name[4] = '\0';
-       png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
        png_ptr->unknown_chunk.size = (png_size_t)length;
-       png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+       if (length == 0)
+           png_ptr->unknown_chunk.data = NULL;
+       else
+       {
+           png_ptr->unknown_chunk.data = (png_bytep)png_malloc(png_ptr, length);
+           png_crc_read(png_ptr, (png_bytep)png_ptr->unknown_chunk.data, length);
+       }
 #if defined(PNG_READ_USER_CHUNKS_SUPPORTED)
        if(png_ptr->read_user_chunk_fn != NULL)
        {
@@ -2251,8 +2256,11 @@
 #else
        png_set_unknown_chunks(png_ptr, info_ptr, &png_ptr->unknown_chunk, 1);
 #endif
-       png_free(png_ptr, png_ptr->unknown_chunk.data);
-       png_ptr->unknown_chunk.data = NULL;
+       if (png_ptr->unknown_chunk.data)
+       {
+           png_free(png_ptr, png_ptr->unknown_chunk.data);
+           png_ptr->unknown_chunk.data = NULL;
+       }
    }
    else
 #endif
diff -Nur libpng-1.2.22.orig/pngset.c libpng-1.2.22/pngset.c
--- libpng-1.2.22.orig/pngset.c	2008-04-15 16:44:36.000000000 +0300
+++ libpng-1.2.22/pngset.c	2008-04-15 16:44:44.000000000 +0300
@@ -1041,19 +1041,24 @@
 
         png_strncpy((png_charp)to->name, (png_charp)from->name, 4);
         to->name[4] = '\0';
-        to->data = (png_bytep)png_malloc_warn(png_ptr, from->size);
-        if (to->data == NULL)
-        {
-           png_warning(png_ptr,
-              "Out of memory while processing unknown chunk.");
-        }
+
+        to->size = from->size;
+        /* note our location in the read or write sequence */
+        to->location = (png_byte)(png_ptr->mode & 0xff);
+
+        if (from->size == 0)
+            to->data=NULL;
         else
         {
-           png_memcpy(to->data, from->data, from->size);
-           to->size = from->size;
-
-           /* note our location in the read or write sequence */
-           to->location = (png_byte)(png_ptr->mode & 0xff);
+            to->data = (png_bytep)png_malloc_warn(png_ptr, from->size);
+            if (to->data == NULL)
+            {
+               png_warning(png_ptr,
+                  "Out of memory while processing unknown chunk.");
+               to->size=0;
+            }
+            else
+               png_memcpy(to->data, from->data, from->size);
         }
     }
 
diff -Nur libpng-1.2.22.orig/pngwrite.c libpng-1.2.22/pngwrite.c
--- libpng-1.2.22.orig/pngwrite.c	2008-04-15 16:44:36.000000000 +0300
+++ libpng-1.2.22/pngwrite.c	2008-04-15 16:49:58.000000000 +0300
@@ -112,6 +112,8 @@
             ((up->name[3] & 0x20) || keep == PNG_HANDLE_CHUNK_ALWAYS ||
             (png_ptr->flags & PNG_FLAG_KEEP_UNSAFE_CHUNKS)))
          {
+            if (up->size == 0)
+                png_warning(png_ptr, "Writing zero-length unknown chunk");
             png_write_chunk(png_ptr, up->name, up->data, up->size);
          }
        }
