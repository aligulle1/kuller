From: Jens Axboe <axboe@suse.de>
Subject: Let the filp slab use SLAB_DESTROY_BY_RCU
Patch-mainline: Not yet (going for 2.6.19)
References: 172825

This solves the cache affinity problem with RCU slab objects, since we
can get the hot objects returned before the RCU grace period has ended.

Acked-by: 
Signed-off-by: 

--- /mnt/kscratch/linux-2.6.16/fs/dcache.c	2006-06-01 16:25:28.000000000 +0200
+++ linux-2.6.16/fs/dcache.c	2006-06-05 21:34:40.000000000 +0200
@@ -1791,7 +1791,8 @@
 			SLAB_HWCACHE_ALIGN|SLAB_PANIC, NULL, NULL);
 
 	filp_cachep = kmem_cache_create("filp", sizeof(struct file), 0,
-			SLAB_HWCACHE_ALIGN|SLAB_PANIC, NULL, NULL);
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_DESTROY_BY_RCU,
+			NULL, NULL);
 
 	dcache_init(mempages);
 	inode_init(mempages);
--- /mnt/kscratch/linux-2.6.16/fs/file_table.c	2006-03-20 06:53:29.000000000 +0100
+++ linux-2.6.16/fs/file_table.c	2006-06-05 21:35:23.000000000 +0200
@@ -35,16 +35,10 @@
 
 static struct percpu_counter nr_files __cacheline_aligned_in_smp;
 
-static inline void file_free_rcu(struct rcu_head *head)
-{
-	struct file *f =  container_of(head, struct file, f_u.fu_rcuhead);
-	kmem_cache_free(filp_cachep, f);
-}
-
 static inline void file_free(struct file *f)
 {
 	percpu_counter_dec(&nr_files);
-	call_rcu(&f->f_u.fu_rcuhead, file_free_rcu);
+	kmem_cache_free(filp_cachep, f);
 }
 
 /*
