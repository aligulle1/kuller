From: mason@suse.de
Subject: make sure O_SYNC writes properly return -EIO
References: SUSE43622

Make sure to honor the error status of synchronous writeback during
O_SYNC writes

Acked-by: Jeff Mahoney <jeffm@suse.com>

Index: linux-2.6.18/mm/filemap.c
===================================================================
--- linux-2.6.18.orig/mm/filemap.c
+++ linux-2.6.18/mm/filemap.c
@@ -2189,7 +2189,6 @@ zero_length_segment:
 		balance_dirty_pages_ratelimited(mapping);
 		cond_resched();
 	} while (count);
-	*ppos = pos;
 
 	if (cached_page)
 		page_cache_release(cached_page);
@@ -2210,10 +2209,24 @@ zero_length_segment:
 	 * to buffered writes (block instantiation inside i_size).  So we sync
 	 * the file data here, to try to honour O_DIRECT expectations.
 	 */
-	if (unlikely(file->f_flags & O_DIRECT) && written)
+	if (unlikely(file->f_flags & O_DIRECT) && status >= 0 && written)
 		status = filemap_write_and_wait(mapping);
 
 	pagevec_lru_add(&lru_pvec);
+
+	/*
+	 * We must let know userspace if something hasn't been written
+	 * correctly. If we got an I/O error it means we got an hardware
+	 * failure, anything can be happening to the on-disk data,
+	 * letting know userspace that a bit of data might have been
+	 * written correctly on disk is a very low priority, compared
+	 * to letting know userspace that some data has _not_ been
+	 * written at all.
+	 */
+	if (unlikely(status == -EIO))
+		return status;
+	*ppos = pos;
+
 	return written ? written : status;
 }
 EXPORT_SYMBOL(generic_file_buffered_write);
