--- ext/standard/string.c	2007/06/05 13:35:26	1.445.2.14.2.60
+++ ext/standard/string.c	2007/06/06 21:53:54	1.445.2.14.2.63
@@ -239,10 +239,14 @@
 		}
 	}
 	
-	if ((start + len) > len1) {
+	if (len > len1 - start) {
 		len = len1 - start;
 	}
 
+	if(len == 0) {
+		RETURN_LONG(0);
+	}
+
 	if (behavior == STR_STRSPN) {
 		RETURN_LONG(php_strspn(s11 + start /*str1_start*/,
 						s22 /*str2_start*/,
@@ -1856,12 +1860,11 @@
 			e = haystack + haystack_len - 1;
 		} else {
 			p = haystack;
-			if (-offset > haystack_len || -offset < 0) {
+			if (-offset > haystack_len || offset < -INT_MAX) {
 				php_error_docref(NULL TSRMLS_CC, E_NOTICE, "Offset is greater than the length of haystack string");
 				RETURN_FALSE;
-			} else {
-				e = haystack + haystack_len + offset;
 			}
+			e = haystack + haystack_len + offset;
 		}
 		/* Borrow that ord_needle buffer to avoid repeatedly tolower()ing needle */
 		*ord_needle = tolower(*needle);
@@ -1889,7 +1892,7 @@
 		p = haystack_dup + offset;
 		e = haystack_dup + haystack_len - needle_len;
 	} else {
-		if (-offset > haystack_len || -offset < 0) {
+		if (-offset > haystack_len || offset < -INT_MAX) {
 			efree(needle_dup);
 			efree(haystack_dup);
 			php_error_docref(NULL TSRMLS_CC, E_NOTICE, "Offset is greater than the length of haystack string");
@@ -1956,18 +1959,23 @@
 	char *p, *q;
 	int chunks; /* complete chunks! */
 	int restlen;
-	float out_len; 
+	int out_len; 
 
 	chunks = srclen / chunklen;
 	restlen = srclen - chunks * chunklen; /* srclen % chunklen */
 
+	if(chunks > INT_MAX - 1) {
+		return NULL;
+	}
 	out_len = chunks + 1;
+	if(endlen !=0 && out_len > INT_MAX/endlen) {
+		return NULL;
+	}
 	out_len *= endlen;
-	out_len += srclen + 1;
-
-	if (out_len > INT_MAX || out_len <= 0) {
+	if(out_len > INT_MAX - srclen - 1) {
 		return NULL;
 	}
+	out_len += srclen + 1;
 
 	dest = safe_emalloc((int)out_len, sizeof(char), 0);
 
@@ -4985,11 +4993,26 @@
 PHP_FUNCTION(money_format)
 {
 	int format_len = 0, str_len;
-	char *format, *str;
+	char *format, *str, *p, *e;
 	double value;
+	zend_bool check = 0;
 
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "sd", &format, &format_len, &value) == FAILURE) {
 		return;
+	}
+
+	p = format;
+	e = p + format_len;
+	while ((p = memchr(p, '%', (e - p)))) {
+		if (*(p + 1) == '%') {
+			p += 2;	
+		} else if (!check) {
+			check = 1;
+			p++;
+		} else {
+			php_error_docref(NULL TSRMLS_CC, E_WARNING, "Only a single %%i or %%n token can be used");
+			RETURN_FALSE;
+		}
 	}
 
 	str_len = format_len + 1024;
