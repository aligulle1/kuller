diff -ruN ruby-1.8.5.orig/ext/openssl/lib/net/ftptls.rb ruby-1.8.5/ext/openssl/lib/net/ftptls.rb
--- ruby-1.8.5.orig/ext/openssl/lib/net/ftptls.rb	2003-07-24 01:11:30.000000000 +0900
+++ ruby-1.8.5/ext/openssl/lib/net/ftptls.rb	2007-11-01 20:41:37.000000000 +0900
@@ -29,13 +29,23 @@
 
 module Net
   class FTPTLS < FTP
+    def connect(host, port=FTP_PORT)
+       @hostname = host
+       super
+    end
+
     def login(user = "anonymous", passwd = nil, acct = nil)
+       store = OpenSSL::X509::Store.new
+       store.set_default_paths
        ctx = OpenSSL::SSL::SSLContext.new('SSLv23')
+       ctx.cert_store = store
+       ctx.verify_mode = OpenSSL::SSL::VERIFY_PEER
        ctx.key = nil
        ctx.cert = nil
        voidcmd("AUTH TLS")
        @sock = OpenSSL::SSL::SSLSocket.new(@sock, ctx)
        @sock.connect
+       @sock.post_connection_check(@hostname)
        super(user, passwd, acct)
        voidcmd("PBSZ 0")
     end
diff -ruN ruby-1.8.5.orig/ext/openssl/lib/net/telnets.rb ruby-1.8.5/ext/openssl/lib/net/telnets.rb
--- ruby-1.8.5.orig/ext/openssl/lib/net/telnets.rb	2004-12-20 12:49:16.000000000 +0900
+++ ruby-1.8.5/ext/openssl/lib/net/telnets.rb	2007-11-01 20:43:23.000000000 +0900
@@ -134,6 +134,9 @@
             @sock.verify_callback = @options['VerifyCallback']
             @sock.verify_depth    = @options['VerifyDepth']
             @sock.connect
+            if @options['VerifyMode'] != OpenSSL::SSL::VERIFY_NONE
+              @sock.post_connection_check(@options['Host'])
+            end
             @ssl = true
           end
           ''
diff -ruN ruby-1.8.5.orig/ext/openssl/lib/openssl/ssl.rb ruby-1.8.5/ext/openssl/lib/openssl/ssl.rb
--- ruby-1.8.5.orig/ext/openssl/lib/openssl/ssl.rb	2006-05-24 03:14:05.000000000 +0900
+++ ruby-1.8.5/ext/openssl/lib/openssl/ssl.rb	2007-11-01 20:39:43.000000000 +0900
@@ -88,7 +88,7 @@
             end
           }
         end
-        raise SSLError, "hostname not match"
+        raise SSLError, "hostname not match with the server certificate"
       end
     end
 
diff -ruN ruby-1.8.5.orig/lib/net/http.rb ruby-1.8.5/lib/net/http.rb
--- ruby-1.8.5.orig/lib/net/http.rb	2006-07-26 22:27:18.000000000 +0900
+++ ruby-1.8.5/lib/net/http.rb	2007-11-01 20:46:42.000000000 +0900
@@ -584,6 +584,9 @@
           HTTPResponse.read_new(@socket).value
         end
         s.connect
+        if @ssl_context.verify_mode != OpenSSL::SSL::VERIFY_NONE
+          s.post_connection_check(@address)
+        end
       end
       on_connect
     end
diff -ruN ruby-1.8.5.orig/lib/net/imap.rb ruby-1.8.5/lib/net/imap.rb
--- ruby-1.8.5.orig/lib/net/imap.rb	2005-02-23 01:58:33.000000000 +0900
+++ ruby-1.8.5/lib/net/imap.rb	2007-11-01 20:44:59.000000000 +0900
@@ -896,6 +896,7 @@
         end
         @sock = SSLSocket.new(@sock, context)
         @sock.connect   # start ssl session.
+        @sock.post_connection_check(@host) if verify
       else
         @usessl = false
       end
diff -ruN ruby-1.8.5.orig/lib/open-uri.rb ruby-1.8.5/lib/open-uri.rb
--- ruby-1.8.5.orig/lib/open-uri.rb	2006-08-05 07:00:21.000000000 +0900
+++ ruby-1.8.5/lib/open-uri.rb	2007-11-01 20:46:12.000000000 +0900
@@ -240,16 +240,6 @@
 
     resp = nil
     http.start {
-      if target.class == URI::HTTPS
-        # xxx: information hiding violation
-        sock = http.instance_variable_get(:@socket)
-        if sock.respond_to?(:io)
-          sock = sock.io # 1.9
-        else
-          sock = sock.instance_variable_get(:@socket) # 1.8
-        end
-        sock.post_connection_check(target_host)
-      end
       req = Net::HTTP::Get.new(request_uri, header)
       if options.include? :http_basic_authentication
         user, pass = options[:http_basic_authentication]
