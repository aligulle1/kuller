--- contrib/Makefile.in	2007-06-08 03:11:46.000000000 +0300
+++ contrib/Makefile.in	2007-06-08 03:11:36.000000000 +0300
@@ -58,7 +58,7 @@
 x11font_SOURCES = x11font.c
 x11font_OBJECTS = x11font.$(OBJEXT)
 am__DEPENDENCIES_1 =
-x11font_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+x11font_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 am_zvbi_ntsc_cc_OBJECTS = ntsc-cc.$(OBJEXT)
 zvbi_ntsc_cc_OBJECTS = $(am_zvbi_ntsc_cc_OBJECTS)
@@ -225,7 +225,7 @@
 	$(X_LIBS)
 
 x11font_LDADD = \
-	$(top_builddir)/src/.libs/libzvbi.a \
+	$(top_builddir)/src/.libs/libzvbi.so \
 	$(LIBS) \
 	$(X_LIBS)
 
--- test/Makefile.in	2007-02-14 06:36:28.000000000 +0200
+++ test/Makefile.in	2007-06-08 03:13:57.000000000 +0300
@@ -63,77 +63,77 @@
 caption_OBJECTS = $(am_caption_OBJECTS)
 caption_LDADD = $(LDADD)
 am__DEPENDENCIES_1 =
-caption_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+caption_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 capture_SOURCES = capture.c
 capture_OBJECTS = capture.$(OBJEXT)
 capture_LDADD = $(LDADD)
-capture_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+capture_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 am_cpptest_OBJECTS = cpptest.$(OBJEXT)
 cpptest_OBJECTS = $(am_cpptest_OBJECTS)
 cpptest_LDADD = $(LDADD)
-cpptest_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+cpptest_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 am_decode_OBJECTS = decode.$(OBJEXT) sliced.$(OBJEXT)
 decode_OBJECTS = $(am_decode_OBJECTS)
 decode_LDADD = $(LDADD)
-decode_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+decode_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 explist_SOURCES = explist.c
 explist_OBJECTS = explist.$(OBJEXT)
 explist_LDADD = $(LDADD)
-explist_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+explist_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 am_export_OBJECTS = export.$(OBJEXT) sliced.$(OBJEXT)
 export_OBJECTS = $(am_export_OBJECTS)
 export_LDADD = $(LDADD)
-export_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+export_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 glyph_SOURCES = glyph.c
 glyph_OBJECTS = glyph.$(OBJEXT)
 glyph_LDADD = $(LDADD)
-glyph_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+glyph_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 hamm_SOURCES = hamm.c
 hamm_OBJECTS = hamm.$(OBJEXT)
 hamm_LDADD = $(LDADD)
-hamm_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+hamm_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 osc_SOURCES = osc.c
 osc_OBJECTS = osc.$(OBJEXT)
 osc_LDADD = $(LDADD)
-osc_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+osc_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 proxy_test_SOURCES = proxy-test.c
 proxy_test_OBJECTS = proxy-test.$(OBJEXT)
 proxy_test_LDADD = $(LDADD)
-proxy_test_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+proxy_test_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 raw_decoder_SOURCES = raw_decoder.c
 raw_decoder_OBJECTS = raw_decoder.$(OBJEXT)
 raw_decoder_LDADD = $(LDADD)
-raw_decoder_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+raw_decoder_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 am_sliced2pes_OBJECTS = sliced2pes.$(OBJEXT) sliced.$(OBJEXT)
 sliced2pes_OBJECTS = $(am_sliced2pes_OBJECTS)
 sliced2pes_LDADD = $(LDADD)
-sliced2pes_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+sliced2pes_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 am_test_vps_OBJECTS = test-vps.$(OBJEXT)
 test_vps_OBJECTS = $(am_test_vps_OBJECTS)
 test_vps_LDADD = $(LDADD)
-test_vps_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+test_vps_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 am_ttxfilter_OBJECTS = ttxfilter.$(OBJEXT) sliced.$(OBJEXT)
 ttxfilter_OBJECTS = $(am_ttxfilter_OBJECTS)
 ttxfilter_LDADD = $(LDADD)
-ttxfilter_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+ttxfilter_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 unicode_SOURCES = unicode.c
 unicode_OBJECTS = unicode.$(OBJEXT)
 unicode_LDADD = $(LDADD)
-unicode_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.a \
+unicode_DEPENDENCIES = $(top_builddir)/src/.libs/libzvbi.so \
 	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
 SCRIPTS = $(noinst_SCRIPTS)
 DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
@@ -353,7 +353,7 @@
 
 AM_CPPFLAGS = $(AM_CFLAGS)
 LDADD = \
-	$(top_builddir)/src/.libs/libzvbi.a \
+	$(top_builddir)/src/.libs/libzvbi.so \
 	$(LIBS) \
 	$(X_LIBS)
 
