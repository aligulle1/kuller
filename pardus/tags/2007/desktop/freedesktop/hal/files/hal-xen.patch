diff --git a/hald/device.c b/hald/device.c
index e0b8a7b..83731bb 100644
--- a/hald/device.c
+++ b/hald/device.c
@@ -970,6 +970,9 @@ hal_device_property_set_string (HalDevic
 {
 	HalProperty *prop;
 
+	if (value == NULL)
+		return FALSE;
+
 	/* check if property already exists */
 	prop = hal_device_property_find (device, key);
 
diff --git a/hald/linux/device.c b/hald/linux/device.c
index ebe80c2..51ca70f 100644
--- a/hald/linux/device.c
+++ b/hald/linux/device.c
@@ -1825,20 +1825,24 @@ xen_add (const gchar *sysfs_path, const 
 	hal_util_set_string_from_file (d, "xen.path", sysfs_path, "nodename");
 
 	devtype = hal_util_get_string_from_file (sysfs_path, "devtype");
-	hal_device_property_set_string (d, "xen.type", devtype);
-
-	if (strcmp (devtype, "pci") == 0) {
-		hal_device_property_set_string (d, "info.product", "Xen PCI Device");
-	} else if (strcmp (devtype, "vbd") == 0) {
-		hal_device_property_set_string (d, "info.product", "Xen Virtual Block Device");
-	} else if (strcmp (devtype, "vif") == 0) {
-		hal_device_property_set_string (d, "info.product", "Xen Virtual Network Device");
-	} else if (strcmp (devtype, "vtpm") == 0) {
-		hal_device_property_set_string (d, "info.product", "Xen Virtual Trusted Platform Module");
+	if (devtype != NULL) {
+		hal_device_property_set_string (d, "xen.type", devtype);
+
+		if (strcmp (devtype, "pci") == 0) {
+			hal_device_property_set_string (d, "info.product", "Xen PCI Device");
+		} else if (strcmp (devtype, "vbd") == 0) {
+			hal_device_property_set_string (d, "info.product", "Xen Virtual Block Device");
+		} else if (strcmp (devtype, "vif") == 0) {
+			hal_device_property_set_string (d, "info.product", "Xen Virtual Network Device");
+		} else if (strcmp (devtype, "vtpm") == 0) {
+			hal_device_property_set_string (d, "info.product", "Xen Virtual Trusted Platform Module");
+		} else {
+			char buf[64];
+			g_snprintf (buf, sizeof (buf), "Xen Device (%s)", devtype);
+			hal_device_property_set_string (d, "info.product", buf);
+		}
 	} else {
-		char buf[64];
-		g_snprintf (buf, sizeof (buf), "Xen Device (%s)", devtype);
-		hal_device_property_set_string (d, "info.product", buf);
+		 hal_device_property_set_string (d, "info.product", "Xen Device (unknown)");
 	}
 
 	return d;
