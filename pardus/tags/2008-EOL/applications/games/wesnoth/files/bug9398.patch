
Author: ilor	vim:ft=diff: 
Description: fix bug #13031 by implementing a hard limit on map size. The cap
	is set to 200 tiles (so 200*200 is the max map area), and as of now is
	a hardcoded constant in terrain_translation.cpp. (upstream svn r32987)

Index: wesnoth-1.4.7/src/terrain_translation.cpp
===================================================================
--- wesnoth-1.4.7.orig/src/terrain_translation.cpp
+++ wesnoth-1.4.7/src/terrain_translation.cpp
@@ -29,6 +29,10 @@
 
 namespace t_translation {
 
+    size_t max_map_size() {
+        return 200; //TODO make this overridable by the user without having to rebuild
+    }
+
 /***************************************************************************************/
 // forward declaration of internal functions
 
@@ -312,6 +316,10 @@ t_map read_game_map(const std::string& s
 					ERR_G << "Map not a rectangle error occured at line offset " << y << " position offset " << x << "\n";
 					throw error("Map not a rectangle.");
 				}
+                if (y > max_map_size()) {
+					ERR_G << "Map size exceeds limit (y > " << max_map_size() << ")\n";
+					throw error("Map height limit exceeded.");
+                }
 			}
 
 			// Prepare next iteration
@@ -334,6 +342,10 @@ t_map read_game_map(const std::string& s
 		} else {
 			++x;
 			offset = pos_separator + 1;
+            if (x > max_map_size()) {
+				ERR_G << "Map size exceeds limit (x > " << max_map_size() << ")\n";
+				throw error("Map width limit exceeded.");
+            }
 		}
 
 	}
Index: wesnoth-1.4.7/src/terrain_translation.hpp
===================================================================
--- wesnoth-1.4.7.orig/src/terrain_translation.hpp
+++ wesnoth-1.4.7/src/terrain_translation.hpp
@@ -25,6 +25,12 @@
 
 namespace t_translation {
 
+    /** 
+     * Return the maximum allowed map size (in either dimension),
+     * the maximum map area is, therefore, this value squared.
+     */
+    size_t max_map_size();
+
 	typedef Uint32 t_layer;
 	const t_layer WILDCARD = 0x2A000000;
 	const t_layer NO_LAYER = 0xFFFFFFFF;

