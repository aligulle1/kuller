From 44901a96847b9967c057832b185e2f34ee6a14e5 Mon Sep 17 00:00:00 2001
From: Roland Dreier <rdreier@cisco.com>
Subject: [PATCH] libata: Avoid overflow in ata_tf_read_block() when tf->hba_lbal > 127
References: bnc#443661

Phillip O'Donnell <phillip.odonnell@gmail.com> pointed out that the same
sign extension bug that was fixed in commit ba14a9c2 ("libata: Avoid
overflow in ata_tf_to_lba48() when tf->hba_lbal > 127") also appears to
exist in ata_tf_read_block().  Fix this by adding a cast to u64.

Signed-off-by: Roland Dreier <rolandd@cisco.com>
Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
Signed-off-by: Tejun Heo <teheo@suse.de>
---
 drivers/ata/libata-core.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

Index: linux-2.6.25-SL110_BRANCH/drivers/ata/libata-core.c
===================================================================
--- linux-2.6.25-SL110_BRANCH.orig/drivers/ata/libata-core.c
+++ linux-2.6.25-SL110_BRANCH/drivers/ata/libata-core.c
@@ -530,7 +530,7 @@ u64 ata_tf_read_block(struct ata_taskfil
 		if (tf->flags & ATA_TFLAG_LBA48) {
 			block |= (u64)tf->hob_lbah << 40;
 			block |= (u64)tf->hob_lbam << 32;
-			block |= tf->hob_lbal << 24;
+			block |= (u64)tf->hob_lbal << 24;
 		} else
 			block |= (tf->device & 0xf) << 24;
 
