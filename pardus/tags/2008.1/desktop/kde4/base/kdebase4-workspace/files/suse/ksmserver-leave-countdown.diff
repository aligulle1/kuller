Index: libs/kworkspace/kworkspace.h
===================================================================
--- libs/kworkspace/kworkspace.h	(revision 796708)
+++ libs/kworkspace/kworkspace.h	(working copy)
@@ -52,7 +52,7 @@
      */
     ShutdownTypeDefault = -1,
     /**
-     * Only log out.
+     * Only show log out dialog
      */
     ShutdownTypeNone = 0,
     /**
@@ -62,7 +62,11 @@
     /**
      * Log out and halt the machine.
      */
-    ShutdownTypeHalt = 2
+    ShutdownTypeHalt = 2,
+    /**
+     * Only log out
+     */
+    ShutdownTypeLogout = 3
   };
 
   /**
Index: ksmserver/server.cpp
===================================================================
--- ksmserver/server.cpp	(revision 796708)
+++ ksmserver/server.cpp	(working copy)
@@ -29,6 +29,10 @@
 
 ******************************************************************/
 
+#include "server.h"
+#include "global.h"
+#include "client.h"
+#include "ksmserverinterfaceadaptor.h"
 
 #include <config-workspace.h>
 #include <config-unix.h> // HAVE_LIMITS_H
@@ -72,15 +76,8 @@
 #include <kprocess.h>
 #include <kdebug.h>
 
-#include "server.h"
-#include "global.h"
-#include "client.h"
-#include "ksmserverinterfaceadaptor.h"
-
 #include "server.moc"
 
-#include <kdebug.h>
-
 #include <dmctl.h>
 #include <QX11Info>
 #include <krandom.h>
Index: ksmserver/shutdowndlg.h
===================================================================
--- ksmserver/shutdowndlg.h	(revision 796708)
+++ ksmserver/shutdowndlg.h	(working copy)
@@ -32,6 +32,7 @@
 class QMenu;
 class QTimer;
 class QTimeLine;
+class QLabel;
 
 namespace Plasma
 {
@@ -122,6 +123,11 @@
     QStringList rebootOptions;
     QPixmap m_renderedSvg;
     Plasma::Svg* m_svg;
+    QLabel *m_automaticallyDoLabel;
+    int m_automaticallyDoSeconds;
+
+private Q_SLOTS:
+    void automaticallyDoTimeout();
 };
 
 #endif
Index: ksmserver/shutdowndlg.cpp
===================================================================
--- ksmserver/shutdowndlg.cpp	(revision 796708)
+++ ksmserver/shutdowndlg.cpp	(working copy)
@@ -23,8 +23,6 @@
 
 ******************************************************************/
 
-#include <config-workspace.h>
-
 #include "shutdowndlg.h"
 #include "plasma/svg.h"
 
@@ -55,6 +53,8 @@
 
 #include <dmctl.h>
 
+#include <config-workspace.h>
+
 #include "shutdowndlg.moc"
 
 #define FONTCOLOR "#bfbfbf"
@@ -338,7 +338,8 @@
 
 KSMShutdownDlg::KSMShutdownDlg( QWidget* parent,
                                 bool maysd, KWorkSpace::ShutdownType sdtype )
-  : QDialog( parent, Qt::Popup )
+  : QDialog( parent, Qt::Popup ), //krazy:exclude=qclasses
+    m_automaticallyDoSeconds(30)
     // this is a WType_Popup on purpose. Do not change that! Not
     // having a popup here has severe side effects.
 {
@@ -364,7 +365,7 @@
 
     QVBoxLayout *mainLayout = new QVBoxLayout();
 
-    mainLayout->setContentsMargins(9, 9, 12, 7);
+    mainLayout->setContentsMargins(12, 9, 12, 7);
     QVBoxLayout *buttonLayout = new QVBoxLayout();
     buttonLayout->addStretch();
     QHBoxLayout *buttonMainLayout = new QHBoxLayout();
@@ -378,6 +379,9 @@
     QFont fnt;
     fnt.setPixelSize(16);
 
+    QPalette palette;
+    palette.setColor(QPalette::WindowText, QColor(FONTCOLOR));
+
     QLabel *versionLabel = new QLabel(this);
 
     int vmajor, vminor, vbugfix;
@@ -403,7 +407,8 @@
         vcomposed = i18nc("@label In corner of the logout dialog",
                           "KDE <numid>%1.%2</numid>", vmajor, vminor);
     }
-    versionLabel->setText("<font color='" + QString(FONTCOLOR) + "'>" + vcomposed + "</font>");
+    versionLabel->setPalette(palette);
+    versionLabel->setText(vcomposed);
     versionLabel->setFont(fnt);
 
     KUser userInformation;
@@ -411,6 +416,11 @@
     QString userName = userInformation.property( KUser::FullName ).toString();
     QString loginName = userInformation.loginName();
 
+    QFontMetrics fm(fnt);
+    if (fm.width(userName) > width() / 2) { // cut the text if it is really long in order to not use more than two lines
+        userName = fm.elidedText(userName, Qt::ElideRight, width() / 2);
+    }
+
     if (userName.isEmpty()) {
         logoutMsg = i18n( "End Session for %1", loginName );
     } else {
@@ -419,7 +429,8 @@
 
     QLabel *logoutMessageLabel = new QLabel(this);
     // FIXME Made the color picked from the user's one
-    logoutMessageLabel->setText("<font color='" + QString(FONTCOLOR) + "'>" + logoutMsg + "</font>");
+    logoutMessageLabel->setPalette(palette);
+    logoutMessageLabel->setText(logoutMsg);
     logoutMessageLabel->setAlignment(Qt::AlignRight);
     fnt.setPixelSize(12);
     logoutMessageLabel->setFont(fnt);
@@ -429,15 +440,21 @@
     topLayout->addWidget(logoutMessageLabel, 1, Qt::AlignBottom);
 
     KSMPushButton* btnLogout = new KSMPushButton( i18n("Logout"), this );
+    btnLogout->setObjectName("btnLogout");
     btnLogout->setPixmap(KIconLoader::global()->loadIcon("system-log-out", KIconLoader::NoGroup, 32));
-    btnLogout->setFocus();
+    if ( sdtype == KWorkSpace::ShutdownTypeLogout )
+        btnLogout->setFocus();
     connect(btnLogout, SIGNAL(clicked()), SLOT(slotLogout()));
     buttonLayout->addWidget(btnLogout);
     buttonLayout->addStretch();
 
+    KSMPushButton* btnHalt = 0;
+    KSMPushButton* btnReboot = 0;
+
     if (maysd) {
         // Shutdown
-        KSMPushButton* btnHalt = new KSMPushButton( i18n("Turn Off Computer"), this );
+        btnHalt = new KSMPushButton( i18n("Turn Off Computer"), this );
+        btnHalt->setObjectName("btnHalt");
         btnHalt->setPixmap(KIconLoader::global()->loadIcon("system-shutdown", KIconLoader::NoGroup, 32));
         buttonLayout->addWidget(btnHalt);
         buttonLayout->addStretch();
@@ -465,7 +482,8 @@
         shutdownMenu->addActions(spdActionGroup->actions());
 
         // Reboot
-        KSMPushButton* btnReboot = new KSMPushButton( i18n("Restart Computer"), this );
+        btnReboot = new KSMPushButton( i18n("Restart Computer"), this );
+        btnReboot->setObjectName("btnReboot");
         btnReboot->setPixmap(KIconLoader::global()->loadIcon("system-restart", KIconLoader::NoGroup, 32));
         connect(btnReboot, SIGNAL(clicked()), SLOT(slotReboot()));
         buttonLayout->addWidget(btnReboot);
@@ -497,19 +515,70 @@
         }
     }
 
+    if ( sdtype == KWorkSpace::ShutdownTypeLogout ) {
+        btnReboot->setHidden(true);
+        btnHalt->setHidden(true);
+    }
+    else if ( sdtype == KWorkSpace::ShutdownTypeHalt ) {
+        btnReboot->setHidden(true);
+        btnLogout->setHidden(true);
+    }
+    else if ( sdtype == KWorkSpace::ShutdownTypeReboot ) {
+        btnHalt->setHidden(true);
+        btnLogout->setHidden(true);
+    }
+
     KSMPushButton* btnBack = new KSMPushButton(i18n("Cancel"), this, true);
     btnBack->setPixmap(KIconLoader::global()->loadIcon( "dialog-cancel", KIconLoader::NoGroup, 16));
-    bottomLayout->addStretch();
+
+    m_automaticallyDoLabel = new QLabel(this);
+    m_automaticallyDoLabel->setPalette(palette);
+    fnt.setPixelSize(11);
+    m_automaticallyDoLabel->setFont(fnt);
+    m_automaticallyDoLabel->setWordWrap(true);
+    automaticallyDoTimeout();
+
+    QTimer *automaticallyDoTimer = new QTimer(this);
+    connect(automaticallyDoTimer, SIGNAL(timeout()), this, SLOT(automaticallyDoTimeout()));
+    automaticallyDoTimer->start(1000);
+
+    bottomLayout->addWidget(m_automaticallyDoLabel, 1, Qt::AlignBottom);
     bottomLayout->addWidget(btnBack);
     connect(btnBack, SIGNAL(clicked()), SLOT(reject()));
 
     mainLayout->addLayout(topLayout);
+    mainLayout->addSpacing(5);
     mainLayout->addLayout(buttonMainLayout);
+    mainLayout->addSpacing(9);
     mainLayout->addLayout(bottomLayout);
 
     setLayout( mainLayout );
 }
 
+void KSMShutdownDlg::automaticallyDoTimeout()
+{
+    QPushButton *focusedButton = qobject_cast<QPushButton *>(focusWidget());
+    if (focusedButton) {
+        if (m_automaticallyDoSeconds <= 0) { // timeout is at 0, do selected action
+                focusedButton->click();
+        // following code is required to provide a clean way to translate strings
+        } else if (!focusedButton->objectName().isEmpty()) { // one of the action buttons; not cancel
+            if (focusedButton->objectName() == "btnLogout")
+                m_automaticallyDoLabel->setText(i18np("Log out in 1 second.",
+                                                      "Log out in %1 seconds.", m_automaticallyDoSeconds));
+            else if (focusedButton->objectName() == "btnHalt")
+                m_automaticallyDoLabel->setText(i18np("Turn off computer in 1 second.",
+                                                      "Turn off computer in %1 seconds.", m_automaticallyDoSeconds));
+            else if (focusedButton->objectName() == "btnReboot")
+                m_automaticallyDoLabel->setText(i18np("Reboot computer in 1 second.",
+                                                      "Reboot computer in %1 seconds.", m_automaticallyDoSeconds));
+            m_automaticallyDoSeconds--; // only decrease time if a valid actions button is selected
+        } else {
+            m_automaticallyDoLabel->setText(QString());
+        }
+    }
+}
+
 void KSMShutdownDlg::paintEvent(QPaintEvent *e)
 {
     Q_UNUSED(e);
Index: plasma/applets/kickoff/core/itemhandlers.cpp
===================================================================
--- plasma/applets/kickoff/core/itemhandlers.cpp	(revision 812743)
+++ plasma/applets/kickoff/core/itemhandlers.cpp	(working copy)
@@ -115,7 +115,7 @@
     if (m_logoutAction == "logout") {
         type = KWorkSpace::ShutdownTypeNone;
     } else if (m_logoutAction == "logoutonly") {
-        type = KWorkSpace::ShutdownTypeNone;
+        type = KWorkSpace::ShutdownTypeLogout;
     } else if (m_logoutAction == "lock") {
         kDebug() << "Locking screen"; 
     } else if (m_logoutAction == "switch") {
