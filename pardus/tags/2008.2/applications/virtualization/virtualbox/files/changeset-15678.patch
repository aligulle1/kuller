--- configure.orig	2008-12-17 11:49:00.000000000 +0200
+++ configure	2009-01-10 01:14:49.000000000 +0200
@@ -66,7 +66,6 @@
 WITH_KMODS=1
 WITH_HARDENING=1
 CC="gcc"
-CC_COMPAT=""
 CC32=""
 CC64=""
 CXX="g++"
@@ -348,28 +347,6 @@
 check_gcc()
 {
   test_header gcc
-  if [ -n "$CC_COMPAT" ]; then
-    if check_avail "$CC_COMPAT" CC_COMPAT really; then
-      cc_compat_ver=`$CC_COMPAT -dumpversion` 2>/dev/null
-      if [ $? -ne 0 ]; then
-        log_failure "cannot execute '$CC_COMPAT -dumpversion'"
-        fail really
-      fi
-      cc_compat_maj=`echo $cc_compat_ver|cut -d. -f1`
-      cc_compat_min=`echo $cc_compat_ver|cut -d. -f2`
-      if [ $cc_compat_maj -lt 3 \
-         -o \( $cc_compat_maj -eq 3 -a $cc_compat_min -lt 2 \) \
-         -o \( $cc_compat_maj -eq 4 -a $cc_compat_min -lt 1 \) \
-         -o \( $cc_compat_maj -eq 4 -a $cc_compat_min -gt 2 \) \
-         -o $cc_compat_maj -gt 4 ]; then
-        log ""
-        log "  ** Version $cc_compat_ver of the compatibility gcc found. Expected gcc 3.x with x>1"
-        log "  ** or gcc 4.x with 0<x<3"
-        fail really
-      fi
-      cnf_append "VBOX_RECOMPILER_OP_GCC" "$CC_COMPAT"
-    fi
-  fi
   if check_avail "$CC" CC really; then
     cc_ver=`$CC -dumpversion` 2>/dev/null
     if [ $? -ne 0 ]; then
@@ -389,16 +366,6 @@
         fail really
       elif [ $cc_maj -eq 4 -a $cc_min -eq 0 -a "OS" = "darwin" ]; then
         log_success "found version $cc_ver"
-      elif [ $cc_maj -eq 4 -a $cc_min -eq 3 ]; then
-        if [ -z "$CC_COMPAT" ]; then
-          log ""
-          log "  ** There are known problems with gcc version 4.3 when compiling the recompiler"
-          log "  ** stuff. You need to specify a compatibility compiler with version < 4.3. Look"
-          log "  ** for a package compat-gcc-34 on Fedora systems or something similar on other"
-          log "  ** distributions and call configure with parameter --with-gcc-compat=gcc34."
-          fail really
-        fi
-        log_success "found version $cc_ver + compat version $cc_compat_ver"
       # gcc-4.0 is allowed for Darwin only
       elif [ $cc_maj -lt 3 \
              -o \( $cc_maj -eq 3 -a $cc_min -lt 2 \) \
@@ -1837,9 +1804,6 @@
     --with-g++=*)
       CXX=`echo $option | cut -d'=' -f2`
       ;;
-    --with-gcc-compat=*)
-      CC_COMPAT=`echo $option | cut -d'=' -f2`
-      ;;
     --with-kbuild=*)
       KBUILDDIR=`echo $option | cut -d'=' -f2`
       if echo $KBUILDDIR|grep -q "$INVALID_CHARS"; then
