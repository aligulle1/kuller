#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# A simple script to update gfxtheme file of grub
# This is required for language setting in installed systems
#
# Copyright (C) 2008, TUBITAK/UEKAE
#

import os
import sys
import shutil
import tempfile

msgfile = "/boot/grub/message"
langfile = "/etc/env.d/03locale"
themedir = "/usr/share/gfxtheme/pardus/boot"

defaultlang = "en_US"
availablelangs = ["ca_ES", "de_DE", "en_US", "es_ES", "fr_FR", "it_IT", "nl_NL", "pl_PL", "pt_BR", "tr_TR"]
# availablelangs = ["ca_ES", "de_DE", "en_US", "es_ES", "fr_FR", "it_IT", "nl_NL", "pt_BR", "tr_TR"]


def loadFile(path):
    """Read contents of a file"""
    try:
        f = file(path)
        data = f.readlines()
        f.close()
    except IOError:
        print "could not read %s" % path
        data = []

    return data

def writeFile(filename, data):
    """Write data to file"""
    try:
        f = file(filename, "w")
        f.write(data)
        f.close()
    except IOError:
        print "could not write %s" % filename
        sys.exit(1)

def getLang():
    lang = defaultlang
    data = loadFile(langfile)

    for line in data:
        if line.startswith("LANG="):
            lang = line[5:].strip().replace(".UTF-8", "")

    if lang in availablelangs:
        return lang
    else:
        return defaultlang

def copyDirContents(source, dest):
    for f in os.listdir(source):
        shutil.copy(os.path.join(source, f), dest)

def createArchive(source, dest):
    # I am a bit lazy to write this in python, as cpio does not take source directory path
    # FIXME: convert this to python when we have python-cpio

    os.chdir(source)
    if os.system("ls|sed -e 's/ /\\n/'|cpio -o > %s" % dest):
        print "could not create cpio archive in %s" % dest
        return False
    else:
        return True


# get system language
lang = getLang()

# make a temporary workdir
tmpdir = tempfile.mkdtemp()

# copy theme contents to workdir
copyDirContents(themedir, tmpdir)

# write system language into theme config
writeFile(os.path.join(tmpdir, "lang"), "%s\n" % lang)

# create grub message file
if createArchive(tmpdir, msgfile):
    shutil.rmtree(tmpdir)
else:
    sys.exit(1)

