diff -Nur gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegcodecmap.c gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegcodecmap.c
--- gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegcodecmap.c	2008-06-05 18:03:00.000000000 +0300
+++ gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegcodecmap.c	2008-06-05 18:03:16.000000000 +0300
@@ -3287,29 +3287,3 @@
 
   return 0;
 }
-
-/**
- * Convert image 'src' to 'dst'.
- *
- * We use this code to copy two pictures between the same
- * colorspaces, so this function is not realy used to do
- * colorspace conversion.
- * The ffmpeg code has a bug in it where odd sized frames were
- * not copied completely. We adjust the input parameters for
- * the original ffmpeg img_convert function here so that it
- * still does the right thing.
- */
-int
-gst_ffmpeg_img_convert (AVPicture * dst, int dst_pix_fmt,
-    const AVPicture * src, int src_pix_fmt, int src_width, int src_height)
-{
-  struct SwsContext *ctx;
-  int res;
-
-  ctx = sws_getContext (src_width, src_height, src_pix_fmt, src_width, src_height, dst_pix_fmt, 2,      /* flags : bicubic */
-      NULL, NULL, NULL);
-  res = sws_scale (ctx, (uint8_t **) src->data, (int *) src->linesize,
-      2, src_width, dst->data, dst->linesize);
-  sws_freeContext (ctx);
-  return res;
-}
diff -Nur gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegcodecmap.h gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegcodecmap.h
--- gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegcodecmap.h	2008-06-05 18:03:00.000000000 +0300
+++ gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegcodecmap.h	2008-06-05 18:03:16.000000000 +0300
@@ -125,15 +125,6 @@
                            int         height);
 
 /*
- * convert an image, we only use this for copying the image, ie,
- * convert between the same colorspaces.
- */
-int
-gst_ffmpeg_img_convert (AVPicture * dst, int dst_pix_fmt,
-                        const AVPicture * src, int src_pix_fmt,
-                        int src_width, int src_height);
-
-/*
  * Convert from/to a GStreamer <-> FFMpeg timestamp.
  */
 static inline guint64
diff -Nur gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegdec.c gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegdec.c
--- gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegdec.c	2008-06-05 18:03:00.000000000 +0300
+++ gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegdec.c	2008-06-05 18:03:16.000000000 +0300
@@ -1342,11 +1342,7 @@
     gst_ffmpeg_avpicture_fill (&pic, GST_BUFFER_DATA (*outbuf),
         ffmpegdec->context->pix_fmt, width, height);
 
-    /* the original convert function did not do the right thing, this
-     * is a patched up version that adjust widht/height so that the
-     * ffmpeg one works correctly. */
-    gst_ffmpeg_img_convert (&pic, ffmpegdec->context->pix_fmt,
-        (AVPicture *) ffmpegdec->picture,
+    av_picture_copy(&pic, (AVPicture *) ffmpegdec->picture,
         ffmpegdec->context->pix_fmt, width, height);
   }
   ffmpegdec->picture->pts = -1;
diff -Nur gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegdemux.c gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegdemux.c
--- gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegdemux.c	2008-06-05 18:03:00.000000000 +0300
+++ gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegdemux.c	2008-06-05 18:03:16.000000000 +0300
@@ -1265,9 +1265,8 @@
         avstream->codec->pix_fmt, avstream->codec->width,
         avstream->codec->height);
 
-    gst_ffmpeg_img_convert (&dst, avstream->codec->pix_fmt,
-        &src, avstream->codec->pix_fmt, avstream->codec->width,
-        avstream->codec->height);
+    av_picture_copy (&dst, &src, avstream->codec->pix_fmt,
+        avstream->codec->width, avstream->codec->height);
   } else {
     memcpy (GST_BUFFER_DATA (outbuf), pkt.data, outsize);
   }
diff -Nur gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegmux.c gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegmux.c
--- gst-ffmpeg-0.10.4-old/ext/ffmpeg/gstffmpegmux.c	2008-06-05 18:03:00.000000000 +0300
+++ gst-ffmpeg-0.10.4/ext/ffmpeg/gstffmpegmux.c	2008-06-05 18:03:16.000000000 +0300
@@ -554,8 +554,8 @@
       gst_ffmpeg_avpicture_fill (&src, GST_BUFFER_DATA (buf),
           PIX_FMT_RGB24, st->codec->width, st->codec->height);
 
-      gst_ffmpeg_img_convert (&dst, PIX_FMT_RGB24,
-          &src, PIX_FMT_RGB24, st->codec->width, st->codec->height);
+      av_picture_copy(&dst, &src, PIX_FMT_RGB24,
+          st->codec->width, st->codec->height);
     } else {
       pkt.data = GST_BUFFER_DATA (buf);
       pkt.size = GST_BUFFER_SIZE (buf);
