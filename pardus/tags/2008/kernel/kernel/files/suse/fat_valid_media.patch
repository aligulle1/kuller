Subject: FAT_VALID_MEDIA(): remove pointless test
From: Andrew Morton <akpm@linux-foundation.org>
Patch-mainline: 2.6.25-rc3-mm1
References: 364365

The on-disk media specification field in FAT is only 8-bits, so testing for
<=0xff is pointless, and can generate a "comparison is always true due to
limited range of data type" warning.

While we're there, convert FAT_VALID_MEDIA() into a C function - the present
implementation is buggy: it generates either one or two references to its
argument.

Cc: Frank Seidel <fseidel@suse.de>
Cc: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Frank Seidel <fseidel@suse.de>
---

 fs/fat/inode.c           |    2 +-
 include/linux/msdos_fs.h |    6 +++++-
 2 files changed, 6 insertions(+), 2 deletions(-)

Index: 2008-devel/fs/fat/inode.c
===================================================================
--- 2008-devel.orig/fs/fat/inode.c
+++ 2008-devel/fs/fat/inode.c
@@ -1209,7 +1209,7 @@ int fat_fill_super(struct super_block *s
 	 */
 
 	media = b->media;
-	if (!FAT_VALID_MEDIA(media)) {
+	if (!fat_valid_media(media)) {
 		if (!silent)
 			printk(KERN_ERR "FAT: invalid media value (0x%02x)\n",
 			       media);
Index: 2008-devel/include/linux/msdos_fs.h
===================================================================
--- 2008-devel.orig/include/linux/msdos_fs.h
+++ 2008-devel/include/linux/msdos_fs.h
@@ -58,7 +58,11 @@
 #define MSDOS_DOTDOT	"..         "	/* "..", padded to MSDOS_NAME chars */
 
 /* media of boot sector */
-#define FAT_VALID_MEDIA(x)	((0xF8 <= (x) && (x) <= 0xFF) || (x) == 0xF0)
+static inline int fat_valid_media(u8 media)
+{
+	return 0xf8 <= media || media == 0xf0;
+}
+
 #define FAT_FIRST_ENT(s, x)	((MSDOS_SB(s)->fat_bits == 32 ? 0x0FFFFF00 : \
 	MSDOS_SB(s)->fat_bits == 16 ? 0xFF00 : 0xF00) | (x))
 
