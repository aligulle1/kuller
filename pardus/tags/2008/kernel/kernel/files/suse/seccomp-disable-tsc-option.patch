From: Andrea Arcangeli <andrea@cpushare.com>
Subject: [PATCH seccomp: make tsc disabling optional
Patch-mainline: unknown
References: 191123

Make the TSC disable purely paranoid feature optional, so by default seccomp
returns absolutely zerocost.

This only applies to i386.

Ported from 2.6.19 to 2.6.24-rc7 by Jeff Mahoney.

Signed-off-by: Andrea Arcangeli <andrea@cpushare.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 arch/x86/Kconfig             |   12 ++++++++++++
 arch/x86/kernel/process_32.c |    2 ++
 2 files changed, 14 insertions(+)

Index: 2008-devel/arch/x86/Kconfig
===================================================================
--- 2008-devel.orig/arch/x86/Kconfig
+++ 2008-devel/arch/x86/Kconfig
@@ -1053,6 +1053,18 @@ config SECCOMP
 
 	  If unsure, say Y. Only embedded should say N here.
 
+config SECCOMP_DISABLE_TSC
+	bool "Disable the TSC for seccomp tasks"
+	depends on SECCOMP && X86_32
+	default n
+	help
+	  This feature mathematically prevents covert channels
+	  for tasks running under SECCOMP. This can generate
+	  a minuscule overhead in the scheduler.
+
+	  If you care most about performance say N. Say Y only if you're
+	  paranoid about covert channels.
+
 config CC_STACKPROTECTOR
 	bool "Enable -fstack-protector buffer overflow detection (EXPERIMENTAL)"
 	depends on X86_64 && EXPERIMENTAL && BROKEN
Index: 2008-devel/arch/x86/kernel/process_32.c
===================================================================
--- 2008-devel.orig/arch/x86/kernel/process_32.c
+++ 2008-devel/arch/x86/kernel/process_32.c
@@ -539,6 +539,7 @@ static void hard_disable_TSC(void)
 }
 void disable_TSC(void)
 {
+#ifdef CONFIG_SECCOMP_DISABLE_TSC
 	preempt_disable();
 	if (!test_and_set_thread_flag(TIF_NOTSC))
 		/*
@@ -547,6 +548,7 @@ void disable_TSC(void)
 		 */
 		hard_disable_TSC();
 	preempt_enable();
+#endif
 }
 static void hard_enable_TSC(void)
 {
