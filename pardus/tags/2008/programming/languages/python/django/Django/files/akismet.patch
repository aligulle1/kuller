diff -ur Django-0.95.1.orig/django/contrib/comments/views/comments.py Django-0.95.1/django/contrib/comments/views/comments.py
--- Django-0.95.1.orig/django/contrib/comments/views/comments.py	2006-07-21 20:11:13.000000000 +0300
+++ Django-0.95.1/django/contrib/comments/views/comments.py	2007-04-14 20:58:02.221342853 +0300
@@ -14,6 +14,8 @@
 from django.utils.translation import ngettext
 import base64, datetime
 
+from django.contrib.sites.models import Site
+
 COMMENTS_PER_PAGE = 20
 
 class PublicCommentManipulator(AuthenticationForm):
@@ -215,6 +217,30 @@
         ratings_range=rating_range,
         num_rating_choices=len(rating_choices))
     errors = manipulator.get_validation_errors(new_data)
+
+    # akismet check
+    try:
+        from akismet import Akismet
+        try:
+            key = settings.AKISMET_API_KEY
+        except AttributeError:
+            pass
+        else:
+            ak_api = Akismet(key=key, blog_url='http://%s/' % Site.objects.get(pk=settings.SITE_ID).domain)
+            if ak_api.verify_key():
+                ak_data = {
+                    'user_ip': request.META.get('REMOTE_ADDR', '127.0.0.1'),
+                    'user_agent': request.META.get('HTTP_USER_AGENT', ''),
+                    'referrer': request.META.get('HTTP_REFERER', ''),
+                    'comment_type': 'comment',
+                    'comment_author': new_data.get('person_name', ''),
+                }
+                if ak_api.comment_check(new_data.get('comment', ''), data=ak_data, build_data=True):
+                    raise Http404, _("SPAM detected (security violation)...")
+    except ImportError:
+        # ignore silently if akismet bindings not exists
+        pass
+
     # If user gave correct username/password and wasn't already logged in, log them in
     # so they don't have to enter a username/password again.
     if manipulator.get_user() and new_data.has_key('password') and manipulator.get_user().check_password(new_data['password']):
