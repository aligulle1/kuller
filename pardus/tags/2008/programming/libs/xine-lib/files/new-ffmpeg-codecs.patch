diff -Nur xine-lib-1.1.13-old/configure.ac xine-lib-1.1.13/configure.ac
--- xine-lib-1.1.13-old/configure.ac	2008-06-24 15:27:01.000000000 +0300
+++ xine-lib-1.1.13/configure.ac	2008-06-24 15:34:15.000000000 +0300
@@ -388,7 +388,7 @@
 echo "/* Automatically generated */" > $ffmpeg_config_h
 
 dnl uncommon ffmpeg codecs
-ffmpeg_uncommon_codecs="AASC ASV1 ASV2 AVS CSCD CYUV DVVIDEO EIGHTBPS FLIC FLV FOURXM FRAPS HUFFYUV IDCIN INTERPLAY_VIDEO KMVC LOCO MMVIDEO NUV QDRAW QPEG ROQ RPZA SMACKER SMC SNOW TRUEMOTION1 TRUEMOTION2 TSCC ULTI VCR1 VMDVIDEO WNV1 XAN_WC3 XL ZMBV ALAC AMR_NB AMR_WB LIBGSM MACE3 MACE6 SHORTEN SMACKAUD TRUESPEECH TTA VMDAUDIO PCM_ALAW PCM_MULAW PCM_S8 PCM_S16BE PCM_S16LE PCM_S24BE PCM_S24DAUD PCM_S24LE PCM_S32BE PCM_S32LE PCM_U8 PCM_U16BE PCM_U16LE PCM_U24BE PCM_U24LE PCM_U32BE PCM_U32LE INTERPLAY_DPCM ROQ_DPCM SOL_DPCM VQA XAN_DPCM ADPCM_4XM ADPCM_CT ADPCM_EA ADPCM_IMA_DK3 ADPCM_IMA_DK4 ADPCM_IMA_QT ADPCM_IMA_SMJPEG ADPCM_IMA_WAV ADPCM_IMA_WS ADPCM_MS ADPCM_SBPRO_2 ADPCM_SBPRO_3 ADPCM_SBPRO_4 ADPCM_XA ADPCM_YAMAHA"
+ffmpeg_uncommon_codecs="AASC ASV1 ASV2 AVS CSCD CYUV DVVIDEO EIGHTBPS FLIC FLV FOURXM FRAPS HUFFYUV IDCIN INTERPLAY_VIDEO KMVC LOCO MMVIDEO NUV QDRAW QPEG ROQ RPZA SMACKER SMC SNOW DIRAC TRUEMOTION1 TRUEMOTION2 TSCC ULTI VCR1 VMDVIDEO WNV1 XAN_WC3 XL ZMBV ALAC AMR_NB AMR_WB LIBGSM MACE3 MACE6 SHORTEN SMACKAUD TRUESPEECH TTA VMDAUDIO PCM_ALAW PCM_MULAW PCM_S8 PCM_S16BE PCM_S16LE PCM_S24BE PCM_S24DAUD PCM_S24LE PCM_S32BE PCM_S32LE PCM_U8 PCM_U16BE PCM_U16LE PCM_U24BE PCM_U24LE PCM_U32BE PCM_U32LE INTERPLAY_DPCM ROQ_DPCM SOL_DPCM VQA XAN_DPCM ADPCM_4XM ADPCM_CT ADPCM_EA ADPCM_IMA_DK3 ADPCM_IMA_DK4 ADPCM_IMA_QT ADPCM_IMA_SMJPEG ADPCM_IMA_WAV ADPCM_IMA_WS ADPCM_MS ADPCM_SBPRO_2 ADPCM_SBPRO_3 ADPCM_SBPRO_4 ADPCM_XA ADPCM_YAMAHA AMR_NB AMR_WB"
 for ucname in $ffmpeg_uncommon_codecs; do
   config_name="CONFIG_${ucname}_DECODER"
   enabled_name="ENABLE_${ucname}_DECODER"
@@ -402,7 +402,7 @@
 done
 
 dnl popular ffmpeg codecs
-ffmpeg_popular_codecs="CINEPAK FLASHSV H261 H263 H263I H264 INDEO2 INDEO3 MJPEG MJPEGB MPEG1VIDEO MPEG2VIDEO MPEG4 MPEGVIDEO MSMPEG4V1 MSMPEG4V2 MSMPEG4V3 MSRLE MSVIDEO1 QTRLE RV10 RV20 SVQ1 SVQ3 VC1 VP3 VP5 VP6 VP6F WMV1 WMV2 WMV3 COOK DTS FLAC MP2 MP3 QDM2 RA_144 RA_288 WAVPACK WMAV1 WMAV2 ADPCM_SWF"
+ffmpeg_popular_codecs="CINEPAK FLASHSV H261 H263 H263I H264 INDEO2 INDEO3 MJPEG MJPEGB MPEG1VIDEO MPEG2VIDEO MPEG4 MPEGVIDEO MSMPEG4V1 MSMPEG4V2 MSMPEG4V3 MSRLE MSVIDEO1 QTRLE RV10 RV20 SVQ1 SVQ3 VC1 VP3 VP5 VP6 VP6F SNOW DIRAC WMV1 WMV2 WMV3 COOK DTS FLAC MP2 MP3 QDM2 RA_144 RA_288 WAVPACK WMAV1 WMAV2 ADPCM_SWF"
 
 for ucname in $ffmpeg_popular_codecs; do
   config_name="CONFIG_${ucname}_DECODER"
diff -Nur xine-lib-1.1.13-old/src/combined/ffmpeg/ff_audio_decoder.c xine-lib-1.1.13/src/combined/ffmpeg/ff_audio_decoder.c
--- xine-lib-1.1.13-old/src/combined/ffmpeg/ff_audio_decoder.c	2008-06-24 15:27:01.000000000 +0300
+++ xine-lib-1.1.13/src/combined/ffmpeg/ff_audio_decoder.c	2008-06-24 15:34:15.000000000 +0300
@@ -108,6 +108,8 @@
   {BUF_AUDIO_SMACKER,    CODEC_ID_SMACKAUDIO,     "Smacker (ffmpeg)"},
   {BUF_AUDIO_FLVADPCM,   CODEC_ID_ADPCM_SWF,	  "Flash ADPCM (ffmpeg)"},
   {BUF_AUDIO_WAVPACK,	 CODEC_ID_WAVPACK,	  "WavPack (ffmpeg)"},
+  {BUF_AUDIO_AMR_NB,	 CODEC_ID_AMR_NB,	  "AMR-NB 3gp (ffmpeg)"},
+  {BUF_AUDIO_AMR_WB,	 CODEC_ID_AMR_WB,	  "AMR-WB 3gp (ffmpeg)"},
 };
 
 
@@ -598,6 +600,12 @@
   #ifdef CONFIG_WAVPACK_DECODER
   BUF_AUDIO_WAVPACK,
   #endif
+  #ifdef CONFIG_AMR_NB_DECODER
+  BUF_AUDIO_AMR_NB,
+  #endif
+  #ifdef CONFIG_AMR_WB_DECODER
+  BUF_AUDIO_AMR_WB,
+  #endif
   
   0
 };
diff -Nur xine-lib-1.1.13-old/src/combined/ffmpeg/ff_video_decoder.c xine-lib-1.1.13/src/combined/ffmpeg/ff_video_decoder.c
--- xine-lib-1.1.13-old/src/combined/ffmpeg/ff_video_decoder.c	2008-06-24 15:27:01.000000000 +0300
+++ xine-lib-1.1.13/src/combined/ffmpeg/ff_video_decoder.c	2008-06-24 15:34:15.000000000 +0300
@@ -273,6 +273,10 @@
   {BUF_VIDEO_VP5,         CODEC_ID_VP5,       "On2 VP5 (ffmpeg)"},
   {BUF_VIDEO_VP6,         CODEC_ID_VP6,       "On2 VP6 (ffmpeg)"},
   {BUF_VIDEO_VP6F,        CODEC_ID_VP6F,      "On2 VP6 (ffmpeg)"},
+  {BUF_VIDEO_SNOW,        CODEC_ID_SNOW,      "Snow (ffmpeg)"},
+#ifdef CODEC_ID_DIRAC
+  {BUF_VIDEO_DIRAC,       CODEC_ID_DIRAC,     "Dirac (ffmpeg)"},
+#endif
   {BUF_VIDEO_4XM,         CODEC_ID_4XM,       "4X Video (ffmpeg)"},
   {BUF_VIDEO_CINEPAK,     CODEC_ID_CINEPAK,   "Cinepak (ffmpeg)"},
   {BUF_VIDEO_MSVC,        CODEC_ID_MSVIDEO1,  "Microsoft Video 1 (ffmpeg)"},
@@ -1751,6 +1755,12 @@
   BUF_VIDEO_VP6,
   BUF_VIDEO_VP6F,
   #endif
+  #ifdef CONFIG_SNOW_DECODER
+  BUF_VIDEO_SNOW,
+  #endif
+  #ifdef CONFIG_DIRAC_DECODER
+  BUF_VIDEO_DIRAC,
+  #endif
   #ifdef CONFIG_4XM_DECODER
   BUF_VIDEO_4XM,
   #endif
diff -Nur xine-lib-1.1.13-old/src/xine-engine/buffer.h xine-lib-1.1.13/src/xine-engine/buffer.h
--- xine-lib-1.1.13-old/src/xine-engine/buffer.h	2008-06-24 15:27:01.000000000 +0300
+++ xine-lib-1.1.13/src/xine-engine/buffer.h	2008-06-24 15:34:15.000000000 +0300
@@ -191,6 +191,8 @@
 #define BUF_VIDEO_THEORA_RAW	0x02640000
 #define BUF_VIDEO_VC1		0x02650000
 #define BUF_VIDEO_VMNC		0x02660000
+#define BUF_VIDEO_DIRAC		0x02670000
+#define BUF_VIDEO_SNOW		0x02680000
 
 /* audio buffer types:  (please keep in sync with buffer_types.c) */
 
@@ -259,6 +261,8 @@
 #define BUF_AUDIO_FLVADPCM	0x033C0000
 #define BUF_AUDIO_WAVPACK	0x033D0000
 #define BUF_AUDIO_MP3ADU	0x033E0000
+#define BUF_AUDIO_AMR_NB	0x03F00000
+#define BUF_AUDIO_AMR_WB	0x03F10000
 
 /* spu buffer types:    */
 
diff -Nur xine-lib-1.1.13-old/src/xine-engine/buffer_types.c xine-lib-1.1.13/src/xine-engine/buffer_types.c
--- xine-lib-1.1.13-old/src/xine-engine/buffer_types.c	2008-06-24 15:27:01.000000000 +0300
+++ xine-lib-1.1.13/src/xine-engine/buffer_types.c	2008-06-24 15:34:15.000000000 +0300
@@ -616,6 +616,22 @@
 },
 {
   {
+    ME_FOURCC('S','N','O','W'),
+    0
+  },
+  BUF_VIDEO_SNOW,
+  "Snow"
+},
+{
+  {
+    ME_FOURCC('d','r','a','c'),
+    0
+  },
+  BUF_VIDEO_DIRAC,
+  "Dirac"
+},
+{
+  {
     ME_FOURCC('8','B', 'P','S'),
     0
   },
@@ -1140,10 +1156,35 @@
 },
 {
   {
+    ME_FOURCC('W', 'V', 'P', 'K'),
     0
   },
   BUF_AUDIO_WAVPACK,
-  "Wavpack"
+  "WavPack lossless audio (ffmpeg)"
+},
+{
+  {
+    ME_FOURCC('T', 'T', 'A', '1'),
+    0
+  },
+  BUF_AUDIO_TTA,
+  "TTA (The Lossless True Audio) (ffmpeg)"
+},
+{
+  {
+    ME_FOURCC('s', 'a', 'm', 'r'),
+    0
+  },
+  BUF_AUDIO_AMR_NB,
+  "AMR-NB 3gp (ffmpeg)"
+},
+{
+  {
+    ME_FOURCC('s', 'a', 'w', 'b'),
+    0
+  },
+  BUF_AUDIO_AMR_WB,
+  "AMR-WB 3gp (ffmpeg)"
 },
 { { 0 }, 0, "last entry" }
 };
