Index: kdm/backend/bootman.c
===================================================================
--- kdm/backend/bootman.c.orig
+++ kdm/backend/bootman.c
@@ -137,27 +137,12 @@ commitGrub( void )
 	    setGrub( sdRec.osname, &sdRec ) != BO_OK)
 		return;
 
-	if (grubSetDefault) {
-		/* The grub-set-default command must be used, which is
-		 * not so good because there is no way of setting an
-		 * entry for the next boot only. */
-		char index[16];
-		const char *args[] = { grubSetDefault, index, 0 };
-		sprintf( index, "%d", sdRec.osindex );
-		runAndWait( (char **)args, environ );
-	} else {
-		/* The grub shell can be used with `savedefault'.
-		 * That requires a (widely distributed) patch to grub, e.g.
-		 * grub-0.97-once.patch. It won't work with a vanilla grub.*/
-		FILE *f;
-		int pid;
-		static const char *args[] = { 0, "--batch", "--no-floppy", 0 };
-		args[0] = grub;
-		if ((f = pOpen( (char **)args, 'w', &pid ))) {
-			fprintf( f, "savedefault --default=%d --once\n", sdRec.osindex );
-			pClose( f, &pid );
-		}
-	}
+    /* The grub shell can be used with `savedefault'.
+     * That requires a (widely distributed) patch to grub, e.g.
+     * grub-0.97-once.patch. It won't work with a vanilla grub.*/
+    char buffer[PATH_MAX];
+    snprintf(buffer, PATH_MAX, "/usr/sbin/grubonce %d", sdRec.osindex); 
+    system(buffer);
 }
 
 static char *lilo;
