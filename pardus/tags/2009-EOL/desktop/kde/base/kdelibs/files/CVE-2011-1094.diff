Origin: based on 3735e2eed5e0d59fcb7732258f7e6128e60954b2
Description: Harden SSL verification against poisoned DNS attacks in the case
 of certificates that are issued against an IP address rather than a hostname.
 Patch by Tomas Hoger / Red Hat Security Response Team, reviewed by Jeff
 Mitchell and Richard Moore. (CVE-2011-1094)

Index: kde4libs-4.4.5/kio/kio/tcpslavebase.cpp
===================================================================
--- kde4libs-4.4.5.orig/kio/kio/tcpslavebase.cpp	2011-04-11 09:55:07.000000000 -0500
+++ kde4libs-4.4.5/kio/kio/tcpslavebase.cpp	2011-04-11 10:07:36.000000000 -0500
@@ -490,25 +490,36 @@
     // domain<->certificate matching here.
     d->sslErrors = d->socket.sslErrors();
     QSslCertificate peerCert = d->socket.peerCertificateChain().first();
-    QStringList domainPatterns(peerCert.subjectInfo(QSslCertificate::CommonName));
-    domainPatterns += peerCert.alternateSubjectNames().values(QSsl::DnsEntry);
-    QRegExp domainMatcher(QString(), Qt::CaseInsensitive, QRegExp::Wildcard);
     QMutableListIterator<KSslError> it(d->sslErrors);
     while (it.hasNext()) {
         // As of 4.4.0 Qt does not assign a certificate to the QSslError it emits
         // *in the case of HostNameMismatch*. A HostNameMismatch, however, will always
         // be an error of the peer certificate so we just don't check the error's
         // certificate().
-        if (it.next().error() != KSslError::HostNameMismatch) {
-            continue;
+
+        // Remove all HostNameMismatch, we have to redo name checking later.
+        if (it.next().error() == KSslError::HostNameMismatch) {
+            it.remove();
         }
-        foreach (const QString &dp, domainPatterns) {
-            domainMatcher.setPattern(dp);
-            if (domainMatcher.exactMatch(d->host)) {
-                it.remove();
-            }
+    }
+    // Redo name checking here and (re-)insert HostNameMismatch to sslErrors if
+    // host name does not match any of the names in server certificate.
+    // QSslSocket may not report HostNameMismatch error, when server
+    // certificate was issued for the IP we are connecting to.
+    QStringList domainPatterns(peerCert.subjectInfo(QSslCertificate::CommonName));
+    domainPatterns += peerCert.alternateSubjectNames().values(QSsl::DnsEntry);
+    QRegExp domainMatcher(QString(), Qt::CaseInsensitive, QRegExp::Wildcard);
+    bool names_match = false;
+    foreach (const QString &dp, domainPatterns) {
+        domainMatcher.setPattern(dp);
+        if (domainMatcher.exactMatch(d->host)) {
+            names_match = true;
+            break;
         }
     }
+    if (!names_match) {
+        d->sslErrors.insert(0, KSslError(KSslError::HostNameMismatch, peerCert));
+    }
 
     // The app side needs the metadata now for the SSL error dialog (if any) but
     // the same metadata will be needed later, too. When "later" arrives the slave
