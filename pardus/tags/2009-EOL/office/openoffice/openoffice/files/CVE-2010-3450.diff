Index: ooo-build-3.2.1.3/patches/dev300/tread-invalid-path-segments-correctly.diff
===================================================================
--- /dev/null
+++ ooo-build-3.2.1.3/patches/dev300/tread-invalid-path-segments-correctly.diff
@@ -0,0 +1,201 @@
+
+# HG changeset patch
+# User Mikhail Voytenko <mav@openoffice.org>
+# Date 1281431120 -7200
+# Node ID 1efb7f54e7188baa10e280652b0e4762f55025a9
+# Parent  c85a59971620bc9e04ad689600ee9846f0f9dc18
+mav56: #163253# tread invalid path segments correctly
+
+diff -r c85a59971620 -r 1efb7f54e718 comphelper/inc/comphelper/storagehelper.hxx
+--- comphelper/inc/comphelper/storagehelper.hxx	Mon Jul 26 18:27:06 2010 +0200
++++ comphelper/inc/comphelper/storagehelper.hxx	Tue Aug 10 11:05:20 2010 +0200
+@@ -161,6 +161,8 @@
+ 
+     static sal_Bool IsValidZipEntryFileName( const ::rtl::OUString& aName, sal_Bool bSlashAllowed );
+     static sal_Bool IsValidZipEntryFileName( const sal_Unicode *pChar, sal_Int32 nLength, sal_Bool bSlashAllowed );
++
++    static sal_Bool PathHasSegment( const ::rtl::OUString& aPath, const ::rtl::OUString& aSegment );
+ };
+ 
+ }
+diff -r c85a59971620 -r 1efb7f54e718 comphelper/source/misc/storagehelper.cxx
+--- comphelper/source/misc/storagehelper.cxx	Mon Jul 26 18:27:06 2010 +0200
++++ comphelper/source/misc/storagehelper.cxx	Tue Aug 10 11:05:20 2010 +0200
+@@ -452,5 +452,36 @@
+     return sal_True;
+ }
+ 
++// ----------------------------------------------------------------------
++sal_Bool OStorageHelper::PathHasSegment( const ::rtl::OUString& aPath, const ::rtl::OUString& aSegment )
++{
++    sal_Bool bResult = sal_False;
++    const sal_Int32 nPathLen = aPath.getLength();
++    const sal_Int32 nSegLen = aSegment.getLength();
++
++    if ( nSegLen && nPathLen >= nSegLen )
++    {
++        ::rtl::OUString aEndSegment( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
++        aEndSegment += aSegment;
++
++        ::rtl::OUString aInternalSegment( aEndSegment );
++        aInternalSegment += ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
++
++        if ( aPath.indexOf( aInternalSegment ) >= 0 )
++            bResult = sal_True;
++
++        if ( !bResult && !aPath.compareTo( aSegment, nSegLen ) )
++        {
++            if ( nPathLen == nSegLen || aPath.getStr()[nSegLen] == (sal_Unicode)'/' )
++                bResult = sal_True;
++        }
++
++        if ( !bResult && nPathLen > nSegLen && aPath.copy( nPathLen - nSegLen - 1, nSegLen + 1 ).equals( aEndSegment ) )
++            bResult = sal_True;
++    }
++
++    return bResult;
+ }
+ 
++}
++
+diff -r c85a59971620 -r 1efb7f54e718 filter/source/xsltdialog/xmlfilterjar.cxx
+--- filter/source/xsltdialog/xmlfilterjar.cxx	Mon Jul 26 18:27:06 2010 +0200
++++ filter/source/xsltdialog/xmlfilterjar.cxx	Tue Aug 10 11:05:20 2010 +0200
+@@ -101,6 +101,10 @@
+ 
+ static Reference< XInterface > addFolder( Reference< XInterface >& xRootFolder, Reference< XSingleServiceFactory >& xFactory, const OUString& rName ) throw( Exception )
+ {
++    if ( rName.equals( OUString( RTL_CONSTASCII_USTRINGPARAM( ".." ) ) )
++      || rName.equals( OUString( RTL_CONSTASCII_USTRINGPARAM( "." ) ) ) )
++        throw lang::IllegalArgumentException();
++
+ 	Sequence< Any > aArgs(1);
+ 	aArgs[0] <<= (sal_Bool)sal_True;
+ 
+@@ -362,6 +366,10 @@
+ 	{
+ 		OUString szPackagePath( encodeZipUri( rURL.copy( sVndSunStarPackage.getLength() ) ) );
+ 
++        if ( ::comphelper::OStorageHelper::PathHasSegment( szPackagePath, OUString( RTL_CONSTASCII_USTRINGPARAM( ".." ) ) )
++          || ::comphelper::OStorageHelper::PathHasSegment( szPackagePath, OUString( RTL_CONSTASCII_USTRINGPARAM( "." ) ) ) )
++            throw lang::IllegalArgumentException();
++
+ 		if( xIfc->hasByHierarchicalName( szPackagePath ) )
+ 		{
+ 			Reference< XActiveDataSink > xFileEntry;
+diff -r c85a59971620 -r 1efb7f54e718 ucb/source/ucp/package/makefile.mk
+--- ucb/source/ucp/package/makefile.mk	Mon Jul 26 18:27:06 2010 +0200
++++ ucb/source/ucp/package/makefile.mk	Tue Aug 10 11:05:20 2010 +0200
+@@ -68,6 +68,7 @@
+ SHL1VERSIONMAP=exports.map
+ 
+ SHL1STDLIBS=\
++	$(COMPHELPERLIB) \
+ 	$(CPPUHELPERLIB) \
+ 	$(CPPULIB) \
+ 	$(SALLIB)  \
+diff -r c85a59971620 -r 1efb7f54e718 ucb/source/ucp/package/pkguri.cxx
+--- ucb/source/ucp/package/pkguri.cxx	Mon Jul 26 18:27:06 2010 +0200
++++ ucb/source/ucp/package/pkguri.cxx	Tue Aug 10 11:05:20 2010 +0200
+@@ -36,6 +36,7 @@
+ 
+ #include "rtl/ustrbuf.hxx"
+ #include "osl/diagnose.h"
++#include "comphelper/storagehelper.hxx"
+ 
+ #include "../inc/urihelper.hxx"
+ 
+@@ -85,7 +86,7 @@
+         if ( ( m_aUri.getLength() < PACKAGE_URL_SCHEME_LENGTH + 4 ) )
+         {
+             // error, but remember that we did a init().
+-            m_aPath = rtl::OUString::createFromAscii( "/" );
++            m_aPath = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
+             return;
+         }
+ 
+@@ -100,7 +101,7 @@
+                 != sal_Unicode( '/' ) ) )
+         {
+             // error, but remember that we did a init().
+-            m_aPath = rtl::OUString::createFromAscii( "/" );
++            m_aPath = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
+             return;
+         }
+ 
+@@ -128,8 +129,8 @@
+ 			{
+ 				m_aParam += 
+                     ( m_aParam.getLength() 
+-                      ? ::rtl::OUString::createFromAscii( "&purezip" )
+-                      : ::rtl::OUString::createFromAscii( "?purezip" ) );
++                      ? ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "&purezip" ) )
++                      : ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "?purezip" ) ) );
+ 			}
+ 
+             aPureUri = aPureUri.replaceAt( 0, 
+@@ -143,7 +144,7 @@
+                 // Only <scheme>:/// - Empty authority
+ 
+                 // error, but remember that we did a init().
+-                m_aPath = rtl::OUString::createFromAscii( "/" );
++                m_aPath = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
+                 return;
+             }
+             else if ( nEnd == ( aPureUri.getLength() - 1 ) )
+@@ -154,7 +155,7 @@
+                     // Only <scheme>://// or <scheme>://<something>//
+ 
+                     // error, but remember that we did a init().
+-                    m_aPath = rtl::OUString::createFromAscii( "/" );
++                    m_aPath = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
+                     return;
+                 }
+ 
+@@ -175,7 +176,7 @@
+                     nStart, aPureUri.getLength() - nStart, aNormPackage );
+                 m_aPackage 
+                     = ::ucb_impl::urihelper::decodeSegment( aNormPackage );
+-                m_aPath = rtl::OUString::createFromAscii( "/" );
++                m_aPath = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
+ 				m_aUri = m_aUri.replaceAt( 0, 
+                                            ( nParam >= 0 ) 
+                                            ? nParam 
+@@ -193,16 +194,19 @@
+             {
+                 m_aPath = aPureUri.copy( nEnd + 1 );
+ 
+-                // Empty path segments or encoded slashes?
+-                if ( m_aPath.indexOf( 
+-                         rtl::OUString::createFromAscii( "//" ) ) != -1
+-                  || m_aPath.indexOf( 
+-                      rtl::OUString::createFromAscii( "%2F" ) ) != -1
+-                  || m_aPath.indexOf( 
+-                      rtl::OUString::createFromAscii( "%2f" ) ) != -1 )
++                // Unexpected sequences of characters:
++                // - empty path segments
++                // - encoded slashes
++                // - parent folder segments ".."
++                // - current folder segments "."
++                if ( m_aPath.indexOf( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "//" ) ) ) != -1
++                  || m_aPath.indexOf( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "%2F" ) ) ) != -1
++                  || m_aPath.indexOf( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "%2f" ) ) ) != -1 
++                  || ::comphelper::OStorageHelper::PathHasSegment( m_aPath, ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".." ) ) )
++                  || ::comphelper::OStorageHelper::PathHasSegment( m_aPath, ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "." ) ) ) )
+                 {
+                     // error, but remember that we did a init().
+-                    m_aPath = rtl::OUString::createFromAscii( "/" );
++                    m_aPath = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
+                     return;
+                 }
+ 
+@@ -239,7 +243,7 @@
+         else
+         {
+             // error, but remember that we did a init().
+-            m_aPath = rtl::OUString::createFromAscii( "/" );
++            m_aPath = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/" ) );
+         }
+     }
+ }
+
Index: ooo-build-3.2.1.3/patches/dev300/apply
===================================================================
--- ooo-build-3.2.1.3.orig/patches/dev300/apply
+++ ooo-build-3.2.1.3/patches/dev300/apply
@@ -4112,6 +4112,7 @@ transogl-transitions-newsflash-pptin.dif
 
 [ Security ]
 SA40775.diff
+tread-invalid-path-segments-correctly.diff
 
 [ CalcExperimental ]
 SectionOwner => kohei
