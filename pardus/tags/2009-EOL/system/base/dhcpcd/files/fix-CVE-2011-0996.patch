commit c317b39786ac6c3a939dc711db7c78cf099859fd
Author: Roy Marples <roy@marples.name>
Date:   Wed Apr 6 09:16:32 2011 +0100

    Escape | and & characters when passing to the shell.
    Add functions for hooks to check validity of domain names and paths.
    Ensure we set a valid hostname, DNS domain and NIS domain.
    Document the need for input validation in dhcpcd-run-hooks(8).
    
    Fixes CVE-2011-996.
    Based on patches to dhcpcd-3 by Marius Tomaschewski <mt@suse.de>.

Index: dhcpcd-5.1.5/dhcp.c
===================================================================
--- dhcpcd-5.1.5.orig/dhcp.c
+++ dhcpcd-5.1.5/dhcp.c
@@ -1139,7 +1139,9 @@ print_string(char *s, ssize_t len, int d
 		case '\'': /* FALLTHROUGH */
 		case '$':  /* FALLTHROUGH */
 		case '`':  /* FALLTHROUGH */
- 		case '\\':
+ 		case '\\': /* FALLTHROUGH */
+		case '|':  /* FALLTHROUGH */
+		case '&':
 			if (s) {
 				if (len < 3) {
 					errno = ENOBUFS;
Index: dhcpcd-5.1.5/dhcpcd-hooks/20-resolv.conf
===================================================================
--- dhcpcd-5.1.5.orig/dhcpcd-hooks/20-resolv.conf
+++ dhcpcd-5.1.5/dhcpcd-hooks/20-resolv.conf
@@ -81,14 +81,22 @@ add_resolv_conf()
 	if [ -n "$new_domain_name" ]; then
 		set -- $new_domain_name
 		new_domain_name="$1"
-		conf="${conf}domain $new_domain_name\n"
+		if valid_domainname "$new_domain_name"; then
+			conf="${conf}domain $new_domain_name\n"
+		else
+			syslog err "Invalid domain name: $new_domain_name"
+		fi
 		# Support RFC violating search in domain
 		if [ -z "$new_domain_search" -a -n "$2" ]; then
 			new_domain_search="$@"
 		fi
 	fi
 	if [ -n "$new_domain_search" ]; then
-		conf="${conf}search $new_domain_search\n"
+		if valid_domainname_list; then
+			conf="${conf}search $new_domain_search\n"
+		else
+			syslog err "Invalid domain name in list: $new_domain_search"
+		fi
 	fi
 	for x in ${new_domain_name_servers}; do
 		conf="${conf}nameserver $x\n"
Index: dhcpcd-5.1.5/dhcpcd-hooks/30-hostname
===================================================================
--- dhcpcd-5.1.5.orig/dhcpcd-hooks/30-hostname
+++ dhcpcd-5.1.5/dhcpcd-hooks/30-hostname
@@ -18,13 +18,22 @@ need_hostname()
 	esac
 }
 
+try_hostname()
+{
+	if valid_domainname "$1"; then
+		hostname "$1"
+	else
+		syslog err "Invalid hostname: $1"
+	fi
+}
+
 set_hostname()
 {
 	if need_hostname; then
 		if [ -n "$new_host_name" ]; then
-			hostname "$new_host_name"
+			try_hostname "$new_host_name"
 		elif [ -n "$new_fqdn_name" ]; then
-			hostname "$new_fqdn_name"
+			try_hostname "$new_fqdn_name"
 		fi
 	fi
 }
Index: dhcpcd-5.1.5/dhcpcd-hooks/50-yp.conf
===================================================================
--- dhcpcd-5.1.5.orig/dhcpcd-hooks/50-yp.conf
+++ dhcpcd-5.1.5/dhcpcd-hooks/50-yp.conf
@@ -13,6 +13,11 @@ make_yp_conf()
 	rm -f "$cf"
 	echo "$signature" > "$cf"
 	if [ -n "$new_nis_domain" ]; then
+		if ! valid_domainname "$new_nis_domain"; then
+			syslog err "Invalid NIS domain name: $new_nis_domain"
+			rm -f "$cf"
+			return 1
+		fi
 		domainname "$new_nis_domain"
 		if [ -n "$new_nis_servers" ]; then
 			prefix="domain $new_nis_domain server "
Index: dhcpcd-5.1.5/dhcpcd-hooks/50-ypbind
===================================================================
--- dhcpcd-5.1.5.orig/dhcpcd-hooks/50-ypbind
+++ dhcpcd-5.1.5/dhcpcd-hooks/50-ypbind
@@ -78,7 +78,11 @@ TEST)
 	;;
 *)
 	if [ -n "$new_nis_domain" ]; then
-		make_yp_binding
+		if valid_domainname "$new_nis_domain"; then
+			make_yp_binding
+		else
+			syslog err "Invalid NIS domain name: $new_nis_domain"
+		fi
 	elif [ -n "$old_nis_domain" ]; then
 		restore_yp_binding
 	fi
Index: dhcpcd-5.1.5/dhcpcd-run-hooks.8.in
===================================================================
--- dhcpcd-5.1.5.orig/dhcpcd-run-hooks.8.in
+++ dhcpcd-5.1.5/dhcpcd-run-hooks.8.in
@@ -131,3 +131,11 @@ in a lexical order and then finally
 .An Roy Marples Aq roy@marples.name
 .Sh BUGS
 Please report them to http://roy.marples.name/projects/dhcpcd
+.Sh SECURITY CONSIDERATIONS
+Little validation of DHCP options is done in dhcpcd itself.
+Instead, it is up to the hooks to handle any validation needed.
+To this end, some helper functions are provided, such as valid_domainname as
+used by the
+.Pa 20-resolv.conf
+hook to ensure that the hostname is not set to an invalid value.
+valid_path is also provided, but is currently unused by a stock hook script.
Index: dhcpcd-5.1.5/dhcpcd-run-hooks.in
===================================================================
--- dhcpcd-5.1.5.orig/dhcpcd-run-hooks.in
+++ dhcpcd-5.1.5/dhcpcd-run-hooks.in
@@ -138,6 +138,46 @@ syslog()
 	fi
 }
 
+# Check for a valid domain name as per RFC1123 with the exception of
+# allowing - and _ as they seem to be widely used.
+valid_domainname()
+{
+	local name="$1" label
+
+	[ -z "$name" -o ${#name} -gt 255 ] && return 1
+	
+	while [ -n "$name" ]; do
+		label="${name%%.*}"
+		[ -z "$label" -o ${#label} -gt 63 ] && return 1
+		case "$label" in
+		-*|_*|*-|*_)		return 1;;
+		*[![:alnum:]-_]*)	return 1;;
+		esac
+		[ "$name" = "${name#*.}" ] && break
+		name="${name#*.}"
+	done
+	return 0	
+}
+
+valid_domainname_list()
+{
+	local name
+
+	for name in $@; do
+		valid_domainname "$name" || return $?
+	done
+	return 0
+}
+
+# Check for a valid path
+valid_path()
+{
+	case "$@" in
+	*[![:alnum:]#%+-_:\.,@~\\/\[\]=\ ]*) return 1;;
+	esac
+	return 0
+}
+
 
 # We source each script into this one so that scripts run earlier can
 # remove variables from the environment so later scripts don't see them.
