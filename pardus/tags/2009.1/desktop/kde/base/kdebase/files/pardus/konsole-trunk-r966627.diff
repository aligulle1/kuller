diff -Naur konsole/data/color-schemes/DarkPastels.colorscheme konsole/data/color-schemes/DarkPastels.colorscheme
--- konsole/data/color-schemes/DarkPastels.colorscheme	2008-04-23 18:51:23.000000000 +0300
+++ apps/konsole/data/color-schemes/DarkPastels.colorscheme	2009-02-06 01:28:32.437869000 +0200
@@ -1,11 +1,11 @@
 [Background]
 Bold=false
-Color=63,63,63
+Color=44,44,44
 Transparency=false
 
 [BackgroundIntense]
 Bold=true
-Color=63,63,63
+Color=44,44,44
 Transparency=false
 
 [Color0]
diff -Naur konsole/data/profiles/Shell.profile konsole/data/profiles/Shell.profile
--- konsole/data/profiles/Shell.profile	2009-05-23 12:55:04.819975663 +0300
+++ apps/konsole/data/profiles/Shell.profile	2009-05-11 20:12:40.745237000 +0300
@@ -8,6 +8,7 @@
 Name[bn]=শেল
 Name[bn_IN]=শেল
 Name[ca]=Intèrpret d'ordres
+Name[ca@valencia]=Intèrpret d'ordes
 Name[csb]=Pòwłoka
 Name[cy]=Plisgyn
 Name[da]=Skal
@@ -59,8 +60,8 @@
 Name[uk]=Оболонка
 Name[uz]=Terminal
 Name[uz@cyrillic]=Терминал
-Name[x-test]=xxShellxx
 Name[xh]=Iqokobhe
+Name[x-test]=xxShellxx
 Comment=Konsole default profile
 Comment[af]=Konsole verstekprofiel
 Comment[ar]=لوحة الإعدادات المبدئية
@@ -70,6 +71,7 @@
 Comment[bn]=কনসোল ডিফল্ট প্রোফাইল
 Comment[bn_IN]=Konsole-র ডিফল্ট প্রোফাইল
 Comment[ca]=Perfil per omissió del Konsole
+Comment[ca@valencia]=Perfil per omissió del Konsole
 Comment[cs]=Výchozí profil Konsole
 Comment[csb]=Domëszlny profil Kònsolë
 Comment[da]=Standardprofil for Konsole
@@ -112,7 +114,7 @@
 Comment[pl]=Domyślny profil Konsoli
 Comment[pt]=Perfil predefinido do Konsole
 Comment[pt_BR]=Perfil padrão do Konsole
-Comment[ro]=Profil consolă implicit
+Comment[ro]=Profil konsolă implicit
 Comment[ru]=Стандартный профиль Konsole
 Comment[se]=Konsolla standárdprofiila
 Comment[sk]=Štandardný profil Konsole
diff -Naur konsole/desktop/konsole.desktop konsole/desktop/konsole.desktop
--- konsole/desktop/konsole.desktop	2009-03-26 17:42:42.000000000 +0300
+++ apps/konsole/desktop/konsole.desktop	2009-03-08 16:36:22.684942000 +0200
@@ -94,6 +94,5 @@
 GenericName[zh_CN]=终端
 GenericName[zh_TW]=終端機
 X-DBUS-StartupType=Unique
-X-DBUS-ServiceName=org.kde.konsole
 X-KDE-AuthorizeAction=shell_access
 Categories=Qt;KDE;System;TerminalEmulator;
diff -Naur konsole/desktop/konsolehere.desktop konsole/desktop/konsolehere.desktop
--- konsole/desktop/konsolehere.desktop	2009-03-26 17:42:42.000000000 +0300
+++ apps/konsole/desktop/konsolehere.desktop	2009-05-11 20:12:40.745237000 +0300
@@ -15,6 +15,7 @@
 Name[bn_IN]=এইস্থানে টার্মিন্যাল আরম্ভ করুন
 Name[br]=Digeriñ un termenell amañ
 Name[ca]=Obre un terminal aquí
+Name[ca@valencia]=Obri un terminal ací
 Name[cs]=Otevřít terminál zde
 Name[csb]=Òtemkni tuwò terminal
 Name[cy]=Agor Terfynell Yma
@@ -83,8 +84,8 @@
 Name[uz@cyrillic]=Терминални шу ерда очиш
 Name[vi]=Mở cửa sổ dòng lệnh ở đây
 Name[wa]=Drovi on terminå chal
-Name[x-test]=xxOpen Terminal Herexx
 Name[xh]=Vula Isiphelo Sendlela Apha
+Name[x-test]=xxOpen Terminal Herexx
 Name[zh_CN]=在此打开终端
 Name[zh_TW]=在這裡開啟終端機
 Icon=utilities-terminal
diff -Naur konsole/desktop/konsole.notifyrc konsole/desktop/konsole.notifyrc
--- konsole/desktop/konsole.notifyrc	2009-03-26 17:42:42.000000000 +0300
+++ apps/konsole/desktop/konsole.notifyrc	2009-03-17 17:51:17.360135000 +0200
@@ -5,6 +5,7 @@
 Comment[bg]=Конзола
 Comment[bn]=কনসোল
 Comment[ca]=Consola
+Comment[ca@valencia]=Consola
 Comment[csb]=Kònsola
 Comment[da]=Konsol
 Comment[et]=Konsool
@@ -48,6 +49,7 @@
 Name[bn]=প্রদর্শিত সেশন-এ ঘণ্টা
 Name[bn_IN]=দৃশ্যমান সেশানের ঘন্টাধ্বনি
 Name[ca]=Timbre en una sessió visible
+Name[ca@valencia]=Timbre en una sessió visible
 Name[cs]=Zvonek ve viditelné relaci
 Name[csb]=Zwónk w widzawny sesëji
 Name[da]=Bip i synlig session
@@ -114,6 +116,7 @@
 Comment[bn]=একটি দৃশ্যমান সেশন-এ ঘণ্টা বেজেছে
 Comment[bn_IN]=দৃশ্যমান সেশানের মধ্যে যে ঘন্টাধ্বনি বাজানো হয়
 Comment[ca]=Timbre emès en una sessió visible
+Comment[ca@valencia]=Timbre emès en una sessió visible
 Comment[cs]=Zvonek ve viditelné relaci
 Comment[csb]=Zwónk jaczi zwãczi w widzawny sesëji
 Comment[cy]=Gollyngwyd cloch mewn sesiwn gweledig
@@ -189,6 +192,7 @@
 Name[bn]=আবৃত সেশন-এ ঘণ্টা
 Name[bn_IN]=অদৃশ্য সেশানের মধ্যে যে ঘন্টাধ্বনি বাজানো হয়
 Name[ca]=Timbre en una sessió no visible
+Name[ca@valencia]=Timbre en una sessió no visible
 Name[cs]=Zvonek ve skryté relaci
 Name[csb]=Zwónk w niewidzawny sesëji
 Name[da]=Bip i ikke-synlig session
@@ -255,6 +259,7 @@
 Comment[bn]=একটি অদৃশ্য সেশন-এ ঘণ্টা বেজেছে
 Comment[bn_IN]=অদৃশ্য সেশানের ঘন্টাধ্বনি
 Comment[ca]=Timbre emès en una sessió no visible
+Comment[ca@valencia]=Timbre emès en una sessió no visible
 Comment[cs]=Zvonek ve skryté relaci
 Comment[csb]=Zwónk jaczi zwãczi w niewidzawny sesëji
 Comment[cy]=Gollyngwyd cloch mewn sesiwn anweledig
@@ -332,6 +337,7 @@
 Name[bn]=মনিটর করা সেশন-এ ঘটনা
 Name[bn_IN]=নিরীক্ষণ হওয়া সেশানের মধ্যে কর্ম
 Name[ca]=Activitat en una sessió controlada
+Name[ca@valencia]=Activitat en una sessió controlada
 Name[cs]=Aktivita v monitorované relaci
 Name[csb]=Aktiwnota w mònitorowóny sesëji
 Name[da]=Aktivitet i overvåget session
@@ -399,6 +405,7 @@
 Comment[bn]=মনিটর করা একটি সেশন-এ কিছু ঘটেছে
 Comment[bn_IN]=নিরীক্ষণ হওয়া সেশানের মধ্যে সনাক্ত করা কর্ম
 Comment[ca]=Activitat detectada en una sessió controlada
+Comment[ca@valencia]=Activitat detectada en una sessió controlada
 Comment[cs]=Detekována aktivita v monitorované relaci
 Comment[csb]=Aktiwnota ùstalonô w mònitorowóny sesëji
 Comment[cy]=Datgelwyd gweithgaredd mewn seswin wedi'i fonitro
@@ -474,6 +481,7 @@
 Name[bn]=মনিটর করা সেশন চুপচাপ
 Name[bn_IN]=নিরীক্ষণ হওয়া সেশানের মধ্যে নৈঃশব্দ্য
 Name[ca]=Silenci en una sessió controlada
+Name[ca@valencia]=Silenci en una sessió controlada
 Name[cs]=Ticho v monitorované relaci
 Name[csb]=Niżódnô aktiwnota w mònitorowóny sesëji
 Name[da]=Inaktivitetet i overvåget session
@@ -540,6 +548,7 @@
 Comment[bn]=মনিটর করা একটি সেশন-এ কিছু ঘটছে না
 Comment[bn_IN]=নিরীক্ষণ হওয়া সেশানের মধ্যে সনাক্ত হওয়া নৈঃশব্দ্য
 Comment[ca]=Silenci detectat en una sessió controlada
+Comment[ca@valencia]=Silenci detectat en una sessió controlada
 Comment[cs]=Detekováno ticho v monitorované relaci
 Comment[csb]=Aktiwnota nie ósta ùstalonô w mònitorowóny sesëji
 Comment[cy]=Datgelwyd distawrwydd mewn sesiwn wedi'i fonitro
@@ -614,6 +623,7 @@
 Name[bn]=সেশন নন-জিরো স্ট্যাটাস সমেত সমাপ্ত
 Name[bn_IN]=শূণ্য ভিন্ন অন্য মানসহ সেশান সমাপ্তি
 Name[ca]=Sessió finalitzada amb un estat diferent de zero
+Name[ca@valencia]=Sessió finalitzada amb un estat diferent de zero
 Name[cs]=Relace ukončena nenulovým stavem
 Name[csb]=Zakùńczonô sesëjô z niezerowim sztatusã
 Name[da]=Session afsluttet med ikke-nul status
@@ -683,6 +693,7 @@
 Comment[bn]=একটি সেশন নন-জিরো স্ট্যাটাস সমেত সমাপ্ত হয়েছে
 Comment[bn_IN]=শূণ্য ভিন্ন অন্য মান উৎপন্ন করে সেশান সমাপ্ত হয়েছে
 Comment[ca]=Una sessió ha finalitzat amb un estat diferent de zero
+Comment[ca@valencia]=Una sessió ha finalitzat amb un estat diferent de zero
 Comment[cs]=Relace byla ukončena nenulovým stavem
 Comment[csb]=Sesëjô z niezerowim sztatusã òsta zakùńczonô
 Comment[cy]=Terfynnodd sesiwn efo cyflwr di-sero
diff -Naur konsole/desktop/konsolepart.desktop konsole/desktop/konsolepart.desktop
--- konsole/desktop/konsolepart.desktop	2009-03-26 17:42:42.000000000 +0300
+++ apps/konsole/desktop/konsolepart.desktop	2009-05-11 20:12:40.745237000 +0300
@@ -20,10 +20,11 @@
 Name[bn_IN]=টার্মিন্যাল এমুলেটর
 Name[br]=Kendarvanerezh termenell
 Name[ca]=Emulador de terminal
+Name[ca@valencia]=Emulador de terminal
 Name[cs]=Emulátor terminálu
 Name[csb]=Emùlator terminala
 Name[cy]=Efelychydd Terfynell
-Name[da]=terminalemulator
+Name[da]=Terminalemulator
 Name[de]=Terminal-Emulator
 Name[el]=Προσομοιωτής τερματικού
 Name[eo]=Terminala imitilo
@@ -87,8 +88,8 @@
 Name[uz@cyrillic]=Терминал эмулятори
 Name[vi]=Mô phỏng thiết bị cuối
 Name[wa]=Programes terminås
-Name[x-test]=xxTerminal Emulatorxx
 Name[xh]=Umzami kulinganisela ngokulinganayo Wendlela yesiphelo
+Name[x-test]=xxTerminal Emulatorxx
 Name[zh_CN]=终端仿真器
 Name[zh_TW]=終端機模擬程式
 X-KDE-AuthorizeAction=shell_access
diff -Naur konsole/desktop/quick-access-konsole.desktop konsole/desktop/quick-access-konsole.desktop
--- konsole/desktop/quick-access-konsole.desktop	2009-02-26 16:16:38.000000000 +0200
+++ apps/konsole/desktop/quick-access-konsole.desktop	2009-03-17 17:51:17.360135000 +0200
@@ -16,6 +16,7 @@
 Name[bn]=চটপট টার্মিনাল
 Name[bn_IN]=দ্রুত ব্যবহারের টার্মিন্যাল
 Name[ca]=Terminal d'accés ràpid
+Name[ca@valencia]=Terminal d'accés ràpid
 Name[cs]=Rychlý přístup k terminálu
 Name[csb]=Terminal chùtczegò przëstãpù
 Name[da]=Terminal med lynadgang
diff -Naur konsole/desktop/terminalemulator.desktop konsole/desktop/terminalemulator.desktop
--- konsole/desktop/terminalemulator.desktop	2009-03-26 17:42:42.000000000 +0300
+++ apps/konsole/desktop/terminalemulator.desktop	2009-05-11 20:12:40.745237000 +0300
@@ -12,10 +12,11 @@
 Name[bn_IN]=টার্মিন্যাল এমুলেটর
 Name[br]=Kendarvanerezh termenell
 Name[ca]=Emulador de terminal
+Name[ca@valencia]=Emulador de terminal
 Name[cs]=Emulátor terminálu
 Name[csb]=Emùlator terminala
 Name[cy]=Efelychydd Terfynell
-Name[da]=terminalemulator
+Name[da]=Terminalemulator
 Name[de]=Terminal-Emulator
 Name[el]=Προσομοιωτής τερματικού
 Name[eo]=Terminala imitilo
@@ -79,7 +80,7 @@
 Name[uz@cyrillic]=Терминал эмулятори
 Name[vi]=Mô phỏng thiết bị cuối
 Name[wa]=Programes terminås
-Name[x-test]=xxTerminal Emulatorxx
 Name[xh]=Umzami kulinganisela ngokulinganayo Wendlela yesiphelo
+Name[x-test]=xxTerminal Emulatorxx
 Name[zh_CN]=终端仿真器
 Name[zh_TW]=終端機模擬程式
diff -Naur konsole/src/Application.cpp konsole/src/Application.cpp
--- konsole/src/Application.cpp	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/Application.cpp	2009-03-29 14:12:57.889434000 +0300
@@ -321,11 +321,3 @@
 
 #include "Application.moc"
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/BookmarkHandler.h konsole/src/BookmarkHandler.h
--- konsole/src/BookmarkHandler.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/BookmarkHandler.h	2009-04-20 18:42:12.995312000 +0300
@@ -30,6 +30,9 @@
 // KDE
 #include <KBookmarkManager>
 
+// Konsole
+#include "konsole_export.h"
+
 class KMenu;
 class KBookmarkMenu;
 class KBookmarkManager;
@@ -51,7 +54,7 @@
  *
  * When the user selects a bookmark, the openUrl() signal is emitted.
  */
-class BookmarkHandler : public QObject, public KBookmarkOwner
+class KONSOLEPRIVATE_EXPORT BookmarkHandler : public QObject, public KBookmarkOwner
 {
     Q_OBJECT
 
@@ -63,6 +66,7 @@
      * @param collection The collection which the boomark menu's actions should be added to
      * @param menu The menu which the bookmark actions should be added to
      * @param toplevel TODO: Document me
+     * @param parent TODO: Document me
      */
     BookmarkHandler( KActionCollection* collection , KMenu* menu, bool toplevel , QObject* parent );
     ~BookmarkHandler();
@@ -97,7 +101,6 @@
      * Emitted when the user selects a bookmark from the bookmark menu.
      *
      * @param url The url of the bookmark which was selected by the user.
-     * @param text TODO: Document me
      */
     void openUrl( const KUrl& url ); 
 
diff -Naur konsole/src/CharacterColor.h konsole/src/CharacterColor.h
--- konsole/src/CharacterColor.h	2009-01-17 12:59:32.000000000 +0200
+++ apps/konsole/src/CharacterColor.h	2009-04-20 18:11:50.639400000 +0300
@@ -66,7 +66,7 @@
    *
    * @param c The color value for this entry.
    * @param tr Specifies that the color should be transparent when used as a background color.
-   * @param b Specifies that text drawn with this color should be bold.
+   * @param weight Specifies the font weight to use when drawing text with this color. 
    */
   ColorEntry(QColor c, bool tr, FontWeight weight = UseCurrentFormat) 
           : color(c), transparent(tr), fontWeight(weight) {}
@@ -213,7 +213,7 @@
   void toggleIntensive();
 
   /** 
-   * Returns the color within the specified color @palette
+   * Returns the color within the specified color @p palette
    *
    * The @p palette is only used if this color is one of the 16 system colors, otherwise
    * it is ignored.
diff -Naur konsole/src/CMakeLists.txt konsole/src/CMakeLists.txt
--- konsole/src/CMakeLists.txt	2008-12-21 22:19:39.000000000 +0200
+++ apps/konsole/src/CMakeLists.txt	2009-03-20 16:42:59.553370000 +0200
@@ -27,14 +27,22 @@
     endif(KONSOLE_GENERATE_LINEFONT)
 
 ### Konsole source files shared between embedded terminal and main application
+    # qdbuscpp2xml -m  Session.h -o org.kde.konsole.Session.xml
+    # qdbuscpp2xml -M -s ViewManager.h -o org.kde.konsole.Konsole.xml
 
     qt4_add_dbus_adaptor( sessionadaptors_SRCS
                           org.kde.konsole.Session.xml
                           Session.h
                           Konsole::Session )
+    qt4_add_dbus_adaptor( konsoleadaptors_SRCS 
+                          org.kde.konsole.Konsole.xml 
+                          ViewManager.h 
+                          Konsole::ViewManager )
 
-    set(konsole_COMMON_SRCS
+
+    set(konsoleprivate_SRCS
         ${sessionadaptors_SRCS}
+        ${konsoleadaptors_SRCS}
         BlockArray.cpp
         BookmarkHandler.cpp
         ColorScheme.cpp
@@ -95,14 +103,7 @@
 
 ### Konsole Application
 
-    set(konsole_KDEINIT_SRCS
-        ${konsole_COMMON_SRCS}
-        Application.cpp
-        MainWindow.cpp
-        main.cpp
-    )
-
-    kde4_add_ui_files(konsole_KDEINIT_SRCS
+    kde4_add_ui_files(konsoleprivate_SRCS
                   ColorSchemeEditor.ui
                   CopyInputDialog.ui
                   EditProfileDialog.ui
@@ -111,11 +112,22 @@
                   RemoteConnectionDialog.ui
                  )
 
+    kde4_add_library(konsoleprivate SHARED ${konsoleprivate_SRCS})
+    target_link_libraries(konsoleprivate ${konsole_LIBS})
+    target_link_libraries(konsoleprivate LINK_INTERFACE_LIBRARIES ${konsole_LIBS})
+
+    set(konsole_KDEINIT_SRCS
+        Application.cpp
+        MainWindow.cpp
+        main.cpp
+    )
+
+    kde4_add_app_icon(konsole_KDEINIT_SRCS "${KDE4_ICON_INSTALL_DIR}/oxygen/*/apps/utilities-terminal.png")
+
     kde4_add_kdeinit_executable( konsole ${konsole_KDEINIT_SRCS})
-    target_link_libraries(kdeinit_konsole ${konsole_LIBS})
+    target_link_libraries(kdeinit_konsole konsoleprivate)
 
-    install(TARGETS kdeinit_konsole  ${INSTALL_TARGETS_DEFAULT_ARGS} )
-    install(TARGETS konsole          ${INSTALL_TARGETS_DEFAULT_ARGS})
+    install(TARGETS kdeinit_konsole konsole konsoleprivate ${INSTALL_TARGETS_DEFAULT_ARGS})
 
 ### Embedded Konsole KPart
 
@@ -126,7 +138,7 @@
 
     kde4_add_plugin(konsolepart WITH_PREFIX ${konsolepart_PART_SRCS})
     set_target_properties(konsolepart PROPERTIES DEFINE_SYMBOL KONSOLE_PART)
-    target_link_libraries(konsolepart ${KDE4_KPARTS_LIBS} ${konsole_LIBS})
+    target_link_libraries(konsolepart ${KDE4_KPARTS_LIBS} konsoleprivate)
     install(TARGETS konsolepart  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
 ### konsoleprofile command-line tool
diff -Naur konsole/src/ColorScheme.cpp konsole/src/ColorScheme.cpp
--- konsole/src/ColorScheme.cpp	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/ColorScheme.cpp	2009-04-12 05:02:20.281126000 +0300
@@ -427,18 +427,18 @@
     while ( !_device->atEnd() )
     {
         QString line(_device->readLine());
-        line.replace(comment,QString());
+        line.remove(comment);
         line = line.simplified();
 
         if ( line.isEmpty() )
             continue;
 
-        if ( line.startsWith("color") )
+        if ( line.startsWith(QLatin1String("color")) )
         {
             if (!readColorLine(line,scheme))
                 kWarning() << "Failed to read KDE 3 color scheme line" << line;
         }
-        else if ( line.startsWith("title") )
+        else if ( line.startsWith(QLatin1String("title")) )
         {
             if (!readTitleLine(line,scheme))
                 kWarning() << "Failed to read KDE 3 color scheme title line" << line;
@@ -488,7 +488,7 @@
 }
 bool KDE3ColorSchemeReader::readTitleLine(const QString& line,ColorScheme* scheme)
 {
-    if( !line.startsWith("title") )
+    if( !line.startsWith(QLatin1String("title")) )
         return false;
 
     int spacePos = line.indexOf(' ');
@@ -556,7 +556,7 @@
 bool ColorSchemeManager::loadKDE3ColorScheme(const QString& filePath)
 {
     QFile file(filePath);
-    if (!filePath.endsWith(".schema") || !file.open(QIODevice::ReadOnly))
+    if (!filePath.endsWith(QLatin1String(".schema")) || !file.open(QIODevice::ReadOnly))
         return false;
 
     KDE3ColorSchemeReader reader(&file);
@@ -596,7 +596,7 @@
 }
 bool ColorSchemeManager::loadColorScheme(const QString& filePath)
 {
-    if ( !filePath.endsWith(".colorscheme") || !QFile::exists(filePath) )
+    if ( !filePath.endsWith(QLatin1String(".colorscheme")) || !QFile::exists(filePath) )
         return false;
 
     QFileInfo info(filePath);
diff -Naur konsole/src/ColorSchemeEditor.cpp konsole/src/ColorSchemeEditor.cpp
--- konsole/src/ColorSchemeEditor.cpp	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/ColorSchemeEditor.cpp	2009-01-18 02:39:09.788508000 +0200
@@ -161,7 +161,7 @@
     setupColorTable(_colors);
 
     // setup transparency slider
-    const int transparencyPercent = (int) ( (1-_colors->opacity())*100 );
+    const int transparencyPercent = qRound( (1-_colors->opacity())*100 );
     
     _ui->transparencySlider->setValue(transparencyPercent);
     setTransparencyPercentLabel(transparencyPercent);
diff -Naur konsole/src/EditProfileDialog.cpp konsole/src/EditProfileDialog.cpp
--- konsole/src/EditProfileDialog.cpp	2009-05-23 12:55:04.838975699 +0300
+++ apps/konsole/src/EditProfileDialog.cpp	2009-04-17 17:36:52.683265000 +0300
@@ -146,9 +146,7 @@
     if (group && group->profiles().count() > 1)
     {
         QString caption = groupProfileNames(group,MAX_GROUP_CAPTION_LENGTH); 
-        setCaption( i18n("Edit Profile \"%1\"",caption) );
-        // STRINGFREEZE - Change caption for groups after KDE 4.1 is released
-        // setCaption( i18n("Editing %1 profiles",group->profiles().count()) )
+         setCaption( i18n("Editing %1 profiles: %2",group->profiles().count(), caption) );
     }
     else
         setCaption( i18n("Edit Profile \"%1\"",profile->name()) );
diff -Naur konsole/src/EditProfileDialog.h konsole/src/EditProfileDialog.h
--- konsole/src/EditProfileDialog.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/EditProfileDialog.h	2009-04-14 19:05:34.282445000 +0300
@@ -61,7 +61,7 @@
  * the persistant argument set to false.  These changes are then
  * un-done when the dialog is closed.
  */
-class EditProfileDialog : public KDialog
+class KONSOLEPRIVATE_EXPORT EditProfileDialog : public KDialog
 {
 Q_OBJECT
 
@@ -77,7 +77,7 @@
      * When the dialog closes, the profile will be updated in the SessionManager
      * with the altered settings.
      *
-     * @param key The key for the session type provided by the SessionManager instance
+     * @param profile The profile to be edited
      */
     void setProfile(Profile::Ptr profile);
 
diff -Naur konsole/src/Emulation.cpp konsole/src/Emulation.cpp
--- konsole/src/Emulation.cpp	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/Emulation.cpp	2009-01-18 23:30:24.522100000 +0200
@@ -160,6 +160,10 @@
 void Emulation::setKeyBindings(const QString& name)
 {
   _keyTranslator = KeyboardTranslatorManager::instance()->findTranslator(name);
+  if (!_keyTranslator)
+  {
+      _keyTranslator = KeyboardTranslatorManager::instance()->defaultTranslator();
+  }
 }
 
 QString Emulation::keyBindings() const
diff -Naur konsole/src/Emulation.h konsole/src/Emulation.h
--- konsole/src/Emulation.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/Emulation.h	2009-04-20 18:11:50.639400000 +0300
@@ -33,6 +33,8 @@
 #include <QtCore/QTextStream>
 #include <QtCore/QTimer>
 
+// Konsole
+#include "konsole_export.h"
 
 namespace Konsole
 {
@@ -117,7 +119,7 @@
  * how long the emulation has been active/idle for and also respond to
  * a 'bell' event in different ways.
  */
-class Emulation : public QObject
+class KONSOLEPRIVATE_EXPORT Emulation : public QObject
 { 
 Q_OBJECT
 
@@ -164,7 +166,8 @@
    * @param decoder A decoder which converts lines of terminal characters with 
    * appearance attributes into output text.  PlainTextDecoder is the most commonly
    * used decoder.
-   * @param startLine The first
+   * @param startLine Index of first line to copy
+   * @param endLine Index of last line to copy
    */
   virtual void writeToStream(TerminalCharacterDecoder* decoder,int startLine,int endLine);
   
@@ -267,7 +270,7 @@
    * standard input of the terminal.
    *
    * @param data The buffer of data ready to be sent
-   * @paran len The length of @p data in bytes
+   * @param len The length of @p data in bytes
    */
   void sendData(const char* data,int len);
 
@@ -354,7 +357,7 @@
    * <li>1 - Set window icon text to @p newTitle</li>
    * <li>2 - Set session title to @p newTitle</li>
    * <li>11 - Set the session's default background color to @p newTitle,
-   *         where @p newTitle can be an HTML-style string (#RRGGBB) or a named
+   *         where @p newTitle can be an HTML-style string ("#RRGGBB") or a named
    *         color (eg 'red', 'blue').  
    *         See http://doc.trolltech.com/4.2/qcolor.html#setNamedColor for more
    *         details.
diff -Naur konsole/src/Filter.h konsole/src/Filter.h
--- konsole/src/Filter.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/Filter.h	2009-04-20 18:11:50.639400000 +0300
@@ -368,6 +368,7 @@
      * @param image The terminal image
      * @param lines The number of lines in the terminal image
      * @param columns The number of columns in the terminal image
+     * @param lineProperties The line properties to set for image
      */
     void setImage(const Character* const image , int lines , int columns,
                   const QVector<LineProperty>& lineProperties);  
diff -Naur konsole/src/HistorySizeDialog.cpp konsole/src/HistorySizeDialog.cpp
--- konsole/src/HistorySizeDialog.cpp	2008-04-30 16:58:56.000000000 +0300
+++ apps/konsole/src/HistorySizeDialog.cpp	2009-02-02 07:24:53.810364000 +0200
@@ -23,6 +23,7 @@
 // Qt
 #include <QtGui/QButtonGroup>
 #include <QtGui/QBoxLayout>
+#include <QtGui/QCheckBox>
 #include <QtGui/QLabel>
 #include <QtGui/QRadioButton>
 #include <QtGui/QSpinBox>
@@ -41,6 +42,7 @@
     ,  _noHistoryButton(0)
     ,  _fixedHistoryButton(0)
     ,  _unlimitedHistoryButton(0)
+    ,  _saveToCurrentProfileButton(0)
     ,  _lineCountBox(0)
     ,  _defaultMode(FixedSizeHistory)
     ,  _defaultLineCount(1000)
@@ -62,6 +64,7 @@
     _noHistoryButton = new QRadioButton( i18n("No scrollback") );
     _fixedHistoryButton = new QRadioButton( i18n("Fixed size scrollback: ") );
     _unlimitedHistoryButton = new QRadioButton( i18n("Unlimited scrollback") );
+    _saveToCurrentProfileButton = new QCheckBox( i18n("Save to current profile") );
 
     modeGroup->addButton(_noHistoryButton);
     modeGroup->addButton(_fixedHistoryButton);
@@ -94,6 +97,8 @@
     dialogLayout->addWidget(_noHistoryButton);
     dialogLayout->addLayout(lineCountLayout);
     dialogLayout->addWidget(_unlimitedHistoryButton);
+    dialogLayout->insertSpacing(3, 10);
+    dialogLayout->addWidget(_saveToCurrentProfileButton);
 
     // select the fixed size mode by default
     _fixedHistoryButton->click();
@@ -106,18 +111,20 @@
 
 void HistorySizeDialog::emitOptionsChanged()
 {
-    emit optionsChanged( mode() , lineCount() );
+    emit optionsChanged( mode() , lineCount(), saveToCurrentProfile() );
 }
 
 void HistorySizeDialog::setDefaultMode( HistoryMode mode ) { _defaultMode = mode; }
 HistorySizeDialog::HistoryMode HistorySizeDialog::defaultMode() const { return _defaultMode; }
 void HistorySizeDialog::setDefaultLineCount( int count ) { _defaultLineCount = count; }
 int HistorySizeDialog::defaultLineCount() const { return _defaultLineCount; }
+bool HistorySizeDialog::saveToCurrentProfile() const { return _saveToCurrentProfileButton->isChecked(); }
 
 void HistorySizeDialog::useDefaults()
 {
     setMode( _defaultMode );
     setLineCount( _defaultLineCount );
+    _saveToCurrentProfileButton->setChecked(false);
 }
 
 void HistorySizeDialog::setMode( HistoryMode mode )
diff -Naur konsole/src/HistorySizeDialog.h konsole/src/HistorySizeDialog.h
--- konsole/src/HistorySizeDialog.h	2008-04-30 16:58:56.000000000 +0300
+++ apps/konsole/src/HistorySizeDialog.h	2009-04-20 18:42:12.995312000 +0300
@@ -95,6 +95,8 @@
     /** Returns the default line count, as set with setDefaultLineCount() */
     int defaultLineCount() const;
 
+    bool saveToCurrentProfile() const;
+
 signals:
     /**
      * Emitted when the user changes the scroll-back mode or line count and
@@ -103,8 +105,9 @@
      * @param mode The current history mode.  This is a value from the HistoryMode enum.
      * @param lineCount The current line count.  This is only applicable if mode is
      * FixedSizeHistory
+     * @param saveToCurrentProfile Determines if the changes are saved to current profile.
      */
-    void optionsChanged(int mode , int lineCount);
+    void optionsChanged(int mode , int lineCount, bool saveToCurrentProfile);
 
 private slots:
     // changes the mode and line count back to the defaults
@@ -119,6 +122,7 @@
     QAbstractButton* _noHistoryButton;
     QAbstractButton* _fixedHistoryButton;
     QAbstractButton* _unlimitedHistoryButton;
+    QAbstractButton* _saveToCurrentProfileButton;
     QSpinBox* _lineCountBox;   
 
     HistoryMode _defaultMode;
diff -Naur konsole/src/KeyboardTranslator.cpp konsole/src/KeyboardTranslator.cpp
--- konsole/src/KeyboardTranslator.cpp	2008-12-04 10:34:29.000000000 +0200
+++ apps/konsole/src/KeyboardTranslator.cpp	2009-01-18 23:30:24.522100000 +0200
@@ -140,10 +140,16 @@
 
 const KeyboardTranslator* KeyboardTranslatorManager::defaultTranslator()
 {
-    kDebug() << "Loading default translator from text" << defaultTranslatorText;
-    QBuffer textBuffer;
-    textBuffer.setData(defaultTranslatorText,strlen(defaultTranslatorText));
-    return loadTranslator(&textBuffer,"fallback");
+    // Try to find the default.keytab file if it exists, otherwise
+    // fall back to the hard-coded one
+    const KeyboardTranslator* translator = findTranslator("default");
+    if (!translator)
+    {
+        QBuffer textBuffer;
+        textBuffer.setData(defaultTranslatorText,strlen(defaultTranslatorText));
+        translator = loadTranslator(&textBuffer,"fallback");
+    }
+    return translator;
 }
 
 KeyboardTranslator* KeyboardTranslatorManager::loadTranslator(QIODevice* source,const QString& name)
diff -Naur konsole/src/KeyboardTranslator.h konsole/src/KeyboardTranslator.h
--- konsole/src/KeyboardTranslator.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/KeyboardTranslator.h	2009-02-07 05:04:24.319744000 +0200
@@ -29,8 +29,8 @@
 #include <QtCore/QMetaType>
 #include <QtCore/QVarLengthArray>
 
-// KDE
-#include <kdemacros.h>
+// Konsole
+#include "konsole_export.h"
 
 class QIODevice;
 class QTextStream;
@@ -442,7 +442,7 @@
  * Manages the keyboard translations available for use by terminal sessions,
  * see KeyboardTranslator.
  */
-class KDE_EXPORT KeyboardTranslatorManager
+class KONSOLEPRIVATE_EXPORT KeyboardTranslatorManager
 {
 public:
     /** 
diff -Naur konsole/src/konsole_export.h konsole/src/konsole_export.h
--- konsole/src/konsole_export.h	1970-01-01 02:00:00.000000000 +0200
+++ apps/konsole/src/konsole_export.h	2009-02-07 23:20:22.223379000 +0200
@@ -0,0 +1,37 @@
+/*
+    This file is part of the KDE project
+    Copyright (C) 2009 Patrick Spendrin <ps_ml@gmx.de>
+
+    This library is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+    02110-1301  USA.
+*/
+
+#ifndef KONSOLE_EXPORT_H
+#define KONSOLE_EXPORT_H
+
+/* needed for KDE_EXPORT macros */
+#include <kdemacros.h>
+
+#ifndef KONSOLEPRIVATE_EXPORT
+# if defined(MAKE_KONSOLEPRIVATE_LIB)
+   /* We are building this library */
+#  define KONSOLEPRIVATE_EXPORT KDE_EXPORT
+# else
+   /* We are using this library */
+#  define KONSOLEPRIVATE_EXPORT KDE_IMPORT
+# endif
+#endif
+
+#endif
diff -Naur konsole/src/main.cpp konsole/src/main.cpp
--- konsole/src/main.cpp	2009-04-30 12:11:50.000000000 +0300
+++ apps/konsole/src/main.cpp	2009-03-29 14:12:57.889434000 +0300
@@ -37,7 +37,7 @@
 #include <KLocale>
 #include <KWindowSystem>
 
-#define KONSOLE_VERSION "2.2.3"
+#define KONSOLE_VERSION "2.3"
 
 using namespace Konsole;
 
@@ -165,7 +165,7 @@
     "neundorf@kde.org");
   aboutData.addCredit(ki18n("Peter Silva"),
     ki18n("Marking improvements"),
-    "peter.silva@videotron.ca");
+    "Peter.A.Silva@gmail.com");
   aboutData.addCredit(ki18n("Lotzi Boloni"),
     ki18n("Embedded Konsole\n"
     "Toolbar and session names"),
@@ -256,11 +256,3 @@
     }
 }
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/MainWindow.cpp konsole/src/MainWindow.cpp
--- konsole/src/MainWindow.cpp	2008-12-10 18:13:08.000000000 +0200
+++ apps/konsole/src/MainWindow.cpp	2009-03-29 14:12:57.889434000 +0300
@@ -64,9 +64,6 @@
    _menuBarVisibilitySet(false)
 {
     // create actions for menus
-    // the directory ('konsole') is included in the path here so that the XML
-    // file can be found when this code is being used in the Konsole part.
-    setXMLFile("konsole/konsoleui.rc");
     setupActions();
 
     // create view manager
@@ -479,11 +476,3 @@
 
 #include "MainWindow.moc"
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/ManageProfilesDialog.cpp konsole/src/ManageProfilesDialog.cpp
--- konsole/src/ManageProfilesDialog.cpp	2009-02-26 16:16:35.000000000 +0200
+++ apps/konsole/src/ManageProfilesDialog.cpp	2009-05-03 20:34:03.762679000 +0300
@@ -46,7 +46,9 @@
     , _sessionModel(new QStandardItemModel(this))
 {
     setCaption(i18n("Manage Profiles"));
-    setButtons( KDialog::Close ); 
+    setButtons( KDialog::Ok | KDialog::Apply | KDialog::Cancel ); 
+
+    connect( this, SIGNAL(applyClicked()) , this , SLOT(setMenuOrder()) );
 
     _ui = new Ui::ManageProfilesDialog();
     _ui->setupUi(mainWidget());
@@ -57,6 +59,10 @@
     _ui->sessionTable->setItemDelegateForColumn(ShortcutColumn,new ShortcutItemDelegate(this));
     _ui->sessionTable->setEditTriggers(_ui->sessionTable->editTriggers() | QAbstractItemView::SelectedClicked);
 
+    // TODO re-enable when saving profile order works - khindenburg
+    _ui->moveUpButton->setEnabled(false);
+    _ui->moveDownButton->setEnabled(false);
+
     // update table and listen for changes to the session types
     connect( SessionManager::instance() , SIGNAL(profileAdded(Profile::Ptr)) , this,
              SLOT(addItems(Profile::Ptr)) );
@@ -84,6 +90,8 @@
     connect( _ui->editSessionButton , SIGNAL(clicked()) , this , SLOT(editSelected()) );
     connect( _ui->deleteSessionButton , SIGNAL(clicked()) , this , SLOT(deleteSelected()) );
     connect( _ui->setAsDefaultButton , SIGNAL(clicked()) , this , SLOT(setSelectedAsDefault()) );
+    connect( _ui->moveUpButton , SIGNAL(clicked()) , this , SLOT(moveUpSelected()) );
+    connect( _ui->moveDownButton , SIGNAL(clicked()) , this , SLOT(moveDownSelected()) );
 }
 
 void ManageProfilesDialog::showEvent(QShowEvent*)
@@ -120,6 +128,20 @@
                                                 sequence); 
    } 
 }
+
+void ManageProfilesDialog::setMenuOrder(void)
+{
+    return;
+// TODO fix 
+/*
+    for (int i=0;i<_sessionModel->rowCount();i++)
+    {
+    }
+
+    SessionManager::instance()->setMenuOrder();
+*/
+}
+
 int ManageProfilesDialog::rowForProfile(const Profile::Ptr info) const
 {
     for (int i=0;i<_sessionModel->rowCount();i++)
@@ -195,11 +217,16 @@
     // that the dialog is shown. 
     SessionManager::instance()->loadAllProfiles();
 
+    _sessionModel->clear();
     // setup session table
     _sessionModel->setHorizontalHeaderLabels( QStringList() << i18n("Name")
                                                             << i18n("Show in Menu") 
                                                             << i18n("Shortcut") );
-    foreach(const Profile::Ptr info,SessionManager::instance()->loadedProfiles())
+
+    QList<Profile::Ptr> profiles = SessionManager::instance()->loadedProfiles();
+    SessionManager::instance()->sortProfiles(profiles);
+
+    foreach(const Profile::Ptr &info, profiles)
     {
         addItems(info);
     }
@@ -217,6 +244,7 @@
             SIGNAL(selectionChanged(const QItemSelection&,const QItemSelection&)) , this ,
             SLOT(tableSelectionChanged(const QItemSelection&)) );
 
+    _ui->sessionTable->selectRow(0);
     tableSelectionChanged( _ui->sessionTable->selectionModel()->selection() );
 }
 void ManageProfilesDialog::updateDefaultItem()
@@ -247,16 +275,24 @@
     const int selectedRows = _ui->sessionTable->selectionModel()->selectedRows().count();
     const SessionManager* manager = SessionManager::instance();
     const bool isNotDefault = (selectedRows > 0) && currentProfile() != manager->defaultProfile();
+    const int rowIndex = _ui->sessionTable->currentIndex().row();
 
     _ui->newSessionButton->setEnabled(selectedRows < 2);
     _ui->editSessionButton->setEnabled(selectedRows > 0);
     // do not allow the default session type to be removed
     _ui->deleteSessionButton->setEnabled(isNotDefault);
     _ui->setAsDefaultButton->setEnabled(isNotDefault && (selectedRows < 2)); 
+
+    // TODO handle multiple moves
+    // TODO re-enable when saving profile order works - khindenburg
+//    _ui->moveUpButton->setEnabled((selectedRows == 1) && (rowIndex > 0));
+//    _ui->moveDownButton->setEnabled((selectedRows == 1) && (rowIndex < (_sessionModel->rowCount()-1)));
+
+    _ui->sessionTable->selectRow(rowIndex);
 }
 void ManageProfilesDialog::deleteSelected()
 {
-    foreach(Profile::Ptr profile, selectedProfiles())
+    foreach(const Profile::Ptr &profile, selectedProfiles())
     {
         if (profile != SessionManager::instance()->defaultProfile())
             SessionManager::instance()->deleteProfile(profile);
@@ -272,6 +308,27 @@
     // update font of new default item
     updateDefaultItem(); 
 }
+
+void ManageProfilesDialog::moveUpSelected()
+{
+    Q_ASSERT(_sessionModel);
+
+    const int rowIndex = _ui->sessionTable->currentIndex().row();
+    const QList<QStandardItem*>items = _sessionModel->takeRow(rowIndex);
+    _sessionModel->insertRow(rowIndex-1, items);
+    _ui->sessionTable->selectRow(rowIndex-1);
+}
+
+void ManageProfilesDialog::moveDownSelected()
+{
+    Q_ASSERT(_sessionModel);
+
+    const int rowIndex = _ui->sessionTable->currentIndex().row();
+    const QList<QStandardItem*>items = _sessionModel->takeRow(rowIndex);
+    _sessionModel->insertRow(rowIndex+1, items);
+    _ui->sessionTable->selectRow(rowIndex+1);
+}
+
 void ManageProfilesDialog::newType()
 {
     EditProfileDialog dialog(this);
@@ -291,6 +348,7 @@
     Profile::Ptr newProfile = Profile::Ptr(new Profile(SessionManager::instance()->fallbackProfile()));
     newProfile->clone(sourceProfile,true);
     newProfile->setProperty(Profile::Name,i18n("New Profile"));
+    newProfile->setProperty(Profile::MenuIndex, QString("0"));
 
     dialog.setProfile(newProfile); 
     dialog.selectProfileName();
@@ -306,7 +364,7 @@
     EditProfileDialog dialog(this);
     // the dialog will delete the profile group when it is destroyed
     ProfileGroup* group = new ProfileGroup;
-    foreach(Profile::Ptr profile,selectedProfiles())
+    foreach(const Profile::Ptr &profile,selectedProfiles())
         group->addProfile(profile);
     group->updateValues();
 
diff -Naur konsole/src/ManageProfilesDialog.h konsole/src/ManageProfilesDialog.h
--- konsole/src/ManageProfilesDialog.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/ManageProfilesDialog.h	2009-04-26 19:07:26.248358000 +0300
@@ -34,6 +34,7 @@
 class QShowEvent;
 class QStandardItem;
 class QStandardItemModel;
+class QTableView;
 
 namespace Ui
 {
@@ -48,12 +49,14 @@
  * the user to add new profiles, and remove or edit existing
  * profile types.
  */
-class ManageProfilesDialog : public KDialog
+class KONSOLEPRIVATE_EXPORT ManageProfilesDialog : public KDialog
 {
 Q_OBJECT
 
+
 friend class FavoriteItemDelegate;
 friend class ShortcutItemDelegate;
+friend class QTableView;
 
 public:
     /** Constructs a new profile type with the specified parent. */
@@ -79,6 +82,8 @@
     void setSelectedAsDefault();
     void newType();
     void editSelected();
+    void moveUpSelected();
+    void moveDownSelected();
 
     void itemDataChanged(QStandardItem* item);
 
@@ -92,6 +97,8 @@
     void updateItems(const Profile::Ptr);
     void removeItems(const Profile::Ptr);
 
+    void setMenuOrder(void);
+
 private:
     Profile::Ptr currentProfile() const; 
     QList<Profile::Ptr> selectedProfiles() const; 
diff -Naur konsole/src/ManageProfilesDialog.ui konsole/src/ManageProfilesDialog.ui
--- konsole/src/ManageProfilesDialog.ui	2008-06-26 04:33:07.000000000 +0300
+++ apps/konsole/src/ManageProfilesDialog.ui	2009-04-26 19:07:26.248358000 +0300
@@ -72,6 +72,32 @@
     </widget>
    </item>
    <item row="4" column="1" >
+    <widget class="QPushButton" name="moveUpButton" >
+     <property name="enabled" >
+      <bool>false</bool>
+     </property>
+     <property name="toolTip" >
+      <string>Move the selected profile up in the menu list</string>
+     </property>
+     <property name="text" >
+      <string>Move Up</string>
+     </property>
+    </widget>
+   </item>
+   <item row="5" column="1" >
+    <widget class="QPushButton" name="moveDownButton" >
+     <property name="enabled" >
+      <bool>false</bool>
+     </property>
+     <property name="toolTip" >
+      <string>Move the selected profile down in the menu list</string>
+     </property>
+     <property name="text" >
+      <string>Move Down</string>
+     </property>
+    </widget>
+   </item>
+   <item row="6" column="1" >
     <spacer>
      <property name="orientation" >
       <enum>Qt::Vertical</enum>
@@ -84,7 +110,7 @@
      </property>
     </spacer>
    </item>
-   <item rowspan="5" row="0" column="0" >
+   <item rowspan="7" row="0" column="0" >
     <widget class="QTableView" name="sessionTable" >
      <property name="whatsThis" >
       <string/>
diff -Naur konsole/src/org.kde.konsole.KonsoleScripting.xml konsole/src/org.kde.konsole.KonsoleScripting.xml
--- konsole/src/org.kde.konsole.KonsoleScripting.xml	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/src/org.kde.konsole.KonsoleScripting.xml	2009-03-20 16:42:59.553370000 +0200
@@ -1,11 +1,5 @@
 <!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
 <node>
   <interface name="org.kde.konsole.KonsoleScripting">
-    <method name="feedAllSessions">
-      <arg name="text" type="s" direction="in"/>
-    </method>
-    <method name="sendAllSessions">
-      <arg name="text" type="s" direction="in"/>
-    </method>
   </interface>
 </node>
diff -Naur konsole/src/org.kde.konsole.Konsole.xml konsole/src/org.kde.konsole.Konsole.xml
--- konsole/src/org.kde.konsole.Konsole.xml	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/src/org.kde.konsole.Konsole.xml	2009-04-12 03:27:19.821464000 +0300
@@ -1,40 +1,33 @@
 <!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
 <node>
-  <interface name="org.kde.konsole.Konsole">
-    <method name="sessionCount">
-      <arg type="i" direction="out"/>
-    </method>
-    <method name="currentSession">
-      <arg type="s" direction="out"/>
-    </method>
-    <method name="newSession">
-      <arg type="s" direction="out"/>
-    </method>
-    <method name="newSession">
-      <arg name="type" type="s" direction="in"/>
-      <arg type="s" direction="out"/>
-    </method>
-    <method name="sessionId">
-      <arg name="position" type="i" direction="in"/>
-      <arg type="s" direction="out"/>
-    </method>
-    <method name="activateSession">
-      <arg name="sessionId" type="s" direction="in"/>
-    </method>
-    <method name="nextSession"/>
-    <method name="prevSession"/>
-    <method name="moveSessionLeft"/>
-    <method name="moveSessionRight"/>
-    <method name="fullScreen">
-      <arg type="b" direction="out"/>
-    </method>
-    <method name="setFullScreen">
-      <arg name="on" type="b" direction="in"/>
-    </method>
-    <method name="reparseConfiguration">
-    <annotation name="org.freedesktop.DBus.Method.NoReply" value="true"/>
-    </method>
-    <signal name="reloadConfig"/>
-  </interface>
+    <interface name="org.kde.konsole.Konsole">
+        <method name="sessionCount">
+            <arg type="i" direction="out"/>
+        </method>
+        <method name="currentSession">
+            <arg type="i" direction="out"/>
+        </method>
+        <method name="newSession">
+            <arg type="i" direction="out"/>
+            <arg name="profile" type="s" direction="in"/>
+            <arg name="directory" type="s" direction="in"/>
+        </method>
+        <method name="profileList">
+            <arg type="as" direction="out"/>
+        </method>
+        <method name="newSession">
+            <arg type="i" direction="out"/>
+        </method>
+        <method name="nextSession">
+        </method>
+        <method name="prevSession">
+        </method>
+        <method name="moveSessionLeft">
+        </method>
+        <method name="moveSessionRight">
+        </method>
+
+
+    </interface>
 </node>
diff -Naur konsole/src/org.kde.konsole.SessionScripting.xml konsole/src/org.kde.konsole.SessionScripting.xml
--- konsole/src/org.kde.konsole.SessionScripting.xml	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/src/org.kde.konsole.SessionScripting.xml	2009-03-20 16:42:59.553370000 +0200
@@ -1,11 +1,5 @@
 <!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
 <node>
   <interface name="org.kde.konsole.SessionScripting">
-    <method name="feedSession">
-      <arg name="text" type="s" direction="in"/>
-    </method>
-    <method name="sendSession">
-      <arg name="text" type="s" direction="in"/>
-    </method>
   </interface>
 </node>
diff -Naur konsole/src/org.kde.konsole.Session.xml konsole/src/org.kde.konsole.Session.xml
--- konsole/src/org.kde.konsole.Session.xml	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/src/org.kde.konsole.Session.xml	2009-04-21 18:02:09.848424000 +0300
@@ -1,6 +1,65 @@
 <!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
 <node>
-  <interface name="org.kde.konsole.Session">
-  </interface>
+    <interface name="org.kde.konsole.Session">
+        <method name="environment">
+            <arg type="as" direction="out"/>
+        </method>
+        <method name="setEnvironment">
+            <arg name="environment" type="as" direction="in"/>
+        </method>
+        <method name="close">
+        </method>
+        <method name="setMonitorActivity">
+            <arg type="b" direction="in"/>
+        </method>
+        <method name="isMonitorActivity">
+            <arg type="b" direction="out"/>
+        </method>
+        <method name="setMonitorSilence">
+            <arg type="b" direction="in"/>
+        </method>
+        <method name="isMonitorSilence">
+            <arg type="b" direction="out"/>
+        </method>
+        <method name="setMonitorSilenceSeconds">
+            <arg name="seconds" type="i" direction="in"/>
+        </method>
+        <method name="setFlowControlEnabled">
+            <arg name="enabled" type="b" direction="in"/>
+        </method>
+        <method name="flowControlEnabled">
+            <arg type="b" direction="out"/>
+        </method>
+        <method name="sendText">
+            <arg name="text" type="s" direction="in"/>
+        </method>
+        <method name="sendMouseEvent">
+            <arg name="buttons" type="i" direction="in"/>
+            <arg name="column" type="i" direction="in"/>
+            <arg name="line" type="i" direction="in"/>
+            <arg name="eventType" type="i" direction="in"/>
+        </method>
+        <method name="processId">
+            <arg type="i" direction="out"/>
+        </method>
+        <method name="foregroundProcessId">
+            <arg type="i" direction="out"/>
+        </method>
+        <method name="setCodec">
+            <arg type="b" direction="out"/>
+            <arg name="codec" type="ay" direction="in"/>
+        </method>
+        <method name="codec">
+            <arg type="ay" direction="out"/>
+        </method>
+        <method name="setTitle">
+            <arg name="role" type="i" direction="in"/>
+            <arg name="title" type="s" direction="in"/>
+        </method>
+        <method name="title">
+            <arg type="s" direction="out"/>
+            <arg name="role" type="i" direction="in"/>
+        </method>
+    </interface>
 </node>
diff -Naur konsole/src/Part.cpp konsole/src/Part.cpp
--- konsole/src/Part.cpp	2009-02-26 16:16:35.000000000 +0200
+++ apps/konsole/src/Part.cpp	2009-03-29 14:51:01.191008000 +0300
@@ -48,12 +48,6 @@
 
 // X
 #include "config-konsole.h"
-#ifdef Q_WS_X11
-#include <X11/Xlib.h>
-#ifdef HAVE_XRENDER
-#include <X11/extensions/Xrender.h>
-#endif
-#endif
 
 extern "C"
 {
@@ -86,7 +80,7 @@
     // make sure the konsole catalog is loaded
     KGlobal::locale()->insertCatalog("konsole");
 
-    TerminalDisplay::HAVE_TRANSPARENCY = transparencyAvailable();
+
 
     // setup global actions
     createGlobalActions();
@@ -107,6 +101,10 @@
     foreach (QAction* action, actionCollection()->actions())
         action->setShortcutContext(Qt::WidgetWithChildrenShortcut);
 
+    // Enable translucency support.
+    _viewManager->widget()->setAttribute(Qt::WA_TranslucentBackground, true);
+    TerminalDisplay::HAVE_TRANSPARENCY = KWindowSystem::compositingActive();
+
     // create basic session
     createSession();
 }
@@ -124,35 +122,6 @@
     KActionCollection* collection = session->actionCollection();
     collection->addAction("manage-profiles",_manageProfilesAction);
 }
-bool Part::transparencyAvailable()
-{
-#if defined(Q_WS_X11) && defined(HAVE_XRENDER)
-    bool ARGB = false;
-
-    int screen = QX11Info::appScreen();
-    bool depth = (QX11Info::appDepth() == 32);
-
-    Display* display = QX11Info::display();
-    Visual* visual = static_cast<Visual*>(QX11Info::appVisual(screen));
-
-    XRenderPictFormat* format = XRenderFindVisualFormat(display, visual);
-
-    if (depth && format->type == PictTypeDirect && format->direct.alphaMask)
-    {
-        ARGB = true;
-    }
-
-    if (ARGB)
-    {
-        return KWindowSystem::compositingActive();
-    }
-    else
-#endif
-    {
-        return false;
-    }
-}
-
 bool Part::openFile()
 {
     return false;
@@ -218,6 +187,36 @@
     activeSession()->emulation()->sendText(text);
 }
 
+int Part::terminalProcessId()
+{
+    Q_ASSERT( activeSession() );
+
+    return activeSession()->processId();
+
+}
+
+int Part::foregroundProcessId()
+{
+    Q_ASSERT( activeSession() );
+
+    if (activeSession()->isForegroundProcessActive()) {
+        return activeSession()->foregroundProcessId();
+    } else {
+        return -1;
+    }
+}
+
+QString Part::foregroundProcessName()
+{
+    Q_ASSERT( activeSession() );
+
+    if (activeSession()->isForegroundProcessActive()) {
+        return activeSession()->foregroundProcessName();
+    } else {
+        return "";
+    }
+}
+
 Session* Part::createSession(const Profile::Ptr profile)
 {
     Session* session = SessionManager::instance()->createSession(profile);
diff -Naur konsole/src/Part.h konsole/src/Part.h
--- konsole/src/Part.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/Part.h	2009-03-31 15:21:10.855386000 +0300
@@ -23,7 +23,7 @@
 // KDE
 #include <KParts/Factory>
 #include <KParts/Part>
-#include <kde_terminal_interface.h>
+#include <kde_terminal_interface_v2.h>
 
 // Konsole
 #include "Profile.h"
@@ -56,10 +56,10 @@
  * A re-usable terminal emulator component using the KParts framework which can
  * be used to embed terminal emulators into other applications.
  */
-class Part : public KParts::ReadOnlyPart , public TerminalInterface
+class Part : public KParts::ReadOnlyPart , public TerminalInterfaceV2
 {
 Q_OBJECT
-    Q_INTERFACES(TerminalInterface)
+    Q_INTERFACES(TerminalInterface TerminalInterfaceV2)
 public:
     /** Constructs a new Konsole part with the specified parent. */
     explicit Part(QWidget* parentWidget , QObject* parent = 0);
@@ -73,6 +73,15 @@
     /** Reimplemented from TerminalInterface. */
     virtual void sendInput( const QString& text );
 
+    /** Reimplemented from TerminalInterfaceV2. */
+    virtual int terminalProcessId();
+
+    /** Reimplemented from TerminalInterfaceV2. */
+    virtual int foregroundProcessId();
+
+    /** Reimplemented from TerminalInterfaceV2. */
+    virtual QString foregroundProcessName();
+
 public slots:
     /**
      * Shows the dialog used to manage profiles in Konsole.  The dialog
@@ -154,7 +163,6 @@
     Session* activeSession() const;
     void setupActionsForSession(SessionController* session);
     void createGlobalActions();
-    bool transparencyAvailable();
 
 private:
     ViewManager* _viewManager;
diff -Naur konsole/src/ProcessInfo.cpp konsole/src/ProcessInfo.cpp
--- konsole/src/ProcessInfo.cpp	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/ProcessInfo.cpp	2009-04-12 19:36:35.081582000 +0300
@@ -24,6 +24,8 @@
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
+#include <unistd.h>
+#include <pwd.h>
 
 // Qt
 #include <KDebug>
@@ -52,7 +54,9 @@
     , _pid(pid)
     , _parentPid(0)
     , _foregroundPid(0)
+    , _userId(0)
     , _lastError(NoError)
+    , _userName(QString())
 {
 }
 
@@ -91,7 +95,7 @@
    QString output(input);
 
    // search for and replace known marker
-   output.replace("%u","NOT IMPLEMENTED YET");
+   output.replace("%u",userName());
    output.replace("%n",name(&ok));
    output.replace("%c",formatCommand(name(&ok),arguments(&ok),ShortCommandFormat));
    output.replace("%C",formatCommand(name(&ok),arguments(&ok),LongCommandFormat));
@@ -219,12 +223,36 @@
     return _name;
 }
 
+int ProcessInfo::userId(bool* ok) const
+{
+    *ok = _fields & UID;
+
+    return _userId;
+}
+
+QString ProcessInfo::userName() const
+{
+    return _userName;
+}
+
 void ProcessInfo::setPid(int pid)
 {
     _pid = pid;
     _fields |= PROCESS_ID;
 }
 
+void ProcessInfo::setUserId(int uid)
+{
+    _userId = uid;
+    _fields |= UID;
+}
+
+void ProcessInfo::setUserName(const QString& name)
+{
+    _userName = name;
+}
+
+
 void ProcessInfo::setParentPid(int pid)
 {
     _parentPid = pid;
@@ -294,6 +322,10 @@
     return false;
 }
 
+void NullProcessInfo::readUserName()
+{
+}
+
 UnixProcessInfo::UnixProcessInfo(int pid,bool enableEnvironmentRead)
     : ProcessInfo(pid,enableEnvironmentRead)
 {
@@ -314,6 +346,19 @@
     return ok;
 }
 
+void UnixProcessInfo::readUserName()
+{
+    bool ok = false;
+    int uid = userId(&ok);
+    if (!ok) return;
+
+    struct passwd *pwuser = getpwuid(uid);
+    if (pwuser)
+        setUserName(QString(pwuser->pw_name));
+    else
+        setUserName(QString());
+}
+
 
 class LinuxProcessInfo : public UnixProcessInfo
 {
@@ -336,6 +381,29 @@
         QString processNameString;
         QString foregroundPidString;
 
+        // For user id read process status file ( /proc/<pid>/status )
+        //  Can not use getuid() due to it does not work for 'su'
+        QFile statusInfo( QString("/proc/%1/status").arg(pid) );
+        if ( statusInfo.open(QIODevice::ReadOnly) )
+        {
+            QTextStream stream(&statusInfo);
+            QString data = stream.readAll();
+            int uidIndex = data.indexOf("Uid:");
+            QString uidLine = data.mid(uidIndex + 4, 16); // grab some data
+            QString uidString = uidLine.split('\t', QString::SkipEmptyParts)[0];
+            bool ok = false;
+            int uid = uidString.toInt(&ok);
+            if (ok)
+                setUserId(uid);
+            readUserName();
+        }
+        else
+        {
+            setFileError( statusInfo.error() );
+            return false;
+        }
+
+
         // read process status file ( /proc/<pid/stat )
         //
         // the expected file format is a list of fields separated by spaces, using
@@ -739,11 +807,3 @@
 #endif
 }
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/ProcessInfo.h konsole/src/ProcessInfo.h
--- konsole/src/ProcessInfo.h	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/ProcessInfo.h	2009-04-12 19:36:35.081582000 +0300
@@ -122,6 +122,12 @@
      */
     int foregroundPid(bool* ok) const;
     
+    /* Returns the user id of the process */
+    int userId(bool* ok) const;
+
+    /** Returns the user's name of the process */
+    QString userName() const;
+   
     /** Returns the name of the current process */
     QString name(bool* ok) const;
    
@@ -224,12 +230,19 @@
      */
     virtual bool readProcessInfo(int pid , bool readEnvironment) = 0;
 
+    /* Read the user name */
+    virtual void readUserName(void) = 0;
+
     /** Sets the process id associated with this ProcessInfo instance */
     void setPid(int pid);
     /** Sets the parent process id as returned by parentPid() */
     void setParentPid(int pid);
     /** Sets the foreground process id as returend by foregroundPid() */
     void setForegroundPid(int pid);
+    /** Sets the user id associated with this ProcessInfo instance */
+    void setUserId(int uid);
+    /** Sets the user name of the process as set by readUserName() */
+    void setUserName(const QString& name);
     /** Sets the name of the process as returned by name() */
     void setName(const QString& name);
     /** Sets the current working directory for the process */
@@ -280,7 +293,8 @@
         ARGUMENTS           = 8,
         ENVIRONMENT         = 16,
         NAME                = 32,
-        CURRENT_DIR         = 64
+        CURRENT_DIR         = 64,
+        UID                 =128 
     };
 
     char _fields; // a bitmap indicating which fields are valid
@@ -292,10 +306,12 @@
     int _pid;  
     int _parentPid;
     int _foregroundPid;
+    int _userId;  
 
     Error _lastError;
 
     QString _name;
+    QString _userName;
     QString _currentDir;
 
     QVector<QString> _arguments;
@@ -322,6 +338,7 @@
     explicit NullProcessInfo(int pid,bool readEnvironment = false);
 protected:
     virtual bool readProcessInfo(int pid,bool readEnvironment);
+    virtual void readUserName(void);
 };
 
 /**
@@ -344,6 +361,8 @@
      */
     virtual bool readProcessInfo(int pid , bool readEnvironment);
 
+    virtual void readUserName(void);
+
 private:
     /**
      * Read the standard process information -- PID, parent PID, foreground PID.
diff -Naur konsole/src/Profile.cpp konsole/src/Profile.cpp
--- konsole/src/Profile.cpp	2009-05-23 12:55:04.819975663 +0300
+++ apps/konsole/src/Profile.cpp	2009-04-26 18:40:18.668901000 +0300
@@ -80,6 +80,7 @@
     , { TabBarPosition , "TabBarPosition" , GENERAL_GROUP , QVariant::Int }
     , { StartInCurrentSessionDir , "StartInCurrentSessionDir" , GENERAL_GROUP , QVariant::Bool }
     , { ShowNewAndCloseTabButtons, "ShowNewAndCloseTabButtons" , GENERAL_GROUP , QVariant::Bool }
+    , { MenuIndex, "MenuIndex" , GENERAL_GROUP , QVariant::String }
 
     // Appearance
     , { Font , "Font" , APPEARANCE_GROUP , QVariant::Font }
@@ -155,9 +156,10 @@
     setProperty(ShowMenuBar,true);
     setProperty(StartInCurrentSessionDir,true);
     setProperty(ShowNewAndCloseTabButtons,false);
+    setProperty(MenuIndex,"0");
 
     setProperty(KeyBindings,"default");
-    setProperty(ColorScheme,"Linux");
+    setProperty(ColorScheme,"DarkPastels");
     setProperty(Font,KGlobalSettings::fixedFont());
 
     setProperty(HistoryMode,FixedSizeHistory);
@@ -276,6 +278,14 @@
         _infoByProperty.insert(info.property,info);
 }
 
+int Profile::menuIndexAsInt() const
+{
+    bool ok;
+    int index = menuIndex().toInt(&ok, 10);
+    if (ok) return index;
+    return 0;
+}
+
 QString KDE4ProfileWriter::getPath(const Profile::Ptr info)
 {
     QString newPath;
diff -Naur konsole/src/Profile.h konsole/src/Profile.h
--- konsole/src/Profile.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/Profile.h	2009-04-26 18:40:18.668901000 +0300
@@ -34,7 +34,9 @@
 // KDE
 #include <KSharedPtr>
 #include <KDebug>
-#include <kdemacros.h>
+
+// Konsole
+#include "konsole_export.h"
 
 class KConfig;
 class KConfigGroup;
@@ -61,7 +63,7 @@
  * Profiles can be loaded from disk using ProfileReader instances
  * and saved to disk using ProfileWriter instances.
  */
-class KDE_EXPORT Profile : public QSharedData 
+class KONSOLEPRIVATE_EXPORT Profile : public QSharedData 
 {
 
 friend class KDE4ProfileReader;
@@ -180,7 +182,11 @@
          * currently active session. */
         StartInCurrentSessionDir,
         /** (bool) Whether a 'New Tab' and 'Close Tab' buttons should be shown on the tab bar */
-        ShowNewAndCloseTabButtons
+        ShowNewAndCloseTabButtons,
+        /** Index of profile in the File Menu
+         * In future, format will be #.#.# to account for levels
+         */
+        MenuIndex
     };
 
     /** 
@@ -352,6 +358,11 @@
     /** Convenience method for property<QStringList>(Profile::Environment) */
     QStringList environment() const { return property<QStringList>(Profile::Environment); }
 
+    /** Convenience method for property<QString>(Profile::MenuIndex) */
+    QString menuIndex() const { return property<QString>(Profile::MenuIndex); }
+
+    int menuIndexAsInt() const;
+
     /**
      * Returns true if @p name has been associated with an element
      * from the Property enum or false otherwise.
@@ -362,7 +373,7 @@
      * Returns the element from the Property enum associated with the 
      * specified @p name.
      *
-     * @param The name of the property to look for, this is case insensitive.
+     * @param name The name of the property to look for, this is case insensitive.
      */
     static Property lookupByName(const QString& name);
     /**
@@ -439,7 +450,7 @@
  * This can be used as a parent for other profiles or a fallback in case
  * a profile cannot be loaded from disk.
  */
-class FallbackProfile : public Profile
+class KONSOLEPRIVATE_EXPORT FallbackProfile : public Profile
 {
 public:
     FallbackProfile();
@@ -458,7 +469,7 @@
  * The Profile::Name and Profile::Path properties are unique to individual profiles,
  * setting these properties on a ProfileGroup has no effect.
  */
-class KDE_EXPORT ProfileGroup : public Profile
+class KONSOLEPRIVATE_EXPORT ProfileGroup : public Profile
 {
 public:
     typedef KSharedPtr<ProfileGroup> Ptr;
@@ -598,7 +609,7 @@
  *   Icon=konsole;Directory=/home/bob
  * @endcode
  */
-class ProfileCommandParser
+class KONSOLEPRIVATE_EXPORT ProfileCommandParser
 {
 public:
     /**
diff -Naur konsole/src/ProfileList.cpp konsole/src/ProfileList.cpp
--- konsole/src/ProfileList.cpp	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/ProfileList.cpp	2009-04-26 18:40:18.668901000 +0300
@@ -47,9 +47,11 @@
     // disabled action to be shown only when the list is empty
     _emptyListAction = new QAction(i18n("No profiles available"),_group);
     _emptyListAction->setEnabled(false);
-    
-    // TODO Sort list in alphabetical order
-    QList<Profile::Ptr> list = manager->findFavorites().toList();
+
+    // TODO - Handle re-sorts when user changes profile names
+
+    QList<Profile::Ptr> list = manager->sortedFavorites();
+
     QListIterator<Profile::Ptr> iter(list);
 
     while (iter.hasNext())
diff -Naur konsole/src/ProfileList.h konsole/src/ProfileList.h
--- konsole/src/ProfileList.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/ProfileList.h	2009-04-21 17:56:33.821839000 +0300
@@ -25,6 +25,7 @@
 #include <QtCore/QObject>
 
 #include "Profile.h"
+#include "konsole_export.h"
 
 class QAction;
 class QActionGroup;
@@ -46,7 +47,7 @@
  * The user-data associated with each session can be passed to the createProfile() method of the 
  * SessionManager to create a new terminal session. 
  */
-class ProfileList : public QObject
+class KONSOLEPRIVATE_EXPORT ProfileList : public QObject
 {
 Q_OBJECT
 
@@ -57,6 +58,7 @@
      *
      * @param addShortcuts True if the shortcuts associated with profiles
      * in the session manager should be added to the actions
+     * @param parent The parent GUI object
      */
     ProfileList(bool addShortcuts , QObject* parent);
 
@@ -74,7 +76,7 @@
    /** 
     * Emitted when the user selects an action from the list.
     * 
-    * @param key The profile key associated with the selected action.
+    * @param profile The profile to select
     */
    void profileSelected(Profile::Ptr profile);
    /**
diff -Naur konsole/src/Pty.h konsole/src/Pty.h
--- konsole/src/Pty.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/Pty.h	2009-02-07 05:04:24.319744000 +0200
@@ -31,7 +31,9 @@
 
 // KDE
 #include <KPtyProcess>
-#include <kdemacros.h>
+
+// Konsole
+#include "konsole_export.h"
 
 namespace Konsole
 {
@@ -49,7 +51,7 @@
  * To start the terminal process, call the start() method
  * with the program name and appropriate arguments. 
  */
-class KDE_EXPORT Pty: public KPtyProcess
+class KONSOLEPRIVATE_EXPORT Pty: public KPtyProcess
 {
 Q_OBJECT
 
diff -Naur konsole/src/RemoteConnectionDialog.ui konsole/src/RemoteConnectionDialog.ui
--- konsole/src/RemoteConnectionDialog.ui	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/src/RemoteConnectionDialog.ui	2009-04-22 00:50:34.805402000 +0300
@@ -99,7 +99,6 @@
    </item>
   </layout>
  </widget>
- <layoutdefault spacing="6" margin="0" />
  <resources/>
  <connections/>
 </ui>
diff -Naur konsole/src/Screen.cpp konsole/src/Screen.cpp
--- konsole/src/Screen.cpp	2009-04-30 12:11:50.000000000 +0300
+++ apps/konsole/src/Screen.cpp	2009-03-25 06:49:30.168357000 +0200
@@ -1240,8 +1240,8 @@
                 else
                     break;
             }
-         }
-
+        }
+ 
         //retrieve line from screen image
         for (int i=start;i < qMin(start+count,length);i++)
         {
diff -Naur konsole/src/Screen.h konsole/src/Screen.h
--- konsole/src/Screen.h	2009-03-26 17:42:41.000000000 +0300
+++ apps/konsole/src/Screen.h	2009-04-14 19:05:34.282445000 +0300
@@ -450,8 +450,8 @@
      * Copies part of the output to a stream.
      *
      * @param decoder A decoder which coverts terminal characters into text
-     * @param from The first line in the history to retrieve
-     * @param to The last line in the history to retrieve
+     * @param fromLine The first line in the history to retrieve
+     * @param toLine The last line in the history to retrieve
      */
     void writeLinesToStream(TerminalCharacterDecoder* decoder, int fromLine, int toLine) const;
 
diff -Naur konsole/src/SessionController.cpp konsole/src/SessionController.cpp
--- konsole/src/SessionController.cpp	2009-04-30 12:11:50.000000000 +0300
+++ apps/konsole/src/SessionController.cpp	2009-04-20 02:03:34.679238000 +0300
@@ -245,7 +245,7 @@
         _session->emulation()->sendText("ssh ");
 
         if ( url.port() > -1 )
-            _session->emulation()->sendText("-p " + QString::number(url.port()) + ' ');
+            _session->emulation()->sendText("-p " + QString::number(url.port()) + ' ' );
         if ( url.hasUser() )
             _session->emulation()->sendText(url.user() + '@');
         if ( url.hasHost() )
@@ -579,9 +579,9 @@
 }
 bool SessionController::confirmClose() const
 {
-    if (_session->isChildActive())
+    if (_session->isForegroundProcessActive())
     {
-        QString title = _session->childName();
+        QString title = _session->foregroundProcessName();
       
         // hard coded for now.  In future make it possible for the user to specify which programs
         // are ignored when considering whether to display a confirmation
@@ -845,8 +845,8 @@
     else
         dialog->setMode( HistorySizeDialog::NoHistory );
 
-    connect( dialog , SIGNAL(optionsChanged(int,int)) ,
-             this , SLOT(scrollBackOptionsChanged(int,int)) );
+    connect( dialog , SIGNAL(optionsChanged(int,int,bool)) ,
+             this , SLOT(scrollBackOptionsChanged(int,int,bool)) );
 
     dialog->show();
 }
@@ -855,7 +855,7 @@
     kDebug(1211) << "View resize requested to " << size;
     _view->setSize(size.width(),size.height());
 }
-void SessionController::scrollBackOptionsChanged( int mode , int lines )
+void SessionController::scrollBackOptionsChanged(int mode, int lines, bool saveToCurrentProfile )
 {
     switch (mode)
     {
@@ -869,6 +869,25 @@
              _session->setHistoryType( HistoryTypeFile() );
             break;
     }
+    if (saveToCurrentProfile)
+    {
+        Profile::Ptr profile = SessionManager::instance()->sessionProfile(_session);
+
+        switch (mode)
+        {
+            case HistorySizeDialog::NoHistory:
+                profile->setProperty(Profile::HistoryMode , Profile::DisableHistory);
+                break;
+            case HistorySizeDialog::FixedSizeHistory:
+                profile->setProperty(Profile::HistoryMode , Profile::FixedSizeHistory);
+                profile->setProperty(Profile::HistorySize , lines);
+                break;
+            case HistorySizeDialog::UnlimitedHistory:
+                profile->setProperty(Profile::HistoryMode , Profile::UnlimitedHistory);
+                break;
+        }
+        SessionManager::instance()->changeProfile(profile, profile->setProperties());
+    }
 }
 
 void SessionController::saveHistory()
@@ -1373,11 +1392,3 @@
 
 #include "SessionController.moc"
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/SessionController.h konsole/src/SessionController.h
--- konsole/src/SessionController.h	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/SessionController.h	2009-04-14 18:34:03.096608000 +0300
@@ -81,7 +81,7 @@
  * which contains the view to plug the controller's actions into the menu when
  * the view is focused.
  */
-class SessionController : public ViewProperties , public KXMLGUIClient
+class KONSOLEPRIVATE_EXPORT SessionController : public ViewProperties , public KXMLGUIClient
 {
 Q_OBJECT
     
@@ -153,7 +153,7 @@
      * responding to input.
      *
      * openUrl() currently supports urls for local paths and those
-     * using the 'ssh' protocol ( eg. ssh://joebloggs@hostname )
+     * using the 'ssh' protocol ( eg. "ssh://joebloggs@hostname" )
      */
     void openUrl( const KUrl& url ); 
 
@@ -201,7 +201,7 @@
 
     void requireUrlFilterUpdate();
     void highlightMatches(bool highlight);
-    void scrollBackOptionsChanged(int mode , int lines);
+    void scrollBackOptionsChanged(int mode , int lines, bool saveToCurrentProfile);
     void sessionResizeRequest(const QSize& size);
     void trackOutput(QKeyEvent* event);  // move view to end of current output
                                          // when a key press occurs in the 
@@ -437,11 +437,3 @@
 
 #endif //SESSIONCONTROLLER_H
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/Session.cpp konsole/src/Session.cpp
--- konsole/src/Session.cpp	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/Session.cpp	2009-05-08 18:34:38.580636000 +0300
@@ -192,13 +192,28 @@
     emulation()->setCodec(codec);
 }
 
+bool Session::setCodec(QByteArray name)
+{
+    QTextCodec *codec = QTextCodec::codecForName(name);
+    if (codec) {
+        setCodec(codec);
+        return true;
+    }
+    return false;
+}
+
+QByteArray Session::codec()
+{
+    return _emulation->codec()->name();
+}
+
 void Session::setProgram(const QString& program)
 {
     _program = ShellCommand::expand(program);
 }
 void Session::setInitialWorkingDirectory(const QString& dir)
 {
-    _initialWorkingDir = ShellCommand::expand(dir);
+    _initialWorkingDir = KShell::tildeExpand(ShellCommand::expand(dir));
 }
 void Session::setArguments(const QStringList& arguments)
 {
@@ -682,6 +697,11 @@
   _emulation->sendText(text);
 }
 
+void Session::sendMouseEvent(int buttons, int column, int line, int eventType)
+{
+    _emulation->sendMouseEvent(buttons, column, line, eventType);
+}
+
 Session::~Session()
 {
   if (_foregroundProcessInfo)
@@ -779,7 +799,7 @@
 {
     ProcessInfo* process;
 
-    if (isChildActive())
+    if (isForegroundProcessActive())
         process = _foregroundProcessInfo;
     else
     {
@@ -852,7 +872,7 @@
         bool ok = false;
 
         // check if foreground process is bookmark-able
-        if (isChildActive())
+        if (isForegroundProcessActive())
         {
             // for remote connections, save the user and host
             // bright ideas to get the directory at the other end are welcome :)
@@ -976,7 +996,6 @@
 
   if (_shellProcess)  
     _shellProcess->setFlowControlEnabled(_flowControl);
-  
   emit flowControlEnabledChanged(enabled);
 }
 bool Session::flowControlEnabled() const
@@ -1119,13 +1138,49 @@
     return _shellProcess->pid();
 }
 
-bool Session::isChildActive()
+void Session::setTitle(int role , const QString& title)
+{
+    switch (role) {
+    case (0):
+        this->setTitle(Session::NameRole, title);
+        break;
+    case (1):
+        this->setTitle(Session::DisplayedTitleRole, title);
+        break;
+    }
+}
+
+QString Session::title(int role) const
+{
+    switch (role) {
+    case (0):
+        return this->title(Session::NameRole);
+    case (1):
+        return this->title(Session::DisplayedTitleRole);
+    default:
+        return QString();
+    }
+}
+
+int Session::foregroundProcessId()
+{
+    int pid;
+
+    bool ok = false;
+    pid = getProcessInfo()->pid(&ok);
+    if (!ok)
+        pid = -1;
+
+    return pid;
+}
+
+bool Session::isForegroundProcessActive()
 {
     // foreground process info is always updated after this
     return updateForegroundProcessInfo() && (processId() != _foregroundPid);
 }
 
-QString Session::childName()
+QString Session::foregroundProcessName()
 {
     QString name;
 
@@ -1278,11 +1333,3 @@
 
 #include "Session.moc"
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/Session.h konsole/src/Session.h
--- konsole/src/Session.h	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/Session.h	2009-04-21 18:02:09.848424000 +0300
@@ -30,7 +30,7 @@
 // KDE
 #include <KApplication>
 #include <KMainWindow>
-#include <kdemacros.h>
+#include "konsole_export.h"
 
 // Konsole
 #include "History.h"
@@ -58,7 +58,7 @@
  * or send input to the program in the terminal in the form of keypresses and mouse
  * activity.
  */
-class KDE_EXPORT Session : public QObject
+class KONSOLEPRIVATE_EXPORT Session : public QObject
 {
 Q_OBJECT
 
@@ -131,28 +131,10 @@
    */
   Emulation*  emulation() const;
 
-  /**
-   * Returns the environment of this session as a list of strings like
-   * VARIABLE=VALUE
-   */
-  QStringList environment() const;
-  /**
-   * Sets the environment for this session.
-   * @p environment should be a list of strings like
-   * VARIABLE=VALUE
-   */
-  void setEnvironment(const QStringList& environment);
-
   /** Returns the unique ID for this session. */
   int sessionId() const;
 
   /**
-   * Return the session title set by the user (ie. the program running
-   * in the terminal), or an empty string if the user has not set a custom title
-   */
-  QString userTitle() const;
-
-  /**
    * This enum describes the contexts for which separate
    * tab title formats may be specified.
    */
@@ -226,32 +208,6 @@
   void clearHistory();
 
   /**
-   * Enables monitoring for activity in the session.
-   * This will cause notifySessionState() to be emitted
-   * with the NOTIFYACTIVITY state flag when output is
-   * received from the terminal.
-   */
-  void setMonitorActivity(bool);
-  /** Returns true if monitoring for activity is enabled. */
-  bool isMonitorActivity() const;
-
-  /**
-   * Enables monitoring for silence in the session.
-   * This will cause notifySessionState() to be emitted
-   * with the NOTIFYSILENCE state flag when output is not
-   * received from the terminal for a certain period of
-   * time, specified with setMonitorSilenceSeconds()
-   */
-  void setMonitorSilence(bool);
-  /**
-   * Returns true if monitoring for inactivity (silence)
-   * in the session is enabled.
-   */
-  bool isMonitorSilence()  const;
-  /** See setMonitorSilence() */
-  void setMonitorSilenceSeconds(int seconds);
-
-  /**
    * Sets the key bindings used by this session.  The bindings
    * specify how input key sequences are translated into
    * the character stream which is sent to the terminal.
@@ -275,10 +231,12 @@
       DisplayedTitleRole
   };
 
-  /** Sets the session's title for the specified @p role to @p title. */
-  void setTitle(TitleRole role , const QString& title);
-  /** Returns the session's title for the specified @p role. */
-  QString title(TitleRole role) const;
+  /**
+   * Return the session title set by the user (ie. the program running
+   * in the terminal), or an empty string if the user has not set a custom title
+   */
+  QString userTitle() const;
+
   /** Convenience method used to read the name property.  Returns title(Session::NameRole). */
   QString nameTitle() const { return title(Session::NameRole); }
   /** Returns a title generated from tab format and process information. */
@@ -297,6 +255,12 @@
   /** Returns the text of the icon associated with this session. */
   QString iconText() const;
 
+  /** Sets the session's title for the specified @p role to @p title. */
+  void setTitle(TitleRole role , const QString& title);
+
+  /** Returns the session's title for the specified @p role. */
+  QString title(TitleRole role) const;
+
   /** 
    * Specifies whether a utmp entry should be created for the pty used by this session.
    * If true, KPty::login() is called when the session is started.
@@ -309,31 +273,11 @@
    */
   void setAutoClose(bool b) { _autoClose = b; }
 
-  /**
-   * Sets whether flow control is enabled for this terminal
-   * session.
-   */
-  void setFlowControlEnabled(bool enabled);
-
-  /** Returns whether flow control is enabled for this terminal session. */
-  bool flowControlEnabled() const;
-
-  /**
-   * Sends @p text to the current foreground terminal program.
-   */
-  void sendText(const QString& text) const;
-
-  /**
-   * Returns the process id of the terminal process.
-   * This is the id used by the system API to refer to the process.
-   */
-  int processId() const;
-
   /** Returns true if the user has started a program in the session. */
-  bool isChildActive();
+  bool isForegroundProcessActive();
 
   /** Returns the name of the current foreground process. */
-  QString childName();
+  QString foregroundProcessName();
 
   /** Returns the terminal session's window size in lines and columns. */
   QSize size();
@@ -345,9 +289,6 @@
    */
   void setSize(const QSize& size);
 
-  /** Sets the text codec used by this session's terminal emulation. */
-  void setCodec(QTextCodec* codec);
-
   /**
    * Sets whether the session has a dark background or not.  The session
    * uses this information to set the COLORFGBG variable in the process's
@@ -389,6 +330,9 @@
     ProfileChange            = 50     // this clashes with Xterm's font change command
   };
 
+  // Sets the text codec used by this sessions terminal emulation.
+  void setCodec(QTextCodec* codec);
+
   // session management
   void saveSession(KConfigGroup& group);
   void restoreSession(KConfigGroup& group);
@@ -403,13 +347,26 @@
   void run();
 
   /**
+   * Returns the environment of this session as a list of strings like
+   * VARIABLE=VALUE
+   */
+  Q_SCRIPTABLE QStringList environment() const;
+
+  /**
+   * Sets the environment for this session.
+   * @p environment should be a list of strings like
+   * VARIABLE=VALUE
+   */
+  Q_SCRIPTABLE void setEnvironment(const QStringList& environment);
+
+  /**
    * Closes the terminal session.  This sends a hangup signal
    * (SIGHUP) to the terminal process and causes the finished()  
    * signal to be emitted.  If the process does not respond to the SIGHUP signal
    * then the terminal connection (the pty) is closed and Konsole waits for the 
    * process to exit.
    */
-  void close();
+  Q_SCRIPTABLE void close();
 
   /**
    * Changes the session title or other customizable aspects of the terminal
@@ -421,6 +378,94 @@
    */
   void setUserTitle( int what , const QString &caption );
 
+  /**
+   * Enables monitoring for activity in the session.
+   * This will cause notifySessionState() to be emitted
+   * with the NOTIFYACTIVITY state flag when output is
+   * received from the terminal.
+   */
+  Q_SCRIPTABLE void setMonitorActivity(bool);
+
+  /** Returns true if monitoring for activity is enabled. */
+  Q_SCRIPTABLE bool isMonitorActivity() const;
+
+  /**
+   * Enables monitoring for silence in the session.
+   * This will cause notifySessionState() to be emitted
+   * with the NOTIFYSILENCE state flag when output is not
+   * received from the terminal for a certain period of
+   * time, specified with setMonitorSilenceSeconds()
+   */
+  Q_SCRIPTABLE void setMonitorSilence(bool);
+
+  /**
+   * Returns true if monitoring for inactivity (silence)
+   * in the session is enabled.
+   */
+  Q_SCRIPTABLE bool isMonitorSilence() const;
+
+  /** See setMonitorSilence() */
+  Q_SCRIPTABLE void setMonitorSilenceSeconds(int seconds);
+
+  /**
+   * Sets whether flow control is enabled for this terminal
+   * session.
+   */
+  Q_SCRIPTABLE void setFlowControlEnabled(bool enabled);
+
+  /** Returns whether flow control is enabled for this terminal session. */
+  Q_SCRIPTABLE bool flowControlEnabled() const;
+
+  /**
+   * Sends @p text to the current foreground terminal program.
+   */
+  Q_SCRIPTABLE void sendText(const QString& text) const;
+
+   /**
+    * Sends a mouse event of type @p eventType emitted by button
+    * @p buttons on @p column/@p line to the current foreground
+    * terminal program
+    */
+   Q_SCRIPTABLE void sendMouseEvent(int buttons, int column, int line, int eventType);
+
+   /**
+   * Returns the process id of the terminal process.
+   * This is the id used by the system API to refer to the process.
+   */
+  Q_SCRIPTABLE int processId() const;
+
+  /**
+   * Returns the process id of the terminal's foreground process.
+   * This is initially the same as processId() but can change
+   * as the user starts other programs inside the terminal.
+   */
+  Q_SCRIPTABLE int foregroundProcessId();
+
+  /** Sets the text codec used by this sessions terminal emulation.
+    * Overloaded to accept a QByteArray for convenience since DBus
+    * does not accept QTextCodec directky.
+    */
+  Q_SCRIPTABLE bool setCodec(QByteArray codec);
+
+  /** Returns the codec used to decode incoming characters in this
+   * terminal emulation
+   */
+  Q_SCRIPTABLE QByteArray codec();
+
+  /** Sets the session's title for the specified @p role to @p title.
+   *  This is an overloaded member function for setTitle(TitleRole, QString)
+   *  provided for convenience since enum data types may not be
+   *  exported directly through DBus
+   */
+  Q_SCRIPTABLE void setTitle(int role, const QString& title);
+
+  /** Returns the session's title for the specified @p role.
+   * This is an overloaded member function for  setTitle(TitleRole)
+   * provided for convenience since enum data types may not be
+   * exported directly through DBus
+   */
+  Q_SCRIPTABLE QString title(int role) const;
+
 signals:
 
   /** Emitted when the terminal process starts. */
diff -Naur konsole/src/SessionManager.cpp konsole/src/SessionManager.cpp
--- konsole/src/SessionManager.cpp	2009-01-17 12:59:32.000000000 +0200
+++ apps/konsole/src/SessionManager.cpp	2009-04-26 18:40:18.668901000 +0300
@@ -68,6 +68,26 @@
 }
 #endif
 
+bool profileIndexLessThan(const Profile::Ptr &p1, const Profile::Ptr &p2)
+{
+    return p1->menuIndexAsInt() <= p2->menuIndexAsInt();
+}
+
+bool profileNameLessThan(const Profile::Ptr &p1, const Profile::Ptr &p2)
+{
+    return QString::localeAwareCompare(p1->name(), p2->name()) <= 0;
+}
+
+static void sortByIndexProfileList(QList<Profile::Ptr> &list)
+{
+   qStableSort(list.begin(), list.end(), profileIndexLessThan);
+}
+
+static void sortByNameProfileList(QList<Profile::Ptr> &list)
+{
+    qStableSort(list.begin(), list.end(), profileNameLessThan);
+}
+
 SessionManager::SessionManager()
     : _loadedAllProfiles(false)
     , _loadedFavorites(false)
@@ -82,7 +102,7 @@
     addProfile(_fallbackProfile);
 
     //locate and load default profile
-    KSharedConfigPtr appConfig = KGlobal::config();
+    KSharedConfigPtr appConfig = KSharedConfig::openConfig("konsolerc");
     const KConfigGroup group = appConfig->group( "Desktop Entry" );
     QString defaultSessionFilename = group.readEntry("DefaultProfile","Shell.profile");
 
@@ -146,7 +166,7 @@
 
     // load the profile
     ProfileReader* reader = 0;
-    if ( path.endsWith(".desktop") )
+    if ( path.endsWith(QLatin1String(".desktop")) )
         reader = 0; // new KDE3ProfileReader;
     else
         reader = new KDE4ProfileReader;
@@ -207,6 +227,53 @@
 
     _loadedAllProfiles = true;
 }
+
+void SessionManager::sortProfiles(QList<Profile::Ptr> &list)
+{
+
+    QList<Profile::Ptr> lackingIndices;
+    QList<Profile::Ptr> havingIndices;
+
+    for (int i = 0; i < list.size(); ++i)
+    {
+        // dis-regard the fallback profile
+        if (list.at(i)->path() == _fallbackProfile->property<QString>(Profile::Path))
+            continue;
+
+        if (list.at(i)->menuIndexAsInt() == 0)
+            lackingIndices.append(list.at(i));
+        else
+            havingIndices.append(list.at(i));
+    }
+
+    // sort by index
+    sortByIndexProfileList(havingIndices);
+
+    // sort alphabetically those w/o an index
+    sortByNameProfileList(lackingIndices);
+
+    // Put those with indices in sequential order w/o any gaps
+    int i = 0;
+    for (i = 0; i < havingIndices.size(); ++i)
+    {
+        Profile::Ptr tempProfile = havingIndices.at(i);
+        tempProfile->setProperty(Profile::MenuIndex, QString::number(i+1));
+        havingIndices.replace(i, tempProfile);
+    }
+    // Put those w/o indices in sequential order
+    for (int j = 0; j < lackingIndices.size(); ++j)
+    {
+        Profile::Ptr tempProfile = lackingIndices.at(j);
+        tempProfile->setProperty(Profile::MenuIndex, QString::number(j+1+i));
+        lackingIndices.replace(j, tempProfile);
+    }
+
+    // combine the 2 list: first those who had indices
+    list.clear();
+    list.append(havingIndices);
+    list.append(lackingIndices);
+}
+
 void SessionManager::saveState()
 {
     // save default profile
@@ -298,6 +365,14 @@
     session->deleteLater();
 }
 
+QList<Profile::Ptr> SessionManager::sortedFavorites()
+{
+    QList<Profile::Ptr> favorites = findFavorites().toList();
+
+    sortProfiles(favorites);
+    return favorites;
+}
+
 QList<Profile::Ptr> SessionManager::loadedProfiles() const
 {
     return _types.toList();
@@ -345,7 +420,7 @@
     ProfileGroup::Ptr group = info->asGroup();
     if (group)
     {
-        foreach(Profile::Ptr profile, group->profiles())
+        foreach(const Profile::Ptr &profile, group->profiles())
             changeProfile(profile,propertyMap,persistant);
         return;
     }
@@ -897,11 +972,3 @@
 
 #include "SessionManager.moc"
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/SessionManager.h konsole/src/SessionManager.h
--- konsole/src/SessionManager.h	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/SessionManager.h	2009-04-26 18:40:18.668901000 +0300
@@ -56,7 +56,7 @@
  * how to display them.  The favorite status of a profile can be altered using
  * setFavorite() and retrieved using isFavorite() 
  */
-class KDE_EXPORT SessionManager : public QObject
+class KONSOLEPRIVATE_EXPORT SessionManager : public QObject
 {
 Q_OBJECT
 
@@ -66,7 +66,8 @@
      * profiles.
      */
     SessionManager();
-    
+    void setMenuOrder();
+ 
     /** 
      * Destroys the SessionManager.  All running sessions should be closed (via closeAll()) and the 
      * SessionManager's state should be saved via saveState() before the SessionManager is destroyed.
@@ -91,6 +92,16 @@
      */
     QList<Profile::Ptr> loadedProfiles() const;
 
+    QList<Profile::Ptr> sortedFavorites();
+
+    /*
+     * Sorts the profile list by menuindex; those without an menuindex, sort by name.
+     *  The menuindex list is first and then the non-menuindex list.
+     *
+     * @param list The profile list to sort
+     */
+    void sortProfiles(QList<Profile::Ptr> &list);
+
     /**
      * Searches for available profiles on-disk and returns a list
      * of paths of profiles which can be loaded.
diff -Naur konsole/src/TabTitleFormatAction.cpp konsole/src/TabTitleFormatAction.cpp
--- konsole/src/TabTitleFormatAction.cpp	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/TabTitleFormatAction.cpp	2009-04-26 22:40:38.467133000 +0300
@@ -35,16 +35,17 @@
     { "%d" , I18N_NOOP("Current Directory (Short)") },
     { "%D" , I18N_NOOP("Current Directory (Long)") },
     { "%w" , I18N_NOOP("Window Title Set by Shell") },
-    { "%#" , I18N_NOOP("Session number") }
+    { "%#" , I18N_NOOP("Session Number") },
+    { "%u" , I18N_NOOP("User Name") }
 };
-const int TabTitleFormatAction::_localElementCount = 5;
+const int TabTitleFormatAction::_localElementCount = 6;
 const TabTitleFormatAction::Element TabTitleFormatAction::_remoteElements[] =
 {
     { "%u" , I18N_NOOP("User Name") },
     { "%h" , I18N_NOOP("Remote Host (Short)") },
     { "%H" , I18N_NOOP("Remote Host (Long)") },
     { "%w" , I18N_NOOP("Window Title Set by Shell") },
-    { "%#" , I18N_NOOP("Session number") }
+    { "%#" , I18N_NOOP("Session Number") }
 };
 const int TabTitleFormatAction::_remoteElementCount = 5;
 
diff -Naur konsole/src/TerminalCharacterDecoder.h konsole/src/TerminalCharacterDecoder.h
--- konsole/src/TerminalCharacterDecoder.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/TerminalCharacterDecoder.h	2009-04-20 18:42:12.995312000 +0300
@@ -55,8 +55,8 @@
      * and writes the string into an output QTextStream.
      *
      * @param characters An array of characters of length @p count.
+     * @param count The number of characters
      * @param properties Additional properties which affect all characters in the line
-     * @param output The output stream which receives the decoded text
      */
     virtual void decodeLine(const Character* const characters, 
                             int count,
diff -Naur konsole/src/TerminalDisplay.cpp konsole/src/TerminalDisplay.cpp
--- konsole/src/TerminalDisplay.cpp	2009-03-26 17:42:41.000000000 +0300
+++ apps/konsole/src/TerminalDisplay.cpp	2009-05-09 21:42:05.537809000 +0300
@@ -1264,6 +1264,8 @@
     QPoint cursorPos = mapFromGlobal(QCursor::pos());
     int cursorLine;
     int cursorColumn;
+    int scrollBarWidth = (_scrollbarLocation == ScrollBarLeft) ? _scrollBar->width() : 0;
+
     getCharacterPosition( cursorPos , cursorLine , cursorColumn );
     Character cursorCharacter = _image[loc(cursorColumn,cursorLine)];
 
@@ -1282,20 +1284,28 @@
         if ( spot->type() == Filter::HotSpot::Link ) {
             QRect r;
             if (spot->startLine()==spot->endLine()) {
-                r.setCoords( spot->startColumn()*_fontWidth + 1, spot->startLine()*_fontHeight + 1,
-                                 (spot->endColumn()-1)*_fontWidth - 1, (spot->endLine()+1)*_fontHeight - 1 ); 
+                r.setCoords( spot->startColumn()*_fontWidth + 1 + scrollBarWidth, 
+                             spot->startLine()*_fontHeight + 1,
+                             (spot->endColumn()-1)*_fontWidth - 1 + scrollBarWidth, 
+                             (spot->endLine()+1)*_fontHeight - 1 ); 
                 region |= r;
             } else {
-                r.setCoords( spot->startColumn()*_fontWidth + 1, spot->startLine()*_fontHeight + 1,
-                                 (_columns-1)*_fontWidth - 1, (spot->startLine()+1)*_fontHeight - 1 ); 
+                r.setCoords( spot->startColumn()*_fontWidth + 1 + scrollBarWidth, 
+                             spot->startLine()*_fontHeight + 1,
+                             (_columns-1)*_fontWidth - 1 + scrollBarWidth, 
+                             (spot->startLine()+1)*_fontHeight - 1 ); 
                 region |= r;
                 for ( int line = spot->startLine()+1 ; line < spot->endLine() ; line++ ) {
-                    r.setCoords( 0*_fontWidth + 1, line*_fontHeight + 1,
-                                 (_columns-1)*_fontWidth - 1, (line+1)*_fontHeight - 1 ); 
+                    r.setCoords( 0*_fontWidth + 1 + scrollBarWidth, 
+                                 line*_fontHeight + 1,
+                                 (_columns-1)*_fontWidth - 1 + scrollBarWidth,
+                                 (line+1)*_fontHeight - 1 ); 
                     region |= r;
                 }
-                r.setCoords( 0*_fontWidth + 1, spot->endLine()*_fontHeight + 1,
-                                 (spot->endColumn()-1)*_fontWidth - 1, (spot->endLine()+1)*_fontHeight - 1 ); 
+                r.setCoords( 0*_fontWidth + 1 + scrollBarWidth,
+                             spot->endLine()*_fontHeight + 1,
+                             (spot->endColumn()-1)*_fontWidth - 1 + scrollBarWidth,
+                             (spot->endLine()+1)*_fontHeight - 1 ); 
                 region |= r;
             }
         }
@@ -1330,9 +1340,10 @@
             // because the check below for the position of the cursor
             // finds it on the border of the target area
             QRect r;
-            r.setCoords( startColumn*_fontWidth + 1, line*_fontHeight + 1,
-                             endColumn*_fontWidth - 1, (line+1)*_fontHeight - 1 ); 
-                                                                           
+            r.setCoords( startColumn*_fontWidth + 1 + scrollBarWidth,
+                         line*_fontHeight + 1,
+                         endColumn*_fontWidth - 1 + scrollBarWidth,
+                         (line+1)*_fontHeight - 1 ); 
             // Underline link hotspots 
             if ( spot->type() == Filter::HotSpot::Link )
             {
@@ -1434,16 +1445,22 @@
          if (doubleWidth)
             _fixedFont = false;
          QString unistr(disstrU,p);
-         
+
+         // Create a text scaling matrix for double width and double height lines.
+         QMatrix textScale;
+
          if (y < _lineProperties.size())
          {
             if (_lineProperties[y] & LINE_DOUBLEWIDTH)
-                paint.scale(2,1);
-            
+                textScale.scale(2,1);
+
             if (_lineProperties[y] & LINE_DOUBLEHEIGHT)
-                   paint.scale(1,2);
+                textScale.scale(1,2);
          }
 
+         //Apply text scaling matrix.
+         paint.setWorldMatrix(textScale, true);
+
          //calculate the area in which the text will be drawn
          QRect textArea = QRect( _leftMargin+tLx+_fontWidth*x , _topMargin+tLy+_fontHeight*y , _fontWidth*len , _fontHeight);
         
@@ -1453,8 +1470,7 @@
          //transformation has been applied to the painter.  this ensures that 
          //painting does actually start from textArea.topLeft() 
          //(instead of textArea.topLeft() * painter-scale)    
-         QTransform inverted = paint.worldTransform().inverted();
-         textArea.moveTopLeft( inverted.map(textArea.topLeft()) );
+         textArea.moveTopLeft( textScale.inverted().map(textArea.topLeft()) );
          
          //paint text fragment
          drawTextFragment(    paint,
@@ -1467,7 +1483,7 @@
          _fixedFont = save__fixedFont;
      
          //reset back to single-width, single-height _lines 
-         paint.resetMatrix();
+         paint.setWorldMatrix(textScale.inverted(), true);
 
          if (y < _lineProperties.size()-1)
          {
@@ -1747,6 +1763,7 @@
 {
   int charLine = 0;
   int charColumn = 0;
+  int scrollBarWidth = (_scrollbarLocation == ScrollBarLeft) ? _scrollBar->width() : 0;
 
   getCharacterPosition(ev->pos(),charLine,charColumn); 
 
@@ -1759,20 +1776,28 @@
     _mouseOverHotspotArea = QRegion();
     QRect r;
     if (spot->startLine()==spot->endLine()) {
-        r.setCoords( spot->startColumn()*_fontWidth, spot->startLine()*_fontHeight,
-                         spot->endColumn()*_fontWidth, (spot->endLine()+1)*_fontHeight - 1 ); 
+        r.setCoords( spot->startColumn()*_fontWidth + scrollBarWidth, 
+                     spot->startLine()*_fontHeight,
+                     spot->endColumn()*_fontWidth + scrollBarWidth, 
+                     (spot->endLine()+1)*_fontHeight - 1 ); 
         _mouseOverHotspotArea |= r;
     } else {
-        r.setCoords( spot->startColumn()*_fontWidth, spot->startLine()*_fontHeight,
-                         _columns*_fontWidth - 1, (spot->startLine()+1)*_fontHeight ); 
+        r.setCoords( spot->startColumn()*_fontWidth + scrollBarWidth,
+                     spot->startLine()*_fontHeight,
+                     _columns*_fontWidth - 1 + scrollBarWidth,
+                     (spot->startLine()+1)*_fontHeight ); 
         _mouseOverHotspotArea |= r;
         for ( int line = spot->startLine()+1 ; line < spot->endLine() ; line++ ) {
-            r.setCoords( 0*_fontWidth, line*_fontHeight,
-                         _columns*_fontWidth, (line+1)*_fontHeight ); 
+            r.setCoords( 0*_fontWidth + scrollBarWidth, 
+                         line*_fontHeight,
+                         _columns*_fontWidth + scrollBarWidth,
+                         (line+1)*_fontHeight ); 
             _mouseOverHotspotArea |= r;
         }
-        r.setCoords( 0*_fontWidth, spot->endLine()*_fontHeight,
-                         spot->endColumn()*_fontWidth, (spot->endLine()+1)*_fontHeight ); 
+        r.setCoords( 0*_fontWidth + scrollBarWidth, 
+                     spot->endLine()*_fontHeight,
+                     spot->endColumn()*_fontWidth + scrollBarWidth, 
+                     (spot->endLine()+1)*_fontHeight ); 
         _mouseOverHotspotArea |= r;
     }
     // display tooltips when mousing over links
diff -Naur konsole/src/TerminalDisplay.h konsole/src/TerminalDisplay.h
--- konsole/src/TerminalDisplay.h	2009-03-26 17:42:41.000000000 +0300
+++ apps/konsole/src/TerminalDisplay.h	2009-03-05 08:12:37.433789000 +0200
@@ -29,6 +29,7 @@
 // Konsole
 #include "Filter.h"
 #include "Character.h"
+#include "konsole_export.h"
 
 class QDrag;
 class QDragEnterEvent;
@@ -63,7 +64,7 @@
  *
  * TODO More documentation
  */
-class TerminalDisplay : public QWidget
+class KONSOLEPRIVATE_EXPORT TerminalDisplay : public QWidget
 {
    Q_OBJECT
 
diff -Naur konsole/src/tests/CMakeLists.txt konsole/src/tests/CMakeLists.txt
--- konsole/src/tests/CMakeLists.txt	2008-06-26 04:33:07.000000000 +0300
+++ apps/konsole/src/tests/CMakeLists.txt	2009-02-07 05:04:24.319744000 +0200
@@ -1,7 +1,7 @@
 set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR})
 include_directories( ${KDE4_KPTY_INCLUDES} ${KDE4_KPARTS_INCLUDES} ${QT_QTTEST_INCLUDES})
 
-set(KONSOLE_TEST_LIBS ${QT_QTTEST_LIBRARY} kdeinit_konsole)
+set(KONSOLE_TEST_LIBS ${QT_QTTEST_LIBRARY} konsoleprivate)
 
 kde4_add_executable(PartTest TEST PartTest.cpp)
 target_link_libraries(PartTest ${KDE4_KPARTS_LIBS} ${KDE4_KPTY_LIBS} ${KONSOLE_TEST_LIBS})
diff -Naur konsole/src/ViewContainer.cpp konsole/src/ViewContainer.cpp
--- konsole/src/ViewContainer.cpp	2009-03-26 17:42:41.000000000 +0300
+++ apps/konsole/src/ViewContainer.cpp	2009-04-08 18:37:27.598630000 +0300
@@ -428,20 +428,18 @@
     _stackWidget = new QStackedWidget();
     _tabBar = new ViewContainerTabBar(_containerWidget,this);
     _tabBar->setDrawBase(true);
+    _tabBar->setDocumentMode(true);
 
-    const int cornerButtonWidth = 50;
-    _newTabButton = new KPushButton(KIcon("tab-new"),QString(),_containerWidget);
-    // The button width here is hard coded, it would be better to use the value from
-    // the current style (see QTabWidget::setUpLayout())
-    _newTabButton->setFixedWidth(cornerButtonWidth);
-    _newTabButton->setFlat(true);
+    _newTabButton = new QToolButton(_containerWidget);
+    _newTabButton->setIcon(KIcon("tab-new"));
+    _newTabButton->adjustSize();
     // new tab button is initially hidden, it will be shown when setFeatures() is called
     // with the QuickNewView flag enabled
     _newTabButton->setHidden(true);
-   
-    _closeTabButton = new KPushButton(KIcon("tab-close"),QString(),_containerWidget);
-    _closeTabButton->setFixedWidth(cornerButtonWidth);
-    _closeTabButton->setFlat(true);
+
+    _closeTabButton = new QToolButton(_containerWidget);
+    _closeTabButton->setIcon(KIcon("tab-close"));
+    _closeTabButton->adjustSize();
     _closeTabButton->setHidden(true);
 
     connect( _tabBar , SIGNAL(currentChanged(int)) , this , SLOT(currentTabChanged(int)) );
@@ -488,7 +486,7 @@
 }
 void TabbedViewContainer::setNewViewMenu(QMenu* menu)
 {
-  _newTabButton->setDelayedMenu(menu); 
+  _newTabButton->setMenu(menu);
 }
 ViewContainer::Features TabbedViewContainer::supportedFeatures() const
 { 
diff -Naur konsole/src/ViewContainer.h konsole/src/ViewContainer.h
--- konsole/src/ViewContainer.h	2009-01-17 12:59:32.000000000 +0200
+++ apps/konsole/src/ViewContainer.h	2009-04-08 18:37:27.598630000 +0300
@@ -31,7 +31,6 @@
 
 // KDE
 #include <KTabBar>
-#include <KPushButton>
 
 class QSpacerItem;
 class QStackedWidget;
@@ -454,8 +453,8 @@
     QSpacerItem* _tabBarSpacer;
     TabbedViewContainerLayout* _layout;
     QHBoxLayout* _tabBarLayout;
-    KPushButton* _newTabButton;
-    KPushButton* _closeTabButton;
+    QToolButton* _newTabButton;
+    QToolButton* _closeTabButton;
 
     static const int TabBarSpace = 2;
 };
diff -Naur konsole/src/ViewManager.cpp konsole/src/ViewManager.cpp
--- konsole/src/ViewManager.cpp	2009-05-23 12:55:04.815975944 +0300
+++ apps/konsole/src/ViewManager.cpp	2009-04-12 03:27:19.821464000 +0300
@@ -35,6 +35,7 @@
 #include <KLocale>
 #include <KToggleAction>
 #include <KXMLGUIFactory>
+#include <QStringList>
 
 // Konsole
 #include "ColorScheme.h"
@@ -45,6 +46,8 @@
 #include "SessionManager.h"
 #include "ViewContainer.h"
 #include "ViewSplitter.h"
+#include "konsoleadaptor.h"
+#include "Profile.h"
 
 using namespace Konsole;
 
@@ -85,6 +88,11 @@
             SLOT(profileChanged(Profile::Ptr)) );
     connect( SessionManager::instance() , SIGNAL(sessionUpdated(Session*)) , this,
             SLOT(updateViewsForSession(Session*)) );
+
+    //prepare DBus communication
+    new KonsoleAdaptor(this);
+    QDBusConnection::sessionBus().registerObject(QLatin1String("/Konsole"), this);
+
 }
 
 ViewManager::~ViewManager()
@@ -648,6 +656,15 @@
 
     if ( collection )
     {
+        // FIXME: The following disables certain actions for the KPart that it
+        // doesn't actually have a use for, to avoid polluting the action/shortcut
+        // namespace of an application using the KPart (otherwise, a shortcut may
+        // be in use twice, and the user gets to see an "ambiguous shortcut over-
+        // load" error dialog). However, this approach sucks - it's the inverse of
+        // what it should be. Rather than disabling actions not used by the KPart,
+        // a method should be devised to only enable those that are used, perhaps
+        // by using a separate action collection.
+
         QAction* action;
 
         action = collection->action( "next-view" );
@@ -664,6 +681,12 @@
 
         action = collection->action( "rename-session" );
         if ( action ) action->setEnabled( _navigationMethod != NoNavigation );
+
+        action = collection->action( "move-view-left" );
+        if ( action ) action->setEnabled( _navigationMethod != NoNavigation );
+
+        action = collection->action( "move-view-right" );
+        if ( action ) action->setEnabled( _navigationMethod != NoNavigation );
     }
 }
 
@@ -890,7 +913,7 @@
         Q_ASSERT(view);
         Session *session = _sessionMap[view];
         ids << SessionManager::instance()->getRestoreId(session);
-        if (view == activeview) group.writeEntry("ActiveTabIndex", tab);
+        if (view == activeview) group.writeEntry("Active", tab);
         unique.insert(session, 1);
         tab++;
     }
@@ -910,37 +933,24 @@
 void ViewManager::restoreSessions(const KConfigGroup& group)
 {
     QList<int> ids = group.readEntry("Sessions", QList<int>());
+    int activeTab  = group.readEntry("Active", 0);
+    TerminalDisplay *display = 0;
 
-    if (ids.isEmpty())
+    int tab = 1;
+    foreach(int id, ids)
     {
-        // Incomplete session file, e.g. from a KDE3 session. Create a
-        // default session so that we don't end up with an empty window.
-        kWarning() << i18n("Unable to restore saved tabs. Possibly unsupported KDE 3 session data.");
-        Session *session = SessionManager::instance()->createSession();
+        Session *session = SessionManager::instance()->idToSession(id);
         createView(session);
-        session->run();
+        if (!session->isRunning())
+            session->run();
+        if (tab++ == activeTab)
+            display = dynamic_cast<TerminalDisplay*>(activeView());
     }
-    else
-    {
-        int activeTab = group.readEntry("ActiveTabIndex", 0);
-        int tab = 1;
-        QWidget *focusView = 0;
 
-        foreach(int id, ids)
-        {
-            Session *session = SessionManager::instance()->idToSession(id);
-            createView(session);
-            if (!session->isRunning())
-                session->run();
-            if (tab++ == activeTab)
-                focusView = activeView();
-        }
-
-        if (focusView)
-        {
-            _viewSplitter->activeContainer()->setActiveView(focusView);
-            focusView->setFocus(Qt::OtherFocusReason);
-        }
+    if (display)
+    {
+        _viewSplitter->activeContainer()->setActiveView(display);
+        display->setFocus(Qt::OtherFocusReason);
     }
 }
 
@@ -949,13 +959,89 @@
     return qHash((TerminalDisplay*)display);
 }
 
+int ViewManager::sessionCount()
+{
+    return this->_sessionMap.size();
+}
+
+int ViewManager::currentSession()
+{
+    QHash<TerminalDisplay*,Session*>::iterator i;
+    for (i = this->_sessionMap.begin(); i != this->_sessionMap.end(); ++i)
+        if (i.key()->isVisible())
+            return i.value()->sessionId();
+    return -1;
+}
+
+int ViewManager::newSession()
+{
+    Profile::Ptr profile = profile = SessionManager::instance()->defaultProfile();
+    Session* session = SessionManager::instance()->createSession(profile);
+
+    this->createView(session);
+    session->run();
+
+    return session->sessionId();
+}
+
+int ViewManager::newSession(QString profile, QString directory)
+{
+    QList<Profile::Ptr> profilelist = SessionManager::instance()->loadedProfiles();
+    QList<Profile::Ptr>::iterator i = profilelist.begin();
+
+    Profile::Ptr profileptr = SessionManager::instance()->defaultProfile();
+
+    while (i != profilelist.end() )
+    {
+        Profile::Ptr ptr = *i;
+        if ( ptr->name().compare(profile) == 0)
+            profileptr = ptr;
+        i++;
+    }
+
+    Session* session = SessionManager::instance()->createSession(profileptr);
+    session->setInitialWorkingDirectory(directory);
+
+    this->createView(session);
+    session->run();
+
+    return session->sessionId();
+}
+
+QStringList ViewManager::profileList()
+{
+    QList<Profile::Ptr> profilelist = SessionManager::instance()->loadedProfiles();
+    QList<Profile::Ptr>::iterator i = profilelist.begin();
+    QStringList list;
+    while (i != profilelist.end() )
+    {
+        Profile::Ptr ptr = *i;
+        list.push_back(ptr->name());
+        i++;
+    }
+
+    return list;
+}
+
+void ViewManager::nextSession()
+{
+    this->nextView();
+}
+
+void ViewManager::prevSession()
+{
+    this->previousView();
+}
+
+void ViewManager::moveSessionLeft()
+{
+    this->moveActiveViewLeft();
+}
+
+void ViewManager::moveSessionRight()
+{
+    this->moveActiveViewRight();
+}
+
 #include "ViewManager.moc"
 
-/*
-  Local Variables:
-  mode: c++
-  c-file-style: "stroustrup"
-  indent-tabs-mode: nil
-  tab-width: 4
-  End:
-*/
diff -Naur konsole/src/ViewManager.h konsole/src/ViewManager.h
--- konsole/src/ViewManager.h	2008-10-09 12:46:34.000000000 +0300
+++ apps/konsole/src/ViewManager.h	2009-04-20 19:18:10.216271000 +0300
@@ -65,9 +65,10 @@
  * user interface elements specific to each display/session pair.
  *
  */
-class ViewManager : public QObject
+class KONSOLEPRIVATE_EXPORT ViewManager : public QObject
 {
 Q_OBJECT
+Q_CLASSINFO("D-Bus Interface", "org.kde.konsole.Konsole")
 
 public:
     /** 
@@ -201,6 +202,46 @@
     /** Requests creation of a new view, with the selected profile. */
     void newViewRequest(Profile::Ptr);
 
+public slots:
+    /** DBus slot that returns the number of sessions in the current view. */
+    int sessionCount();
+
+    /** DBus slot that returns the current (active) session window */
+    int currentSession();
+
+    /** DBus slot that creates a new session in the current view.
+     * @param profile the name of the profile to be used
+     * @param directory the working directory where the session is
+     * started.
+     */
+    int newSession(QString profile, QString directory);
+
+    // DBus slot that returns a string list of defined (known) profiles
+    QStringList profileList();
+
+    /** DBus slot that creates a new session in the current view with the associated
+      * default profile and the default working directory
+      */
+    int newSession();
+
+    /** DBus slot that changes the view port to the next session */
+    void nextSession();
+
+    /** DBus slot that changes the view port to the previous session */
+    void prevSession();
+
+    /** DBus slot that switches the current session (as returned by
+      * currentSession()) with the left (or previous) one in the
+      * navigation tab.
+      */
+    void moveSessionLeft();
+
+    /** DBus slot that Switches the current session (as returned by
+      * currentSession()) with the right (or next) one in the navigation
+      * tab.
+      */
+    void moveSessionRight();
+
 private slots:
     // called when the "Split View Left/Right" menu item is selected
     void splitLeftRight();
diff -Naur konsole/src/ViewProperties.h konsole/src/ViewProperties.h
--- konsole/src/ViewProperties.h	2008-09-26 17:55:51.000000000 +0300
+++ apps/konsole/src/ViewProperties.h	2009-02-07 05:04:24.319744000 +0200
@@ -29,6 +29,9 @@
 // KDE
 #include <KUrl>
 
+// Konsole
+#include "konsole_export.h"
+
 namespace Konsole
 {
 
@@ -39,7 +42,7 @@
  * This can be used by navigation widgets in a ViewContainer sub-class to provide a tab, label or other
  * item for switching between views.
  */
-class ViewProperties : public QObject 
+class KONSOLEPRIVATE_EXPORT ViewProperties : public QObject 
 {
 Q_OBJECT
 
diff -Naur konsole/tests/esc.c konsole/tests/esc.c
--- konsole/tests/esc.c	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/tests/esc.c	1970-01-01 02:00:00.000000000 +0200
@@ -1,414 +0,0 @@
-/*
-                               VTTEST.C
-
-         Written Novemeber 1983 - July 1984 by Per Lindberg,
-         Stockholm University Computer Center (QZ), Sweden.
-
-                  THE MAD PROGRAMMER STRIKES AGAIN!
-
-                   This software is (c) 1984 by QZ
-               Non-commercial use and copying allowed.
-
-If you are developing a commercial product, and use this program to do
-it, and that product is successful, please send a sum of money of your
-choice to the address below.
-
-*/
-#include "header.h"
-
-println(s) char *s; {
-  printf("%s\n", s);
-}
-
-esc(s) char *s; {
-  printf("%c%s", 27, s);
-}
-
-esc2(s1, s2) char s1, s2; {
-  printf("%c%s%s", 27, s1, s2);
-}
-
-brcstr(ps, c) char *ps, c; {
-  printf("%c[%s%c", 27, ps, c);
-}
-
-brc(pn,c) int pn; char c; {
-  printf("%c[%d%c", 27, pn, c);
-}
-
-brc2(pn1, pn2 ,c) int pn1, pn2; char c; {
-  printf("%c[%d;%d%c", 27, pn1, pn2, c);
-}
-
-cub(pn) int pn; {  /* Cursor Backward */
-  brc(pn,'D');
-}
-cud(pn) int pn; {  /* Cursor Down */
-  brc(pn,'B');
-}
-cuf(pn) int pn; {  /* Cursor Forward */
-  brc(pn,'C');
-}
-cup(pn1, pn2) int pn1, pn2; {  /* Cursor Position */
-  brc2(pn1, pn2, 'H');
-}
-cuu(pn) int pn; {  /* Cursor Up */
-  brc(pn,'A');
-}
-da() {  /* Device Attributes */
-  brc(0,'c');
-}
-decaln() {  /* Screen Alignment Display */
-  esc("#8");
-}
-decdhl(lower) int lower; {  /* Double Height Line (also double width) */
-  if (lower) esc("#4");
-  else       esc("#3");
-}
-decdwl() {  /* Double Wide Line */
-  esc("#6");
-}
-deckpam() {  /* Keypad Application Mode */
-  esc("=");
-}
-deckpnm() {  /* Keypad Numeric Mode */
-  esc(">");
-}
-decll(ps) char *ps; {  /* Load LEDs */
-  brcstr(ps, 'q');
-}
-decrc() {  /* Restore Cursor */
-  esc("8");
-}
-decreqtparm(pn) int pn; {  /* Request Terminal Parameters */
-  brc(pn,'x');
-}
-decsc() {  /* Save Cursor */
-  esc("7");
-}
-decstbm(pn1, pn2) int pn1, pn2; {  /* Set Top and Bottom Margins */
-  if (pn1 || pn2) brc2(pn1, pn2, 'r');
-  else            esc("[r");
-  /* Good for >24-line terminals */
-}
-decswl() {  /* Single With Line */
-  esc("#5");
-}
-dectst(pn) int pn; {  /* Invoke Confidence Test */
-  brc2(2, pn, 'y');
-}
-dsr(pn) int pn; {  /* Device Status Report */
-  brc(pn, 'n');
-}
-ed(pn) int pn; {  /* Erase in Display */
-  brc(pn, 'J');
-}
-el(pn) int pn; {  /* Erase in Line */
-  brc(pn,'K');
-}
-hts() {  /* Horizontal Tabulation Set */
-  esc("H");
-}
-hvp(pn1, pn2) int pn1, pn2; {  /* Horizontal and Vertical Position */
-  brc2(pn1, pn2, 'f');
-}
-ind() {  /* Index */
-  esc("D");
-}
-nel() {  /* Next Line */
-  esc("E");
-}
-ri() {  /* Reverse Index */
-  esc("M");
-}
-ris() { /*  Reset to Initial State */
-  esc("c");
-}
-rm(ps) char *ps; {  /* Reset Mode */
-  brcstr(ps, 'l');
-}
-scs(g,c) int g; char c; {  /* Select character Set */
-  printf("%c%c%c%c%c%c%c", 27, g ? ')' : '(', c,
-                           27, g ? '(' : ')', 'B',
-			   g ? 14 : 15);
-}
-sgr(ps) char *ps; {  /* Select Graphic Rendition */
-  brcstr(ps, 'm');
-}
-sm(ps) char *ps; {  /* Set Mode */
-  brcstr(ps, 'h');
-}
-tbc(pn) int pn; {  /* Tabulation Clear */
-  brc(pn, 'g');
-}
-
-vt52cup(l,c) int l,c; {
-  printf("%cY%c%c", 27, l + 31, c + 31);
-}
-
-char inchar() {
-
-  /*
-   *   Wait until a character is typed on the terminal
-   *   then read it, without waiting for CR.
-   */
-
-#ifdef UNIX
-  int lval, waittime, getpid(); static int val; char ch;
-
-  fflush(stdout);
-  lval = val;
-  brkrd = 0;
-  reading = 1;
-  read(0,&ch,1);
-  reading = 0;
-  if (brkrd)
-    val = 0177;
-  else
-    val = ch;
-  if ((val==0177) && (val==lval))
-    kill(getpid(), (int) SIGTERM);
-#endif
-#ifdef SARG10
-  int val, waittime;
-
-  waittime = 0;
-  while(!uuo(051,2,&val)) {		/* TTCALL 2, (INCHRS)	*/
-    zleep(100);				/* Wait 0.1 seconds	*/
-    if ((waittime += ttymode) > 600)	/* Time-out, in case	*/
-      return('\177');			/* of hung in ttybin(1)	*/
-  }
-#endif
-#ifdef SARG20	/* try to fix a time-out function */
-  int val, waittime;
-
-  waittime = 0;
-  while(jsys(SIBE,2,_PRIIN) == 0) {	/* Is input empty? */
-    zleep(100);
-    if ((waittime += ttymode) > 600)
-      return('\177');
-  }
-  ejsys(BIN,_PRIIN);
-  val = jsac[2];
-#endif
-  return(val);
-}
-
-char *instr() {
-
-  /*
-   *   Get an unfinished string from the terminal:
-   *   wait until a character is typed on the terminal,
-   *   then read it, and all other available characters.
-   *   Return a pointer to that string.
-   */
-
-
-  int i, val, crflag; long l1; char ch;
-  static char result[80];
-
-  i = 0;
-  result[i++] = inchar();
-/* Wait 0.1 seconds (1 second in vanilla UNIX) */
-#ifdef SARG10
-  if (trmop(01031,0) < 5) zleep(500); /* wait longer if low speed */
-  else                    zleep(100);
-#else
-  zleep(100);
-#endif
-#ifdef UNIX
-  fflush(stdout);
-#ifdef XENIX
-  while(rdchk(0)) {
-    read(0,result+i,1);
-    if (i++ == 78) break;
-  }
-#else
-#ifdef SIII
-  while(read(2,result+i,1) == 1)
-    if (i++ == 78) break;
-#else
-  while(ioctl(0,FIONREAD,&l1), l1 > 0L) {
-    while(l1-- > 0L) {
-      read(0,result+i,1);
-      if (i++ == 78) goto out1;
-    }
-  }
-out1:
-#endif
-#endif
-#endif
-#ifdef SARG10
-  while(uuo(051,2,&val)) {	/* TTCALL 2, (INCHRS)  */
-    if (!(val == '\012' && crflag))	/* TOPS-10 adds LF to CR */
-      result[i++] = val;
-    crflag = val == '\015';
-    if (i == 79) break;
-    zleep(50);          /* Wait 0.05 seconds */
-  }
-#endif
-#ifdef SARG20
-  while(jsys(SIBE,2,_PRIIN) != 0) {	/* read input until buffer is empty */
-    ejsys(BIN,_PRIIN);
-    result[i++] = jsac[2];
-    if (i == 79) break;
-    zleep(50);		/* Wait 0.05 seconds */
-  }
-#endif
-  result[i] = '\0';
-  return(result);
-}
-
-ttybin(bin) int bin; {
-#ifdef SARG10
-  #define OPEN 050
-  #define IO_MOD 0000017
-  #define _IOPIM 2
-  #define _IOASC 0
-  #define _TOPAG 01021
-  #define _TOSET 01000
-
-  int v;
-  static int arglst[] = {
-    _IOPIM,
-    `TTY`,
-    0    
-  };
-  arglst[0] = bin ? _IOPIM : _IOASC;
-  v = uuo(OPEN, 1, &arglst[0]);
-  if (!v) { printf("OPEN failed"); exit(); }
-  trmop(_TOPAG + _TOSET, bin ? 0 : 1);
-  ttymode = bin;
-#endif
-#ifdef SARG20
-  /*	TTYBIN will set the line in BINARY/ASCII mode
-   *	BINARY mode is needed to send control characters
-   *	Bit 28 must be 0 (we don't flip it).
-   *	Bit 29 is used for the mode change.
-   */
-
-  #define _TTASC 0000100
-  #define _MOXOF 0000043
-
-  int v;
-
-  ejsys(RFMOD,_CTTRM);
-  v = ejsys(SFMOD,_CTTRM, bin ? (~_TTASC & jsac[2]) : (_TTASC | jsac[2]));
-  if (v) { printf("SFMOD failed"); exit(); }
-  v = ejsys(MTOPR,_CTTRM,_MOXOF,0);
-  if (v) { printf("MTOPR failed"); exit(); }
-#endif
-}
-
-#ifdef SARG20
-/*
- *	SUPERBIN turns off/on all input character interrupts
- *	This affects ^C, ^O, ^T
- *	Beware where and how you use it !!!!!!!
- */
-
-superbin(bin) int bin; {
-  int v;
-
-  v = ejsys(STIW,(0//-5), bin ? 0 : -1);
-  if (v) { printf("STIW superbinary setting failed"); exit(); }
-  ttymode = bin;
-}
-
-/*
- *	PAGE affects the ^S/^Q handshake.
- *	Set bit 34 to turn it on. Clear it for off.
- */
-
-page(bin) int bin; {
-  int v;
-
-  #define TT_PGM 0000002
-
-  ejsys(RFMOD,_CTTRM);	/* Get the current terminal status */
-  v = ejsys(STPAR,_CTTRM, bin ? (TT_PGM | jsac[2]) : (~TT_PGM & jsac[2]));
-  if (v) { printf("STPAR failed"); exit(); }
-}
-#endif
-
-trmop(fc,arg) int fc, arg; {
-#ifdef SARG10
-  int retvalp;
-  int arglst[3];
-
-  /* TRMOP is a TOPS-10 monitor call that does things to the terminal. */
-
-  /* Find out TTY nbr (PA1050 barfs if TRMOP get -1 instead of udx)    */
-  /* A TRMNO monitor call returns the udx (Universal Device Index)     */
-
-  arglst[0] = fc;		/* function code	*/
-  arglst[1] = calli(0115, -1);	/* udx, TRMNO. UUO	*/
-  arglst[2] = arg;		/* Optional argument	*/
-
-  if (calli(0116, 3 // &arglst[0], &retvalp))           /* TRMOP. UUO */
-  return (retvalp);
-  else {
-    printf("?Error return in TRMOP.");
-    exit();
-  }
-#endif
-}
-
-inputline(s) char *s; {
-  scanf("%s",s);
-#ifdef SARG10
-  readnl();
-#endif
-#ifdef SARG20
-  readnl();
-#endif
-}
-
-inflush() {
-
-  /*
-   *   Flush input buffer, make sure no pending input character
-   */
-
-  int val;
-
-#ifdef UNIX
-#ifdef XENIX
-  while(rdchk(0)) read(0,&val,1);
-#else
-#ifdef SIII
-  while(read(2,&val,1));
-#else
-  long l1;
-  ioctl (0, FIONREAD, &l1);
-  while(l1-- > 0L) read(0,&val,1);
-#endif
-#endif
-#endif
-#ifdef SARG10
-  while(uuo(051,2,&val))	/* TTCALL 2, (INCHRS)  */
-    ;
-#endif
-#ifdef SARG20
-  ejsys(CFIBF,_PRIIN);		/* Clear input buffer */
-#endif
-}
-
-zleep(t) int t; {
-
-/*
- *    Sleep and do nothing (don't waste CPU) for t milliseconds
- */
-
-#ifdef SARG10
-  calli(072,t);		/* (HIBER) t milliseconds */
-#endif
-#ifdef SARG20
-  ejsys(DISMS,t);	/* DISMISS for t milliseconds */
-#endif
-#ifdef UNIX
-  t = t / 1000;
-  if (t == 0) t = 1;
-  sleep(t);		/* UNIX can only sleep whole seconds */
-#endif
-}
diff -Naur konsole/tests/header.h konsole/tests/header.h
--- konsole/tests/header.h	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/tests/header.h	1970-01-01 02:00:00.000000000 +0200
@@ -1,70 +0,0 @@
-/*
-                               VTTEST.C
-
-         Written Novemeber 1983 - July 1984 by Per Lindberg,
-         Stockholm University Computer Center (QZ), Sweden.
-
-                  THE MAD PROGRAMMER STRIKES AGAIN!
-
-                   This software is (c) 1984 by QZ
-               Non-commercial use and copying allowed.
-
-If you are developing a commercial product, and use this program to do
-it, and that product is successful, please send a sum of money of your
-choice to the address below.
-
-*/
-#define VERSION "1.7b 1985-04-19"
-
-/* Choose one of these */
-
-/* #define XENIX        /* XENIX implies UNIX                           */
-/* #define SIII         /* SIII  implies UNIX, (NDELAY a la System III) */
-#define UNIX            /* UNIX                                         */
-#define TERMIO
-/* #define VMS          /* VMS not done yet -- send me your version!!!! */
-/* #define SARG20       /* Sargasso C for TOPS-20                       */
-/* #define SARG10       /* Sargasso C for TOPS-10                       */
-
-/* These #ifdef:s are implementation dependent stuff for the Sargasso C */
-/* Unix C barfs on directives like "#strings", so we keep them	        */
-/* indented. Then unix c can't find them, but Sargasso C *can*.		*/
-/* Admittedly kludgey, but it works...)					*/
-#ifdef SARG10
-  #define _UNIXCON  /* Make UNIX-flavored I/O on TOPS */
-  #strings low      /* put strings in lowseg mem so we can modify them. */
-#endif
-#ifdef SARG20
-  #define _UNIXCON  /* Make UNIX-flavored I/O on TOPS */
-  #strings low      /* put strings in lowseg mem so we can modify them. */
-  #include <TOPS20.HDR>
-#endif
-
-#include <stdio.h>
-
-
-#ifdef UNIX
-#include <ctype.h>
-#ifdef TERMIO
-# include <termio.h>
-#else
-# include <sgtty.h>
-#endif
-#include <signal.h>
-#include <setjmp.h>
-jmp_buf intrenv;
-
-#ifdef TERMIO
-struct termio termioOrg, termioNew;
-#else
-struct sgttyb sgttyOrg, sgttyNew;
-#endif
-
-char stdioBuf[BUFSIZ];
-int brkrd, reading;
-extern onterm(), onbrk();
-#ifdef SIII
-#include <fcntl.h>
-#endif
-#endif
-int ttymode;
diff -Naur konsole/tests/main.c konsole/tests/main.c
--- konsole/tests/main.c	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/tests/main.c	1970-01-01 02:00:00.000000000 +0200
@@ -1,2083 +0,0 @@
-/*
-                               VTTEST.C
-
-         Written Novemeber 1983 - July 1984 by Per Lindberg,
-         Stockholm University Computer Center (QZ), Sweden.
-
-                  THE MAD PROGRAMMER STRIKES AGAIN!
-
-                   This software is (c) 1984 by QZ
-               Non-commercial use and copying allowed.
-
-If you are developing a commercial product, and use this program to do
-it, and that product is successful, please send a sum of money of your
-choice to the address below.
-
-*/
-
-#include "header.h"
-
-char inchar(), *instr(), *lookup();
-
-struct table {
-    int key;
-    char *msg;
-} paritytable[] = {
-    { 1, "NONE" },
-    { 4, "ODD"  },
-    { 5, "EVEN" },
-    { -1, "" }
-},nbitstable[] = {
-    { 1, "8" },
-    { 2, "7" },
-    { -1,"" }
-},speedtable[] = {
-    {   0,    "50" },
-    {   8,    "75" },
-    {  16,   "110" },
-    {  24,   "132.5"},
-    {  32,   "150" },
-    {  40,   "200" },
-    {  48,   "300" },
-    {  56,   "600" },
-    {  64,  "1200" },
-    {  72,  "1800" },
-    {  80,  "2000" },
-    {  88,  "2400" },
-    {  96,  "3600" },
-    { 104,  "4800" },
-    { 112,  "9600" },
-    { 120, "19200" },
-    { -1, "" }
-};
-
-main() {
-
-  int menuchoice;
-
-  static char *mainmenu[] = {
-      "Exit",
-      "Test of cursor movements",
-      "Test of screen features",
-      "Test of character sets",
-      "Test of double-sized characters",
-      "Test of keyboard",
-      "Test of terminal reports",
-      "Test of VT52 mode",
-      "Test of VT102 features (Insert/Delete Char/Line)",
-      "Test of known bugs",
-      "Test of reset and self-test",
-      ""
-    };
-
-#ifdef UNIX
-  initterminal(setjmp(intrenv));
-  signal(SIGINT, onbrk);
-  signal(SIGTERM, onterm);
-  reading = 0;
-#else
-  initterminal(0);
-#endif
-  do {
-#ifdef SARG20
-    ttybin(1);	/* set line to binary mode again. It's reset somehow!! */
-#endif
-    ed(2);
-    cup(5,10); printf("VT100 test program, version %s", VERSION);
-    cup(7,10); println("Choose test type:");
-    menuchoice = menu(mainmenu);
-    switch (menuchoice) {
-      case 1:  tst_movements();   break;
-      case 2:  tst_screen();      break;
-      case 3:  tst_characters();  break;
-      case 4:  tst_doublesize();  break;
-      case 5:  tst_keyboard();    break;
-      case 6:  tst_reports();     break;
-      case 7:  tst_vt52();        break;
-      case 8:  tst_insdel();      break;
-      case 9:  tst_bugs();        break;
-      case 10: tst_rst();         break;
-    }
-  } while (menuchoice);
-  bye();
-}
-
-tst_movements() {
-
-  /* Test of:
-     CUF (Cursor Forward)
-     CUB (Cursor Backward)
-     CUD (Cursor Down)      IND (Index)  NEL (Next Line)
-     CUU (Cursor Up)        RI  (Reverse Index)
-     CUP (Cursor Position)  HVP (Horizontal and Vertical Position)
-     ED  (Erase in Display)
-     EL  (Erase in Line)
-     DECALN (Screen Alignment Display)
-     <CR> <BS>
-     Cursor control characters inside CSI sequences
-  */
-
-  int i, row, col, pass, width, hlfxtra;
-  char c, *ctext = "This is a correct sentence";
-
-  for (pass = 0; pass <= 1; pass++) {
-    if (pass == 0) { rm("?3"); width =  80; hlfxtra =  0; }
-    else           { sm("?3"); width = 132; hlfxtra = 26; }
-
-    decaln();
-    cup( 9,10+hlfxtra); ed(1);
-    cup(18,60+hlfxtra); ed(0); el(1);
-    cup( 9,71+hlfxtra); el(0);
-    for (row = 10; row <= 16; row++) {
-      cup(row, 10+hlfxtra); el(1);
-      cup(row, 71+hlfxtra); el(0);
-    }
-    cup(17,30); el(2);
-    for (col = 1; col <= width; col++) {
-      hvp(24, col); printf("*");
-      hvp( 1, col); printf("*");
-    }
-    cup(2,2);
-    for (row = 2; row <= 23; row++) {
-      printf("+");
-      cub(1);
-      ind();
-    }
-    cup(23,width-1);
-    for (row = 23; row >=2; row--) {
-      printf("+");
-      cub(1); ri();
-    }
-    cup(2,1);
-    for (row = 2; row <= 23; row++) {
-      printf("*");  cup(row, width);
-      printf("*");
-      cub(10);
-      if (row < 10) nel();
-      else          printf("\n");
-    }
-    cup(2,10);
-    cub(42+hlfxtra); cuf(2);
-    for (col = 3; col <= width-2; col++) {
-      printf("+");
-      cuf(0); cub(2); cuf(1);
-    }
-    cup(23,70+hlfxtra);
-    cuf(42+hlfxtra); cub(2);
-    for (col = width-2; col >= 3; col--) {
-      printf("+");
-      cub(1); cuf(1); cub(0); printf("%c", 8);
-    }
-    cup( 1, 1); cuu(10); cuu(1); cuu(0);
-    cup(24,width); cud(10); cud(1); cud(0);
-
-    cup(10,12+hlfxtra);
-    for (row = 10; row <= 15; row++) {
-      for (col = 12+hlfxtra; col <= 69+hlfxtra; col++) printf(" ");
-      cud(1); cub(58);
-    }
-    cuu(5); cuf(1);
-    printf("The screen should be cleared,  and have an unbroken bor-");
-    cup(12,13+hlfxtra);
-    printf("der of *'s and +'s around the edge,   and exactly in the");
-    cup(13,13+hlfxtra);
-    printf("middle  there should be a frame of E's around this  text");
-    cup(14,13+hlfxtra);
-    printf("with  one (1) free position around it.    ");
-    holdit();
-  }
-  rm("?3");
-
-  ed(2);
-  cup(1,1);
-  println("Test of cursor-control characters inside ESC sequences.");
-  println("Below should be two identical lines:");
-  println("");
-  println("A B C D E F G H I J K L M N O P Q R S");
-  for (i = 1; i < 20; i++) {
-    printf("%c", 64 + i);
-    brcstr("2\010", 'C');	/* Two forward, one backspace */
-  }
-  println("");
-  println("");
-  holdit();
-
-  ed(2);
-  cup(1,1);
-  println("Test of leading zeros in ESC sequences.");
-  printf("Two lines below you should see the sentence \"%s\".",ctext);
-  for (col = 1; *ctext; col++)
-   printf("\033[00000000004;00000000%dH%c",col,*ctext++);
-  cup(20,1);
-  holdit();
-}
-
-tst_screen() {
-
-  /* Test of:
-     - DECSTBM (Set Top and Bottom Margins)
-     - TBC     (Tabulation Clear)
-     - HTS     (Horizontal Tabulation Set)
-     - SM RM   (Set/Reset mode): - 80/132 chars
-                                 - Origin: Realtive/absolute
-				 - Scroll: Smooth/jump
-				 - Wraparound
-     - SGR     (Select Graphic Rendition)
-     - SM RM   (Set/Reset Mode) - Inverse
-     - DECSC   (Save Cursor)
-     - DECRC   (Restore Cursor)
-  */
-
-  int i, j, cset, row, col, down, soft, background;
-
-  static char *tststr = "*qx`";
-  static char *attr[5] = { ";0", ";1", ";4", ";5", ";7" };
-
-  cup(1,1);
-  sm("?7");  /* Wrap Around ON */
-  for (col = 1; col <= 160; col++) printf("*");
-  rm("?7");  /* Wrap Around OFF */
-  cup(3,1);
-  for (col = 1; col <= 160; col++) printf("*");
-  sm("?7");  /* Wrap Around ON */
-  cup(5,1);
-  println("This should be three identical lines of *'s completely filling");
-  println("the top of the screen without any empty lines between.");
-  println("(Test of WRAP AROUND mode setting.)");
-  holdit();
-
-  ed(2);
-  tbc(3);
-  cup(1,1);
-  for (col = 1; col <= 78; col += 3) {
-    cuf(3); hts();
-  }
-  cup(1,4);
-  for (col = 4; col <= 78; col += 6) {
-    tbc(0); cuf(6);
-  }
-  cup(1,7); tbc(1); tbc(2); /* no-op */
-  cup(1,1); for (col = 1; col <= 78; col += 6) printf("\t*");
-  cup(2,2); for (col = 2; col <= 78; col += 6) printf("     *");
-  cup(4,1);
-  println("Test of TAB setting/resetting. These two lines");
-  printf("should look the same. ");
-  holdit();
-  for (background = 0; background <= 1; background++) {
-    if (background) rm("?5");
-    else            sm("?5");
-    sm("?3"); /* 132 cols */
-    ed(2);    /* VT100 clears screen on SM3/RM3, but not obviously, so... */
-    cup(1,1); tbc(3);
-    for (col = 1; col <= 132; col += 8) {
-      cuf(8); hts();
-    }
-    cup(1,1); for (col = 1; col <= 130; col += 10) printf("1234567890");
-    printf("12");
-    for (row = 3; row <= 20; row++) {
-      cup(row,row);
-      printf("This is 132 column mode, %s background.",
-      background ? "dark" : "light");
-    }
-    holdit();
-    rm("?3"); /* 80 cols */
-    ed(2);    /* VT100 clears screen on SM3/RM3, but not obviously, so... */
-    cup(1,1); for (col = 1; col <= 80; col += 10) printf("1234567890");
-    for (row = 3; row <= 20; row++) {
-      cup(row,row);
-      printf("This is 80 column mode, %s background.",
-      background ? "dark" : "light");
-    }
-    holdit();
-  }
-  ed(2);
-  sm("?6"); /* Origin mode (relative) */
-  for (soft = -1; soft <= 0; soft++) {
-    if (soft) sm("?4");
-    else      rm("?4");
-    for (row = 12; row >= 1; row -= 11) {
-      decstbm(row, 24-row+1);
-      ed(2);
-      for (down = 0; down >= -1; down--) {
-        if (down) cuu(24);
-	else      cud(24);
-	for (i = 1; i <= 30; i++) {
-	  printf("%s scroll %s region %d Line %d\n",
-		 soft ? "Soft" : "Jump",
-		 down ? "down" : "up",
-		 2*(13-row), i);
-	  if (down) { ri(); ri(); }
-	}
-      }
-      holdit();
-    }
-  }
-  ed(2);
-  decstbm(23,24);
-  printf(
-  "\nOrigin mode test. This line should be at the bottom of the screen.");
-  cup(1,1);
-  printf("%s",
-  "This line should be the one above the bottom of the screeen. ");
-  holdit();
-  ed(2);
-  rm("?6"); /* Origin mode (absolute) */
-  cup(24,1);
-  printf(
-  "Origin mode test. This line should be at the bottom of the screen.");
-  cup(1,1);
-  printf("%s", "This line should be at the top if the screen. ");
-  holdit();
-  decstbm(1,24);
-
-  ed(2);
-  cup( 1,20); printf("Graphic rendition test pattern:");
-  cup( 4, 1); sgr("0");         printf("vanilla");
-  cup( 4,40); sgr("0;1");       printf("bold");
-  cup( 6, 6); sgr(";4");        printf("underline");
-  cup( 6,45);sgr(";1");sgr("4");printf("bold underline");
-  cup( 8, 1); sgr("0;5");       printf("blink");
-  cup( 8,40); sgr("0;5;1");     printf("bold blink");
-  cup(10, 6); sgr("0;4;5");     printf("underline blink");
-  cup(10,45); sgr("0;1;4;5");   printf("bold underline blink");
-  cup(12, 1); sgr("1;4;5;0;7"); printf("negative");
-  cup(12,40); sgr("0;1;7");     printf("bold negative");
-  cup(14, 6); sgr("0;4;7");     printf("underline negative");
-  cup(14,45); sgr("0;1;4;7");   printf("bold underline negative");
-  cup(16, 1); sgr("1;4;;5;7");  printf("blink negative");
-  cup(16,40); sgr("0;1;5;7");   printf("bold blink negative");
-  cup(18, 6); sgr("0;4;5;7");   printf("underline blink negative");
-  cup(18,45); sgr("0;1;4;5;7"); printf("bold underline blink negative");
-  sgr("");
-
-  rm("?5"); /* Inverse video off */
-  cup(23,1); el(0); printf("Dark background. "); holdit();
-  sm("?5"); /* Inverse video */
-  cup(23,1); el(0); printf("Light background. "); holdit();
-  rm("?5");
-  ed(2);
-  cup(8,12); printf("normal");
-  cup(8,24); printf("bold");
-  cup(8,36); printf("underscored");
-  cup(8,48); printf("blinking");
-  cup(8,60); printf("reversed");
-  cup(10,1); printf("stars:");
-  cup(12,1); printf("line:");
-  cup(14,1); printf("x'es:");
-  cup(16,1); printf("diamonds:");
-  for (cset = 0; cset <= 3; cset++) {
-    for (i = 0; i <= 4; i++) {
-    cup(10 + 2 * cset, 12 + 12 * i);
-    sgr(attr[i]);
-    if (cset == 0 || cset == 2) scs(0,'B');
-    else                        scs(0,'0');
-      for (j = 0; j <= 4; j++) {
-        printf("%c", tststr[cset]);
-      }
-      decsc();
-      cup(cset + 1, i + 1); sgr(""); scs(0,'B'); printf("A");
-      decrc();
-      for (j = 0; j <= 4; j++) {
-        printf("%c", tststr[cset]);
-      }
-    }
-  }
-  sgr("0"); scs(0,'B'); cup(21,1);
-  println("Test of the SAVE/RESTORE CURSOR feature. There should");
-  println("be ten characters of each flavour, and a rectangle");
-  println("of 5 x 4 A's filling the top left of the screen.");
-  holdit();
-}
-
-tst_characters() {
-  /* Test of:
-     SCS    (Select character Set)
-  */
-
-  int i, j, g, cset;
-  char chcode[5], *setmsg[5];
-
-  chcode[0] = 'A';
-  chcode[1] = 'B';
-  chcode[2] = '0';
-  chcode[3] = '1';
-  chcode[4] = '2';
-  setmsg[0] = "UK / national";
-  setmsg[1] = "US ASCII";
-  setmsg[2] = "Special graphics and line drawing";
-  setmsg[3] = "Alternate character ROM standard characters";
-  setmsg[4] = "Alternate character ROM special graphics";
-
-  cup(1,10); printf("Selected as G0 (with SI)");
-  cup(1,48); printf("Selected as G1 (with SO)");
-  for (cset = 0; cset <= 4; cset++) {
-    scs(1,'B');
-    cup(3 + 4 * cset, 1);
-    sgr("1");
-    printf("Character set %c (%s)",chcode[cset], setmsg[cset]);
-    sgr("0");
-    for (g = 0; g <= 1; g++) {
-      scs(g,chcode[cset]);
-      for (i = 1; i <= 3; i++) {
-        cup(3 + 4 * cset + i, 10 + 38 * g);
-        for (j = 0; j <= 31; j++) {
-	  printf("%c", i * 32 + j);
-	}
-      }
-    }
-  }
-  scs(1,'B');
-  cup(24,1); printf("These are the installed character sets. ");
-  holdit();
-}
-
-tst_doublesize() {
-  /* Test of:
-     DECSWL  (Single Width Line)
-     DECDWL  (Double Width Line)
-     DECDHL  (Double Height Line) (also implicit double width)
-  */
-
-  int col, i, w, w1;
-
-  /* Print the test pattern in both 80 and 132 character width  */
-
-  for(w = 0; w <= 1; w++) {
-    w1 = 13 * w;
-
-    ed(2);
-    cup(1, 1);
-    if (w) { sm("?3"); printf("132 column mode"); }
-    else   { rm("?3"); printf(" 80 column mode"); }
-
-    cup( 5, 3 + 2 * w1);
-    printf("v------- left margin");
-
-    cup( 7, 3 + 2 * w1);
-    printf("This is a normal-sized line");
-    decdhl(0); decdhl(1); decdwl(); decswl();
-
-    cup( 9, 2 + w1);
-    printf("This is a Double-width line");
-    decswl(); decdhl(0); decdhl(1); decdwl();
-
-    cup(11, 2 + w1);
-    decdwl(); decswl(); decdhl(1); decdhl(0);
-    printf("This is a Double-width-and-height line");
-    cup(12, 2 + w1);
-    decdwl(); decswl(); decdhl(0); decdhl(1);
-    printf("This is a Double-width-and-height line");
-
-    cup(14, 2 + w1);
-    decdwl(); decswl(); decdhl(1); decdhl(0); el(2);
-    printf("This is another such line");
-    cup(15, 2 + w1);
-    decdwl(); decswl(); decdhl(0); decdhl(1);
-    printf("This is another such line");
-
-    cup(17, 3 + 2 * w1);
-    printf("^------- left margin");
-
-    cup(21, 1);
-    printf("This is not a double-width line");
-    for (i = 0; i <= 1; i++) {
-      cup(21,6);
-      if (i) { printf("**is**"); decdwl(); }
-      else   { printf("is not"); decswl(); }
-      cup(23,1); holdit();
-    }
-  }
-  /* Set vanilla tabs for next test */
-  cup(1,1); tbc(3); for (col = 1; col <= 132; col += 8) { cuf(8); hts(); }
-  rm("?3");
-  ed(2);
-  scs(0,'0');
-
-  cup( 8,1); decdhl(0); printf("lqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk");
-  cup( 9,1); decdhl(1); printf("lqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk");
-  cup(10,1); decdhl(0); printf("x%c%c%c%c%cx",9,9,9,9,9);
-  cup(11,1); decdhl(1); printf("x%c%c%c%c%cx",9,9,9,9,9);
-  cup(12,1); decdhl(0); printf("x%c%c%c%c%cx",9,9,9,9,9);
-  cup(13,1); decdhl(1); printf("x%c%c%c%c%cx",9,9,9,9,9);
-  cup(14,1); decdhl(0); printf("x                                      x");
-  cup(15,1); decdhl(1); printf("x                                      x");
-  cup(16,1); decdhl(0); printf("mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj");
-  cup(17,1); decdhl(1); printf("mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj");
-  scs(0,'B'); sgr("1;5");
-  cup(12,3);
-  printf("* The mad programmer strikes again * ");
-  cup(13,3); printf("%c",9); cub(6);
-  printf("* The mad programmer strikes again *");
-  sgr("0");
-  cup(22,1);
-  println("Another test pattern...  a frame with blinking bold text,");
-  printf("all in double-height double-width size. ");
-  holdit();
-
-  decstbm(8,24); /* Absolute origin mode, so cursor is set at (1,1) */
-  cup(8,1);
-  for (i = 1; i <= 12; i++)
-    ri();
-  decstbm(0,0);	/* No scroll region	*/
-  cup(1,1);
-  printf("%s", "Exactly half of the box should remain. ");
-  holdit();
-}
-
-tst_keyboard() {
-
-/* Test of:
-     - DECLL   (Load LEDs)
-     - Keyboard return messages
-     - SM RM   (Set/Reset Mode) - Cursor Keys
-                                - Auto repeat
-     - DECKPAM (Keypad Application Mode)
-     - DECKPNM (Keypad Numeric Mode)
-
-The standard VT100 keayboard layout:
- 
-                                                        UP   DN   LE  RI
-
-ESC   1!   2@   3#   4$   5%   6^   7&   8*   9(   0)   -_   =+   `~  BS
-
-TAB*    qQ   wW   eE   rR   tT   yY   uU   iI   oO   pP   [{   ]}      DEL
-
-**   **   aA   sS   dD   fF   gG   hH   jJ   kK   lL   ;:   ,"   RETN  \|
-
-**   ****   zZ   xX   cC   vV   bB   nN   mM   ,<   .>   /?   ****   LF
-
-             ****************SPACE BAR****************
-
-                                                           PF1 PF2 PF3 PF4
-
-                                                           *7* *8* *9* *-*
-
-                                                           *4* *5* *6* *,*
-
-                                                           *1* *2* *3*
-
-                                                           ***0*** *.* ENT
-*/
-
-  char *ledmsg[6], *ledseq[6];
-
-  int  i, j, okflag;
-  int  kblayout;
-  int  ckeymode;
-  int  fkeymode;
-  char kbdc;
-  char kbds[2];
-  char *curkeystr, *fnkeystr, *abmstr;
-  char arptstring[500];
-
-  static struct key {
-      char c;
-      int  row;
-      int  col;
-      char *symbol;
-  } keytab [] = {
-      { 27, 1,  0, "ESC" },
-      { '1', 1,  6, "1" },    { '!', 1,  7, "!" },
-      { '2', 1, 11, "2" },    { '@', 1, 12, "@" },
-      { '3', 1, 16, "3" },    { '#', 1, 17, "#" },
-      { '4', 1, 21, "4" },    { '$', 1, 22, "$" },
-      { '5', 1, 26, "5" },    { '%', 1, 27, "%" },
-      { '6', 1, 31, "6" },    { '^', 1, 32, "^" },
-      { '7', 1, 36, "7" },    { '&', 1, 37, "&" },
-      { '8', 1, 41, "8" },    { '*', 1, 42, "*" },
-      { '9', 1, 46, "9" },    { '(', 1, 47, "(" },
-      { '0', 1, 51, "0" },    { ')', 1, 52, ")" },
-      { '-', 1, 56, "-" },    { '_', 1, 57, "_" },
-      { '=', 1, 61, "=" },    { '+', 1, 62, "+" },
-      { '`', 1, 66, "`" },    { '~', 1, 67, "~" },
-      {   8, 1, 70, "BS" },
-      {   9, 2,  0, " TAB " },
-      { 'q', 2,  8, "q" },    { 'Q', 2,  9, "Q" },
-      { 'w', 2, 13, "w" },    { 'W', 2, 14, "W" },
-      { 'e', 2, 18, "e" },    { 'E', 2, 19, "E" },
-      { 'r', 2, 23, "r" },    { 'R', 2, 24, "R" },
-      { 't', 2, 28, "t" },    { 'T', 2, 29, "T" },
-      { 'y', 2, 33, "y" },    { 'Y', 2, 34, "Y" },
-      { 'u', 2, 38, "u" },    { 'U', 2, 39, "U" },
-      { 'i', 2, 43, "i" },    { 'I', 2, 44, "I" },
-      { 'o', 2, 48, "o" },    { 'O', 2, 49, "O" },
-      { 'p', 2, 53, "p" },    { 'P', 2, 54, "P" },
-      { '[', 2, 58, "[" },    { '{', 2, 59, "{" },
-      { ']', 2, 63, "]" },    { '}', 2, 64, "}" },
-      { 127, 2, 71, "DEL" },
-      { 'a', 3, 10, "a" },    { 'A', 3, 11, "A" },
-      { 's', 3, 15, "s" },    { 'S', 3, 16, "S" },
-      { 'd', 3, 20, "d" },    { 'D', 3, 21, "D" },
-      { 'f', 3, 25, "f" },    { 'F', 3, 26, "F" },
-      { 'g', 3, 30, "g" },    { 'G', 3, 31, "G" },
-      { 'h', 3, 35, "h" },    { 'H', 3, 36, "H" },
-      { 'j', 3, 40, "j" },    { 'J', 3, 41, "J" },
-      { 'k', 3, 45, "k" },    { 'K', 3, 46, "K" },
-      { 'l', 3, 50, "l" },    { 'L', 3, 51, "L" },
-      { ';', 3, 55, ";" },    { ':', 3, 56, ":" },
-      {'\'', 3, 60, "'" },    { '"', 3, 61,"\"" },
-      {  13, 3, 65, "RETN"},
-      {'\\', 3, 71,"\\" },    { '|', 3, 72, "|" },
-      { 'z', 4, 12, "z" },    { 'Z', 4, 13, "Z" },
-      { 'x', 4, 17, "x" },    { 'X', 4, 18, "X" },
-      { 'c', 4, 22, "c" },    { 'C', 4, 23, "C" },
-      { 'v', 4, 27, "v" },    { 'V', 4, 28, "V" },
-      { 'b', 4, 32, "b" },    { 'B', 4, 33, "B" },
-      { 'n', 4, 37, "n" },    { 'N', 4, 38, "N" },
-      { 'm', 4, 42, "m" },    { 'M', 4, 43, "M" },
-      { ',', 4, 47, "," },    { '<', 4, 48, "<" },
-      { '.', 4, 52, "." },    { '>', 4, 53, ">" },
-      { '/', 4, 57, "/" },    { '?', 4, 58, "?" },
-      {  10, 4, 69, "LF" },
-      { ' ', 5, 13, "                SPACE BAR                "},
-      {'\0', 0,  0, ""  }
-    };
-
-  static struct natkey {
-      char natc;
-      int  natrow;
-      int  natcol;
-      char *natsymbol;
-  } natkeytab [][29] = {
-      {
-        { '"', 1, 12, "\""},
-        { '&', 1, 32, "&" },
-        { '/', 1, 37, "/" },
-        { '(', 1, 42, "(" },
-        { ')', 1, 47, ")" },
-        { '=', 1, 52, "=" },
-        { '+', 1, 56, "+" },    { '?', 1, 57, "?" },
-        { '`', 1, 61, "`" },    { '@', 1, 62, "@" },
-        { '<', 1, 66, "<" },    { '>', 1, 67, ">" },
-        { '}', 2, 58, "}" },    { ']', 2, 59, "]" },
-        { '^', 2, 63, "^" },    { '~', 2, 64, "~" },
-        { '|', 3, 55, "|" },    {'\\', 3, 56,"\\" },
-        { '{', 3, 60, "{" },    { '[', 3, 61, "[" },
-        {'\'', 3, 71, "'" },    { '*', 3, 72, "*" },
-        { ',', 4, 47, "," },    { ';', 4, 48, ";" },
-        { '.', 4, 52, "." },    { ':', 4, 53, ":" },
-        { '-', 4, 57, "-" },    { '_', 4, 58, "_" },
-        {'\0', 0,  0, ""  }
-      },
-      {
-        { '"', 1, 12, "\""},
-        { '&', 1, 32, "&" },
-        { '/', 1, 37, "/" },
-        { '(', 1, 42, "(" },
-        { ')', 1, 47, ")" },
-        { '=', 1, 52, "=" },
-        { '+', 1, 56, "+" },    { '?', 1, 57, "?" },
-        { '`', 1, 61, "`" },    { '@', 1, 62, "@" },
-        { '<', 1, 66, "<" },    { '>', 1, 67, ">" },
-        { '}', 2, 58, "}" },    { ']', 2, 59, "]" },
-        { '~', 2, 63, "~" },    { '^', 2, 64, "^" },
-        { '|', 3, 55, "|" },    {'\\', 3, 56,"\\" },
-        { '{', 3, 60, "{" },    { '[', 3, 61, "[" },
-        {'\'', 3, 71, "'" },    { '*', 3, 72, "*" },
-        { ',', 4, 47, "," },    { ';', 4, 48, ";" },
-        { '.', 4, 52, "." },    { ':', 4, 53, ":" },
-        { '-', 4, 57, "-" },    { '_', 4, 58, "_" },
-        {'\0', 0,  0, ""  }
-      }
-  };
-
-  static struct curkey {
-      char *curkeymsg[3];
-      int  curkeyrow;
-      int  curkeycol;
-      char *curkeysymbol;
-      char *curkeyname;
-  } curkeytab [] = {
-
-      /* A Reset, A Set,  VT52  */
-
-      {{"\033[A","\033OA","\033A"}, 0, 56, "UP",  "Up arrow"   },
-      {{"\033[B","\033OB","\033B"}, 0, 61, "DN",  "Down arrow" },
-      {{"\033[D","\033OD","\033D"}, 0, 66, "LT",  "Left arrow" },
-      {{"\033[C","\033OC","\033C"}, 0, 71, "RT",  "Right arrow"},
-      {{"",      "",       ""     }, 0,  0, "",    "" }
-  };
-
-  static struct fnkey {
-      char *fnkeymsg[4];
-      int  fnkeyrow;
-      int  fnkeycol;
-      char *fnkeysymbol;
-      char *fnkeyname;
-  } fnkeytab [] = {
-
-      /* ANSI-num,ANSI-app,VT52-nu,VT52-ap,  r, c,  symb   name         */
-
-      {{"\033OP","\033OP","\033P","\033P" }, 6, 59, "PF1", "PF1"        },
-      {{"\033OQ","\033OQ","\033Q","\033Q" }, 6, 63, "PF2", "PF2"        },
-      {{"\033OR","\033OR","\033R","\033R" }, 6, 67, "PF3", "PF3"        },
-      {{"\033OS","\033OS","\033S","\033S" }, 6, 71, "PF4", "PF4"        },
-      {{"7",     "\033Ow","7",    "\033?w"}, 7, 59, " 7 ", "Numeric 7"  },
-      {{"8",     "\033Ox","8",    "\033?x"}, 7, 63, " 8 ", "Numeric 8"  },
-      {{"9",     "\033Oy","9",    "\033?y"}, 7, 67, " 9 ", "Numeric 9"  },
-      {{"-",     "\033Om","-",    "\033?m"}, 7, 71, " - ", "Minus"      },
-      {{"4",     "\033Ot","4",    "\033?t"}, 8, 59, " 4 ", "Numeric 4"  },
-      {{"5",     "\033Ou","5",    "\033?u"}, 8, 63, " 5 ", "Numeric 5"  },
-      {{"6",     "\033Ov","6",    "\033?v"}, 8, 67, " 6 ", "Numeric 6"  },
-      {{",",     "\033Ol",",",    "\033?l"}, 8, 71, " , ", "Comma"      },
-      {{"1",     "\033Oq","1",    "\033?q"}, 9, 59, " 1 ", "Numeric 1"  },
-      {{"2",     "\033Or","2",    "\033?r"}, 9, 63, " 2 ", "Numeric 2"  },
-      {{"3",     "\033Os","3",    "\033?s"}, 9, 67, " 3 ", "Numeric 3"  },
-      {{"0",     "\033Op","0",    "\033?p"},10, 59,"   O   ","Numeric 0"},
-      {{".",     "\033On",".",    "\033?n"},10, 67, " . ", "Point"      },
-      {{"\015",  "\033OM","\015", "\033?M"},10, 71, "ENT", "ENTER"      },
-      {{"","","",""},       0,  0, "",    ""           }
-    };
-
-  static struct ckey {
-      int  ccount;
-      char *csymbol;
-  } ckeytab [] = {
-      { 0, "NUL (CTRL-@ or CTRL-Space)" },
-      { 0, "SOH (CTRL-A)" },
-      { 0, "STX (CTRL-B)" },
-      { 0, "ETX (CTRL-C)" },
-      { 0, "EOT (CTRL-D)" },
-      { 0, "ENQ (CTRL-E)" },
-      { 0, "ACK (CTRL-F)" },
-      { 0, "BEL (CTRL-G)" },
-      { 0, "BS  (CTRL-H) (BACK SPACE)" },
-      { 0, "HT  (CTRL-I) (TAB)" },
-      { 0, "LF  (CTRL-J) (LINE FEED)" },
-      { 0, "VT  (CTRL-K)" },
-      { 0, "FF  (CTRL-L)" },
-      { 0, "CR  (CTRL-M) (RETURN)" },
-      { 0, "SO  (CTRL-N)" },
-      { 0, "SI  (CTRL-O)" },
-      { 0, "DLE (CTRL-P)" },
-      { 0, "DC1 (CTRL-Q) (X-On)" },
-      { 0, "DC2 (CTRL-R)" },
-      { 0, "DC3 (CTRL-S) (X-Off)" },
-      { 0, "DC4 (CTRL-T)" },
-      { 0, "NAK (CTRL-U)" },
-      { 0, "SYN (CTRL-V)" },
-      { 0, "ETB (CTRL-W)" },
-      { 0, "CAN (CTRL-X)" },
-      { 0, "EM  (CTRL-Y)" },
-      { 0, "SUB (CTRL-Z)" },
-      { 0, "ESC (CTRL-[) (ESCAPE)" },
-      { 0, "FS  (CTRL-\\ or CTRL-? or CTRL-_)" },
-      { 0, "GS  (CTRL-])" },
-      { 0, "RS  (CTRL-^ or CTRL-~ or CTRL-`)" },
-      { 0, "US  (CTRL-_ or CTRL-?)" }
-  };
-
-  static char *keyboardmenu[] = {
-      "Standard American ASCII layout",
-      "Swedish national layout D47",
-      "Swedish national layout E47",
-      /* add new keyboard layouts here */
-      ""
-    };
-
-  static char *curkeymodes[3] = {
-      "ANSI / Cursor key mode RESET",
-      "ANSI / Cursor key mode SET",
-      "VT52 Mode"
-  };
-
-  static char *fnkeymodes[4] = {
-      "ANSI Numeric mode",
-      "ANSI Application mode",
-      "VT52 Numeric mode",
-      "VT52 Application mode"
-  };
-
-  ledmsg[0] = "L1 L2 L3 L4"; ledseq[0] = "1;2;3;4";
-  ledmsg[1] = "   L2 L3 L4"; ledseq[1] = "1;0;4;3;2";
-  ledmsg[2] = "   L2 L3";    ledseq[2] = "1;4;;2;3";
-  ledmsg[3] = "L1 L2";       ledseq[3] = ";;2;1";
-  ledmsg[4] = "L1";          ledseq[4] = "1";
-  ledmsg[5] = "";            ledseq[5] = "";
-
-#ifdef UNIX
-  fflush(stdout);
-#endif
-
-  ed(2);
-  cup(10,1);
-  println("These LEDs (\"lamps\") on the keyboard should be on:");
-  for (i = 0; i <= 5; i++) {
-    cup(10,52); el(0); printf("%s", ledmsg[i]);
-    decll("0");
-    decll(ledseq[i]);
-    cup(12,1); holdit();
-  }
-
-  ed(2);
-  cup(10,1);
-  println("Test of the AUTO REPEAT feature");
-  println("");
-  println("Hold down an alphanumeric key for a while, then push RETURN.");
-  printf("%s", "Auto Repeat OFF: ");
-  rm("?8");
-  inputline(arptstring);
-  if (strlen(arptstring) == 0)      println("No characters read!??");
-  else if (strlen(arptstring) == 1) println("OK.");
-  else                              println("Too many characters read.");
-  println("");
-  println("Hold down an alphanumeric key for a while, then push RETURN.");
-  printf("%s", "Auto Repeat ON: ");
-  sm("?8");
-  inputline(arptstring);
-  if (strlen(arptstring) == 0)      println("No characters read!??");
-  else if (strlen(arptstring) == 1) println("Not enough characters read.");
-  else                              println("OK.");
-  println("");
-  holdit();
-
-  ed(2);
-  cup(5,10);
-  println("Choose keyboard layout:");
-  kblayout = menu(keyboardmenu);
-  if (kblayout) {
-    kblayout--;
-    for (j = 0; natkeytab[kblayout][j].natc != '\0'; j++) {
-      for (i = 0; keytab[i].c != '\0'; i++) {
-	if (keytab[i].row == natkeytab[kblayout][j].natrow &&
-	    keytab[i].col == natkeytab[kblayout][j].natcol) {
-	  keytab[i].c = natkeytab[kblayout][j].natc;
-	  keytab[i].symbol = natkeytab[kblayout][j].natsymbol;
-	  break;
-	}
-      }
-    }
-  }
-
-  ed(2);
-  for (i = 0; keytab[i].c != '\0'; i++) {
-    cup(1 + 2 * keytab[i].row, 1 + keytab[i].col);
-    sgr("7");
-    printf("%s", keytab[i].symbol);
-    sgr("");
-  }
-  cup(22,1);
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag &= (~ICRNL);
-  termioNew.c_oflag &= (~ONLCR);
-  termioNew.c_lflag &= (~ECHO & ~ECHOE & ~ECHOK & ~ECHONL);
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags &= ~CRMOD;
-  sgttyNew.sg_flags &= ~ECHO;
-  stty(0, &sgttyNew);
-# endif
-#endif
-  inflush();
-  printf("Press each key, both shifted and unshifted. Finish with RETURN:");
-  do { /* while (kbdc != 13) */
-    cup(23,1); kbdc = inchar();
-    cup(23,1); el(0);
-    sprintf(kbds, "%c", kbdc);
-    chrprint(kbds);
-    for (i = 0; keytab[i].c != '\0'; i++) {
-      if (keytab[i].c == kbdc) {
-        cup(1 + 2 * keytab[i].row, 1 + keytab[i].col);
-	printf("%s", keytab[i].symbol);
-	break;
-      }
-    }
-  } while (kbdc != 13);
-#ifdef SARG10
-  inchar();  /* Local hack: Read LF that TOPS-10 adds to CR */
-#endif
-  cup(23,1); el(0);
-
-  for (ckeymode = 0; ckeymode <= 2; ckeymode++) {
-    if (ckeymode) sm("?1");
-    else            rm("?1");
-    for (i = 0; curkeytab[i].curkeysymbol[0] != '\0'; i++) {
-      cup(1 + 2 * curkeytab[i].curkeyrow, 1 + curkeytab[i].curkeycol);
-      sgr("7");
-      printf("%s", curkeytab[i].curkeysymbol);
-      sgr("");
-    }
-    cup(20,1); printf("<%s>%20s", curkeymodes[ckeymode], "");
-    cup(22,1); el(0);
-    cup(22,1); printf("%s", "Press each cursor key. Finish with TAB.");
-    for(;;) {
-      cup(23,1);
-      if (ckeymode == 2) rm("?2"); /* VT52 mode */
-      curkeystr = instr();
-      esc("<");                      /* ANSI mode */
-      cup(23,1); el(0);
-      cup(23,1); chrprint(curkeystr);
-      if (!strcmp(curkeystr,"\t")) break;
-      for (i = 0; curkeytab[i].curkeysymbol[0] != '\0'; i++) {
-	if (!strcmp(curkeystr,curkeytab[i].curkeymsg[ckeymode])) {
-	  sgr("7");
-	  printf(" (%s key) ", curkeytab[i].curkeyname);
-	  sgr("");
-	  cup(1 + 2 * curkeytab[i].curkeyrow,
-	      1 + curkeytab[i].curkeycol);
-	  printf("%s", curkeytab[i].curkeysymbol);
-	  break;
-	}
-      }
-      if (i == sizeof(curkeytab) / sizeof(struct curkey) - 1) {
-	sgr("7");
-	printf("%s", " (Unknown cursor key) ");
-	sgr("");
-      }
-    }
-  }
-
-  for (fkeymode = 0; fkeymode <= 3; fkeymode++) {
-    for (i = 0; fnkeytab[i].fnkeysymbol[0] != '\0'; i++) {
-      cup(1 + 2 * fnkeytab[i].fnkeyrow, 1 + fnkeytab[i].fnkeycol);
-      sgr("7");
-      printf("%s", fnkeytab[i].fnkeysymbol);
-      sgr("");
-    }
-    cup(20,1); printf("<%s>%20s", fnkeymodes[fkeymode], "");
-    cup(22,1); el(0);
-    cup(22,1); printf("%s", "Press each function key. Finish with TAB.");
-    for(;;) {
-      cup(23,1);
-      if (fkeymode >= 2)  rm("?2");    /* VT52 mode */
-      if (fkeymode % 2)   deckpam();   /* Application mode */
-      else                 deckpnm();	/* Numeric mode     */
-      fnkeystr = instr();
-      esc("<");				/* ANSI mode */
-      cup(23,1); el(0);
-      cup(23,1); chrprint(fnkeystr);
-      if (!strcmp(fnkeystr,"\t")) break;
-      for (i = 0; fnkeytab[i].fnkeysymbol[0] != '\0'; i++) {
-	if (!strcmp(fnkeystr,fnkeytab[i].fnkeymsg[fkeymode])) {
-	  sgr("7");
-	  printf(" (%s key) ", fnkeytab[i].fnkeyname);
-	  sgr("");
-	  cup(1 + 2 * fnkeytab[i].fnkeyrow, 1 + fnkeytab[i].fnkeycol);
-	  printf("%s", fnkeytab[i].fnkeysymbol);
-	  break;
-	}
-      }
-      if (i == sizeof(fnkeytab) / sizeof(struct fnkey) - 1) {
-	sgr("7");
-	printf("%s", " (Unknown function key) ");
-	sgr("");
-      }
-    }
-  }
-
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag |= ICRNL;
-  termioNew.c_oflag |= ONLCR;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags |= CRMOD;
-  stty(0, &sgttyNew);
-# endif
-#endif
-  ed(2);
-  cup(5,1);
-  println("Finally, a check of the ANSWERBACK MESSAGE, which can be sent");
-  println("by pressing CTRL-BREAK. The answerback message can be loaded");
-  println("in SET-UP B by pressing SHIFT-A and typing e.g.");
-  println("");
-  println("         \" H e l l o , w o r l d Return \"");
-  println("");
-  println("(the double-quote characters included).  Do that, and then try");
-  println("to send an answerback message with CTRL-BREAK.  If it works,");
-  println("the answerback message should be displayed in reverse mode.");
-  println("Finish with a single RETURN.");
-
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag &= ~ICRNL;
-  termioNew.c_oflag &= ~ONLCR;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags &= ~CRMOD;
-  stty(0, &sgttyNew);
-# endif
-#endif
-  do {
-    cup(17,1);
-    inflush();
-    abmstr = instr();
-    cup(17,1);
-    el(0);
-    chrprint(abmstr);
-  } while (strcmp(abmstr,"\r"));
-
-  ed(2);
-  for (i = 0; i < 32; i++) {
-    cup(1 + (i % 16), 1 + 40 * (i / 16));
-    sgr("7");
-    printf("%s", ckeytab[i].csymbol);
-    sgr("0");
-  }
-  cup(19,1);
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag |= ICRNL;
-  termioNew.c_oflag |= ONLCR;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags |= CRMOD;
-  stty(0, &sgttyNew);
-# endif
-#endif
-
-  println(
-  "Push each CTRL-key TWICE. Note that you should be able to send *all*");
-  println(
-  "CTRL-codes twice, including CTRL-S (X-Off) and CTRL-Q (X-Off)!");
-  println(
-  "Finish with DEL (also called DELETE or RUB OUT), or wait 1 minute.");
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag &= ~(ICRNL|IXON);
-  termioNew.c_lflag &= ~(ICANON|ISIG);
-  termioNew.c_cc[VMIN] = 1;
-  termioNew.c_cc[VTIME] = 0;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-#  ifdef SIII
-  sgttyNew.sg_flags &= ~CBREAK;
-  stty(0, &sgttyNew);
-#  endif
-  sgttyNew.sg_flags |= RAW;
-  stty(0, &sgttyNew);
-# endif
-#endif
-  ttybin(1);
-#ifdef SARG20
-  page(0);	/* Turn off all character processing at input */
-  superbin(1);	/* Turn off ^C (among others). Keep your fingers crossed!! */
-#endif
-  do {
-    cup(23,1); kbdc = inchar();
-    cup(23,1); el(0);
-    if (kbdc < 32) printf("  %s", ckeytab[kbdc].csymbol);
-    else {
-      sprintf(kbds, "%c", kbdc);
-      chrprint(kbds);
-      printf("%s", " -- not a CTRL key");
-    }
-    if (kbdc < 32) ckeytab[kbdc].ccount++;
-    if (ckeytab[kbdc].ccount == 2) {
-      cup(1 + (kbdc % 16), 1 + 40 * (kbdc / 16));
-      printf("%s", ckeytab[kbdc].csymbol);
-    }
-  } while (kbdc != '\177');
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag |= (IGNBRK|BRKINT|ICRNL|IXON);
-  termioNew.c_lflag |= (ICANON|ECHO|ISIG);
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags &= ~RAW;
-  sgttyNew.sg_flags |= ECHO;
-  stty(0, &sgttyNew);
-#  ifdef SIII
-  sgttyNew.sg_flags |= CBREAK;
-  stty(0, &sgttyNew);
-#  endif
-# endif
-#endif
-  ttybin(0);
-#ifdef SARG20
-  superbin(0);	/* Puuuh! We made it!? */
-  page(1);	/* Back to normal input processing */
-  ttybin(1);	/* This must be the mode for DEC20 */
-#endif
-  cup(24,1);
-  okflag = 1;
-  for (i = 0; i < 32; i++) if (ckeytab[i].ccount < 2) okflag = 0;
-  if (okflag) printf("%s", "OK. ");
-  else        printf("%s", "You have not been able to send all CTRL keys! ");
-  holdit();
-}
-
-tst_reports() {
-  /* Test of:
-       <ENQ>       (AnswerBack Message)
-       SM RM       (Set/Reset Mode) - LineFeed / Newline
-       DSR         (Device Status Report)
-       DA          (Device Attributes)
-       DECREQTPARM (Request Terminal Parameters)
-  */
-
-  int parity, nbits, xspeed, rspeed, clkmul, flags;
-  int i, reportpos;
-  char *report, *report2;
-  static char *attributes[][2] = {
-    { "\033[?1;0c",   "No options (vanilla VT100)" },
-    { "\033[?1;1c",   "VT100 with STP" },
-    { "\033[?1;2c",   "VT100 with AVO (could be a VT102)" },
-    { "\033[?1;3c",   "VT100 with STP and AVO" },
-    { "\033[?1;4c",   "VT100 with GPO" },
-    { "\033[?1;5c",   "VT100 with STP and GPO" },
-    { "\033[?1;6c",   "VT100 with AVO and GPO" },
-    { "\033[?1;7c",   "VT100 with STP, AVO and GPO" },
-    { "\033[?1;11c",  "VT100 with PP and AVO" },
-    { "\033[?1;15c",  "VT100 with PP, GPO and AVO" },
-    { "\033[?4;2c",   "VT132 with AVO" },
-    { "\033[?4;3c",   "VT132 with AVO and STP" },
-    { "\033[?4;6c",   "VT132 with GPO and AVO" },
-    { "\033[?4;7c",   "VT132 with GPO, AVO, and STP" },
-    { "\033[?4;11c",  "VT132 with PP and AVO" },
-    { "\033[?4;15c",  "VT132 with PP, GPO and AVO" },
-    { "\033[?7c",     "VT131" },
-    { "\033[?12;5c",  "VT125" },           /* VT125 also has ROM version */
-    { "\033[?12;7c",  "VT125 with AVO" },  /* number, so this won't work */
-    { "\033[?5;0c",   "VK100 (GIGI)" },
-    { "\033[?5c",     "VK100 (GIGI)" },
-    { "", "" }
-  };
-
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_lflag &= ~ECHO;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags &= ~ECHO;
-  stty(0, &sgttyNew);
-# endif
-#endif
-  cup(5,1);
-  println("This is a test of the ANSWERBACK MESSAGE. (To load the A.B.M.");
-  println("see the TEST KEYBOARD part of this program). Below here, the");
-  println("current answerback message in your terminal should be");
-  println("displayed. Finish this test with RETURN.");
-  cup(10,1);
-  inflush();
-  printf("%c", 5); /* ENQ */
-  report = instr();
-  cup(10,1);
-  chrprint(report);
-  cup(12,1);
-  holdit();
-
-  ed(2);
-  cup(1,1);
-  println("Test of LineFeed/NewLine mode.");
-  cup(3,1);
-  sm("20");
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag &= ~ICRNL;
-  termioNew.c_oflag &= ~ONLCR;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags &= ~CRMOD;
-  stty(0, &sgttyNew);
-# endif
-#endif
-  printf("NewLine mode set. Push the RETURN key: ");
-  report = instr();
-  cup(4,1);
-  el(0);
-  chrprint(report);
-  if (!strcmp(report, "\015\012")) printf(" -- OK");
-  else                             printf(" -- Not expected");
-  cup(6,1);
-  rm("20");
-  printf("NewLine mode reset. Push the RETURN key: ");
-  report = instr();
-  cup(7,1);
-  el(0);
-  chrprint(report);
-  if (!strcmp(report, "\015")) printf(" -- OK");
-  else                         printf(" -- Not expected");
-  cup(9,1);
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_iflag |= ICRNL;
-  termioNew.c_oflag |= ONLCR;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags |= CRMOD;
-  stty(0, &sgttyNew);
-# endif
-#endif
-  holdit();
-
-  ed(2);
-  cup(1,1);
-  printf("Test of Device Status Report 5 (report terminal status).");
-  cup(2,1);
-  dsr(5);
-  report = instr();
-  cup(2,1);
-  el(0);
-  printf("Report is: ");
-  chrprint(report);
-  if      (!strcmp(report,"\033[0n")) printf(" -- means \"TERMINAL OK\"");
-  else if (!strcmp(report,"\033[3n")) printf(" -- means \"TERMINAL OK\"");
-  else                                printf(" -- Unknown response!");
-
-  cup(4,1);
-  println("Test of Device Status Report 6 (report cursor position).");
-  cup(5,1);
-  dsr(6);
-  report = instr();
-  cup(5,1);
-  el(0);
-  printf("Report is: ");
-  chrprint(report);
-  if (!strcmp(report,"\033[5;1R")) printf(" -- OK");
-  else                             printf(" -- Unknown response!");
-
-  cup(7,1);
-  println("Test of Device Attributes report (what are you)");
-  cup(8,1);
-  da(0);
-  report = instr();
-  cup(8,1);
-  el(0);
-  printf("Report is: ");
-  chrprint(report);
-  for (i = 0; *attributes[i][0] != '\0'; i++) {
-    if (!strcmp(report,attributes[i][0])) break;
-  }
-  if (*attributes[i][0] == '\0')
-  printf(" -- Unknown response, refer to the manual");
-  else {
-    printf(" -- means %s", attributes[i][1]);
-    if (i) {
-      cup(9,1);
-      println("Legend: STP = Processor Option");
-      println("        AVO = Advanced Video Option");
-      println("        GPO = Graphics Processor Option");
-      println("        PP  = Printer Port");
-    }
-  }
-
-  cup(14,1);
-  println("Test of the \"Request Terminal Parameters\" feature, argument 0.");
-  cup(15,1);
-  decreqtparm(0);
-  report = instr();
-  cup(15,1);
-  el(0);
-  printf("Report is: ");
-  chrprint(report);
-  if (strlen(report) < 16
-   || report[0] != '\033'
-   || report[1] != '['
-   || report[2] != '2'
-   || report[3] != ';')
-  println(" -- Bad format");
-  else {
-    reportpos = 4;
-    parity = scanto(report, &reportpos, ';');
-    nbits  = scanto(report, &reportpos, ';');
-    xspeed = scanto(report, &reportpos, ';');
-    rspeed = scanto(report, &reportpos, ';');
-    clkmul = scanto(report, &reportpos, ';');
-    flags  = scanto(report, &reportpos, 'x');
-    if (parity == 0 || nbits == 0 || clkmul == 0) println(" -- Bad format");
-    else                                          println(" -- OK");
-    printf(
-    "This means: Parity %s, %s bits, xmitspeed %s, recvspeed %s.\n",
-    lookup(paritytable, parity),
-    lookup(nbitstable, nbits),
-    lookup(speedtable, xspeed),
-    lookup(speedtable, rspeed));
-    printf("(CLoCk MULtiplier = %d, STP option flags = %d)\n", clkmul, flags);
-  }
-
-  cup(19,1);
-  println("Test of the \"Request Terminal Parameters\" feature, argument 1.");
-  cup(20,1);
-  decreqtparm(1);	/* Does the same as decreqtparm(0), reports "3" */
-  report2 = instr();
-  cup(20,1);
-  el(0);
-  printf("Report is: ");
-  chrprint(report2);
-  if (strlen(report2) < 3
-   || report2[2] != '3')
-  println(" -- Bad format");
-  else {
-    report2[2] = '2';
-    if (!strcmp(report,report2)) println(" -- OK");
-    else                         println(" -- Bad format");
-  }
-  cup(24,1);
-  holdit();
-#ifdef UNIX
-# ifdef TERMIO
-  termioNew.c_lflag |= ECHO;
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  sgttyNew.sg_flags |= ECHO;
-  stty(0, &sgttyNew);
-# endif
-#endif
-}
-
-tst_vt52() {
-
-  static struct rtabl {
-      char *rcode;
-      char *rmsg;
-  } resptable[] = {
-      { "\033/K", " -- OK (means Standard VT52)" },
-      { "\033/Z", " -- OK (means VT100 emulating VT52)" },
-      { "",       " -- Unknown response"}
-  };
-
-  int i,j;
-  char *response;
-
-  rm("?2");  /* Reset ANSI (VT100) mode, Set VT52 mode	*/
-  esc("H");  /* Cursor home	*/
-  esc("J");  /* Erase to end of screen	*/
-  esc("H");  /* Cursor home	*/
-  for (i = 0; i <= 23; i++) {
-    for (j = 0; j <= 9; j++)
-    printf("%s", "FooBar ");
-    println("Bletch");
-  }
-  esc("H");  /* Cursor home	*/
-  esc("J");  /* Erase to end of screen	*/
-
-  vt52cup(7,47);
-  printf("nothing more.");
-  for (i = 1; i <= 10; i++) printf("THIS SHOULD GO AWAY! ");
-  for (i = 1; i <= 5; i++) {
-    vt52cup(1,1);
-    printf("%s", "Back scroll (this should go away)");
-    esc("I"); 		/* Reverse LineFeed (with backscroll!)	*/
-  }
-  vt52cup(12,60);
-  esc("J");  /* Erase to end of screen	*/
-  for (i = 2; i <= 6; i++) {
-    vt52cup(i,1);
-    esc("K");		/* Erase to end of line	*/
-  }
-
-  for (i = 2; i <= 23; i++) {
-    vt52cup(i,70); printf("%s", "**Foobar");
-  }
-  vt52cup(23,10); 
-  for (i = 23; i >= 2; i--) {
-    printf("%s", "*");
-    printf("%c", 8);	/* BS */
-    esc("I");		/* Reverse LineFeed (LineStarve)	*/
-  }
-  vt52cup(1,70);
-  for (i = 70; i >= 10; i--) {
-    printf("%s", "*");
-    esc("D"); esc("D");	/* Cursor Left */
-  }
-  vt52cup(24,10);
-  for (i = 10; i <= 70; i++) {
-    printf("%s", "*");
-    printf("%c", 8);	/* BS */
-    esc("C");		/* Cursor Right	*/
-  }
-  vt52cup(2,11);
-  for (i = 2; i <= 23; i++) {
-    printf("%s", "!");
-    printf("%c", 8);	/* BS */
-    esc("B");		/* Cursor Down	*/
-  }
-  vt52cup(23,69);
-  for (i = 23; i >= 2; i--) {
-    printf("%s", "!");
-    printf("%c", 8);	/* BS */
-    esc("A");		/* Cursor Up	*/
-  }
-  for (i = 2; i <= 23; i++) {
-    vt52cup(i,71);
-    esc("K");		/* Erase to end of line	*/
-  }
-
-  vt52cup(10,16);
-  printf("%s", "The screen should be cleared, and have a centered");
-  vt52cup(11,16);
-  printf("%s", "rectangle of \"*\"s with \"!\"s on the inside to the");
-  vt52cup(12,16);
-  printf("%s", "left and right. Only this, and");
-  vt52cup(13,16);
-  holdit();
-
-  esc("H");  /* Cursor home	*/
-  esc("J");  /* Erase to end of screen	*/
-  printf("%s", "This is the normal character set:");
-  for (j =  0; j <=  1; j++) {
-    vt52cup(3 + j, 16);
-    for (i = 0; i <= 47; i++)
-    printf("%c", 32 + i + 48 * j);
-  }
-  vt52cup(6,1);
-  printf("%s", "This is the special graphics character set:");
-  esc("F");	/* Select Special Graphics character set	*/
-  for (j =  0; j <=  1; j++) {
-    vt52cup(8 + j, 16);
-    for (i = 0; i <= 47; i++)
-    printf("%c", 32 + i + 48 * j);
-  }
-  esc("G");	/* Select ASCII character set	*/
-  vt52cup(12,1);
-  holdit();
-
-  esc("H");  /* Cursor home	*/
-  esc("J");  /* Erase to end of screen	*/
-  println("Test of terminal response to IDENTIFY command");
-  esc("Z");	/* Identify	*/
-  response = instr();
-  println("");
-  printf("Response was");
-  esc("<");  /* Enter ANSI mode (VT100 mode) */
-  chrprint(response);
-  for(i = 0; resptable[i].rcode[0] != '\0'; i++)
-    if (!strcmp(response, resptable[i].rcode))
-      break;
-  printf("%s", resptable[i].rmsg);
-  println("");
-  println("");
-  holdit();
-}
-
-tst_insdel() {
-
-    /* Test of:
-       SM/RM(4) (= IRM (Insertion/replacement mode))
-       ICH (Insert Character)
-       DCH (Delete character)
-       IL  (Insert line)
-       DL  (Delete line)
-    */
-
-  int i, row, col, sw, dblchr, scr132;
-
-  for(scr132 = 0; scr132 <= 1; scr132++) {
-    if (scr132) { sm("?3"); sw = 132; }
-    else        { rm("?3"); sw =  80; }
-    ed(2);
-    cup(1,1);
-    for (row=1; row<=24; row++) {
-	cup(row,1);
-	for (col=1; col<=sw; col++)
-	    printf("%c", 'A'-1+row);
-    }
-    cup(4,1);
-    printf("Screen accordion test (Insert & Delete Line). "); holdit();
-    ri(); el(2);
-    decstbm( 2,23);
-    sm("?6");
-    cup(1,1);
-    for (row=1; row<=24; row++) {
-      il(row);
-      dl(row);
-    }
-    rm("?6");
-    decstbm( 0, 0);
-    cup(2,1);
-    printf(
-    "Top line: A's, bottom line: X's, this line, nothing more. ");
-    holdit();
-    cup(2,1); ed(0);
-    cup(1,2);
-    printf("B");
-    cub(1);
-    sm("4");
-    for (col=2; col<=sw-1; col++)
-      printf("*");
-    rm("4");
-    cup(4,1);
-    printf("Test of 'Insert Mode'. The top line should be 'A*** ... ***B'. ");
-    holdit(); ri(); el(2);
-    cup(1,2);
-    dch(sw-2);
-    cup(4,1);
-    printf("Test of 'Delete Character'. The top line should be 'AB'. ");
-    holdit();
-
-    for(dblchr = 1; dblchr <= 2; dblchr++) {
-      ed(2);
-      for (row=1; row<=24; row++) {
-	cup(row,1);
-	if (dblchr == 2) decdwl();
-	for (col=1; col<=sw/dblchr; col++)
-	  printf("%c", 'A'-1+row);
-	cup(row,sw/dblchr-row);
-	dch(row);
-      }
-      cup(4,1);
-      println("The right column should be staggered ");
-      printf("by one.  ");
-      holdit();
-    }
-    ed(2);
-    cup(1,1);
-    println("If your terminal has the ANSI 'Insert Character' function");
-    println("(the VT102 does not), then you should see a line like this");
-    println("  A B C D E F G H I J K L M N O P Q R S T U V W X Y Z");
-    println("below:");
-    println("");
-    for (i = 'Z'; i >= 'A'; i--) {
-      printf("%c\010",i);
-      ich(2);
-    }
-    cup(10,1);
-    holdit();
-
-    if (sw == 132) rm("?3");
-  }
-}
-
-dch(pn) int pn; { brc(pn, 'P'); }  /* Delete character */
-ich(pn) int pn; { brc(pn, '@'); }  /* Insert character -- not in VT102 */
-dl(pn)  int pn; { brc(pn, 'M'); }  /* Delete line */
-il(pn)  int pn; { brc(pn, 'L'); }  /* Insert line */
-
-/*  Test of some known VT100 bugs and misfeatures  */
-
-tst_bugs() {
-
-  int i, menuchoice;
-
-  static char *menutable[] = {
-    "Exit to main menu",
-    "Bug A: Smooth scroll to jump scroll",
-    "Bug B: Scrolling region",
-    "Bug C: Wide to narrow screen",
-    "Bug D: Narrow to wide screen",
-    "Bug E: Cursor move from double- to single-wide line",
-    "Bug F: Column mode escape sequence",
-    "Wrap around with cursor addressing",
-    "Erase right half of double width lines",
-    "Funny scroll regions",
-    /* Add more here */
-    ""
-  };
-
-  static char *hmsg[] = {
-  "Test of known bugs in the DEC VT100 series. The numbering of some of",
-  "the bugs (A-F) refers to the article 'VT100 MAGIC' by Sami Tabih in",
-  "the 'Proceedings of the DEC Users Society' at St. Louis, Missouri, May",
-  "1983. To understand some of the tests, you have to look at the source",
-  "code or the article. Of course, a good VT100-compatible terminal",
-  "should not have these bugs (or have some means of disabling them)! If",
-  "a bug appears, you might want to RESET the terminal before continuing",
-  "the test. There is a test of the RESET function in the main menu.",
-  "" };
-
-  do {
-    ed(2); cup(1,1);
-    for (i = 0; *hmsg[i]; i++) println(hmsg[i]);
-    println("");
-    println("          Choose bug test number:");
-    menuchoice = menu(menutable);
-    switch (menuchoice) {
-      case  1:  bug_a();  break;
-      case  2:  bug_b();  break;
-      case  3:  bug_c();  break;
-      case  4:  bug_d();  break;
-      case  5:  bug_e();  break;
-      case  6:  bug_f();  break;
-      case  7:  bug_w();  break;
-      case  8:  bug_l();  break;
-      case  9:  bug_s();  break;
-    }
-  } while (menuchoice);
-}
-
-/* Bug A: Smooth scroll to jump scroll */
-
-bug_a() {
-  int i;
-
-  cup (10, 1);
-  println("This is a test of the VT100 'Scroll while toggle softscroll'");
-  println("bug.  The cursor may disappear, or move UP the screen, or");
-  println("multiple copies of some lines may appear.");
-  holdit();
-
-  /*  Invoke the bug  */
-
-  esc ("[24H");				/* Simplified cursor movement	*/
-  rm("?4"); for (i = 1; i <= 20; i++) printf("\n");
-  sm("?4"); for (i = 1; i <= 10; i++) printf("\n");
-  rm("?4"); for (i = 1; i <=  5; i++) printf("\n");
-
-  /* That should be enough to show the bug. But we'll try another way:	*/
-  sm ("?4");				/* Set soft scroll		*/
-  nel ();				/* "NextLine", move down	*/
-  rm ("?4");				/* Reset soft scroll		*/
-  nel ();				/* "NextLine", move down	*/
-  for (i = 1; i <= 10; i++) {		/* Show the bug			*/
-      printf ("Softscroll bug test, line %d.  ", i);
-      holdit();
-  }
-  println("That should have been enough to show the bug, if present.");
-  holdit();
-}
-
-/*  Bug B: Scrolling region  */
-
-bug_b() {
-  char c;
-
-  decaln();
-  cup( 1,1); el(0);
-  printf("Line 11 should be double-wide, line 12 should be cleared.");
-  cup( 2,1); el(0);
-  printf("Then, the letters A-P should be written at the beginning");
-  cup( 3,1); el(0);
-  printf("of lines 12-24, and the empty line and A-E are scrolled away.");
-  cup( 4,1); el(0);
-  printf("If the bug is present, some lines are confused, look at K-P.");
-  cup(11,1); decdwl();
-  decstbm(12,24);
-  cup(12,1); el(0); printf("Here we go... "); holdit();
-  cup(12,1); ri();					/* Bug comes here */
-  for (c = 'A'; c <= 'P'; c++) printf("%c\n",c);	/* Bug shows here */
-  holdit();
-  decstbm(0,0);						/* No scr. region */
-}
-
-/*  Bug C: Wide to narrow screen  */
-
-bug_c() {
-  sm("?3");						/* 132 column mode */
-  cup(1,81);
-  rm("?3");						/*  80 column mode */
-  cup(12,5);
-  printf("Except for this line, the screen should be blank. ");
-  holdit();
-}
-
-/*  Bug D: Narrow to wide screen  */
-
-bug_d() {
-  int i;
-  char result;
-  /* Make the bug appear */
-  do {
-    cup(14,1);
-
-    /* The original code in the article says
-     * PRINT ESC$; "[13;1H"; CHR$(10%);
-     * but I guess a cup(14,1); would do.
-     * (To output a pure LF might be tricky).
-     */
-
-    sm("?3");		      /* Make the bug visible */
-    cup(1,9); decdwl();
-    println("You should see blinking text at the bottom line.");
-    cup(3,9); decdwl();
-    println("Enter 0 to exit, 1 to try to invoke the bug again.");
-    cup(24,9); decdwl(); sgr("1;5;7");
-    printf("If you can see this then the bug did not appear."); sgr("");
-    cup(4,9); decdwl();
-    result = inchar(); readnl();
-    rm("?3");
-  } while (result == '1');
-  sm("?4");	/* Syrup scroll */
-  cup(23,1);
-  for (i = 1; i <= 5; i++)
-  println("If the bug is present, this should make things much worse!");
-  holdit();
-  rm("?4");	/* Jump scroll */
-}
-
-/*  Bug E: Cursor move from double- to single-wide line  */
-
-bug_e() {
-  int i;
-  static char *rend[2] = { "\033[m", "\033[7m" };
-  sm("?3");
-  cup(1,1); decdwl();
-  println("This test should put an 'X' at line 3 column 100.");
-  for (i = 1; i <= 12; i++) printf("1234567890%s",rend[i & 1]);
-  cup(1,1);	/* The bug appears when we jump from a dobule-wide line */
-  cup(3,100);	/* to a single-wide line, column > 66.                  */
-  printf("X");
-  cup(4, 66); printf("!                                 !");
-  cup(5,1);
-  printf("--------------------------- The 'X' should NOT be above here -");
-  printf("---+------------ but above here -----+");
-  cup(10,1); decdwl(); holdit();
-  rm("?3");
-}
-
-/*  Bug F: Column mode escape sequence  */
-
-bug_f() {
-  int i, row, col;
-
- /*
-  *  VT100 "toggle origin mode, forget rest" bug.  If you try to set
-  *	(or clear) parameters and one of them is the "origin mode"
-  *	("?6") parameter, parameters that appear after the "?6"
-  *	remain unaffected.  This is also true on CIT-101 terminals.
-  */
-  sm ("?5");				/* Set reverse mode		*/
-  sm ("?3");				/* Set 132 column mode		*/
-  println("Test VT100 'Toggle origin mode, forget rest' bug, part 1.");
-  println("The screen should be in reverse, 132 column mode.");
-  holdit();
-  ed (2);
-  rm ("?6;5;3");		/* Reset (origin, reverse, 132 col)	*/
-  println("Test VT100 'Toggle origin mode, forget rest' bug, part 2.\n");
-  println("The screen should be in non-reverse, 80 column mode.");
-  holdit();
-}
-
-  /*	Bug W:
-   *	The dreaded "wraparound" bug!  You CUP to col 80, write a char,
-   *	CUP to another line in col 80, write a char. And the brain-damaged
-   *	terminal thinks that "Hokay, so he's written a char in col 80, so
-   *	I stay in col 80 and wait for next character. Let's see now, here
-   *	comes another character, and I'm still in col 80, so I must make
-   *	a NewLine first." -- It doesn't clear that "still in col 80" flag
-   *	on a CUP. Argh!
-   */
-
-bug_w() {
-  int row, col;
-
-  cup (16,1);
-  println("   This illustrates the \"wrap around bug\" which exists on a");
-  println("   standard VT100. At the top of the screen there should be");
-  println("   a row of +'s, and the rightmost column should be filled");
-  println("   with *'s. But if the bug is present, some of the *'s may");
-  println("   be placed in other places, e.g. in the leftmost column,");
-  println("   and the top line of +'s may be scrolled away.");
-
-  cup(1,1);
-  for (col = 1; col <= 79; col++)
-      printf ("+");
-  for (row = 1; row <= 24; row++) {
-      hvp (row, 80);
-      printf ("*");
-  }
-  cup(24,1);
-  holdit();
-}
-
-  /*	Bug L:
-   *	Check if the right half of double-width lines comes back
-   *	when a line is first set to single-width, filled with stuff,
-   *	set to double-width, and finally reset to single-width.
-   *
-   *	A VT100 has this misfeature, and many others. Foo!
-   */
-
-bug_l() {
-  cup(15, 1);
-  printf("This-is-a-long-line-This-is-a-long-line-");
-  printf("This-is-a-long-line-This-is-a-long-line-");
-  cup(1, 1);
-  printf("This is a test of what happens to the right half of double-width");
-  println(" lines.");
-  printf("A common misfeature is that the right half does not come back");
-  println(" when a long");
-  printf("single-width line is set to double-width and then reset to");
-  println(" single-width.");
-
-  cup(5, 1);
-  println("Now the line below should contain 80 characters in single width.");
-  holdit();
-  cup(15, 1); decdwl();
-  cup(8, 1);
-  println("Now the line below should contain 40 characters in double width.");
-  holdit();
-  cup(15, 1); decswl();
-  cup(11, 1);
-  println("Now the line below should contain 80 characters in single width.");
-  holdit();
-
-  /* ...and in 132 column mode  */
-
-  sm("?3");
-  ed(2);
-  cup(15, 1);
-  printf("This-is-a-long-line-This-is-a-long-line-");
-  printf("This-is-a-long-line-This-is-a-long-line-");
-  printf("This-is-a-long-line-This-is-a-long-line-");
-  printf("ending-here-");
-
-  cup(1, 1);
-  printf("This is the same test in 132 column mode.");
-
-  cup(5, 1);
-  println("Now the line below should contain 132 characters in single width.");
-  holdit();
-  cup(15, 1); decdwl();
-  cup(8, 1);
-  println("Now the line below should contain 66 characters in double width.");
-  holdit();
-  cup(15, 1); decswl();
-  cup(11, 1);
-  println("Now the line below should contain 132 characters in single width.");
-  holdit();
-  rm("?3");
-}
-
-bug_s() {
-  int i;
-  decstbm(20,10);	/* 20-10=-10, < 2, so no scroll region. */
-  cup(1,1);
-  for (i=1; i<=20; i++)
-    printf("This is 20 lines of text (line %d), no scroll region.\n", i);
-  holdit();
-  ed(2);
-  decstbm(0,1);		/* Should be interpreted as decstbm(1,1) = none */
-  cup(1,1);
-  for (i=1; i<=20; i++)
-    printf("This is 20 lines of text (line %d), no scroll region.\n", i);
-  holdit();
-  decstbm(0,0);		/* No scroll region (just in case...)	*/
-}
-
-tst_rst() {
-
-  /*
-   * Test of
-   *	- RIS    (Reset to Initial State)
-   *	- DECTST (invoke terminal test)
-   */
-
-  cup(10,1);
-  printf ("The terminal will now be RESET. ");
-  holdit();
-  ris();
-#ifdef UNIX
-  fflush(stdout);
-#endif
-  zleep(5000);		/* Wait 5.0 seconds */
-  cup(10,1);
-  println("The terminal is now RESET. Next, the built-in confidence test");
-  printf("%s", "will be invoked. ");
-  holdit();
-  ed(2);
-  dectst(1);
-#ifdef UNIX
-  fflush(stdout);
-#endif
-  zleep(5000);		/* Wait 5.0 seconds */
-  cup(10,1);
-  println("If the built-in confidence test found any errors, a code");
-  printf("%s", "is visible above. ");
-  holdit();
-}
-
-initterminal(pn) int pn; {
-
-
-#ifdef UNIX
-# ifdef TERMIO
-  if (pn==0) {
-    fflush(stdout);
-    (void) ioctl(0, TCGETA, &termioOrg);
-    (void) ioctl(0, TCGETA, &termioNew);
-    termioNew.c_lflag &= ~ICANON;
-    termioNew.c_cc[VMIN] = 1;
-    termioNew.c_cc[VTIME] = 0;
-    (void) ioctl(0, TCSETAW, &termioNew);
-    }
-  else  {
-    fflush(stdout);
-    inflush();
-    sleep(2);
-    termioNew.c_lflag = termioOrg.c_lflag & ~ICANON;
-    termioNew.c_cc[VMIN] = 1;
-    termioNew.c_cc[VTIME] = 0;
-  }
-  (void) ioctl(0, TCSETAW, &termioNew);
-# else
-  if (pn==0) {
-    fflush(stdout);
-    gtty(0,&sgttyOrg);
-    gtty(0,&sgttyNew);
-    sgttyNew.sg_flags |= CBREAK;
-  }
-  else  {
-    fflush(stdout);
-    inflush();
-    sleep(2);
-    sgttyNew.sg_flags = sgttyOrg.sg_flags | CBREAK;
-  }
-  stty(0,&sgttyNew);
-# endif
-#ifdef SIII
-  close(2);
-  open("/dev/tty",O_RDWR|O_NDELAY);
-#endif
-#endif
-
-#ifdef SARG10
-  /* Set up necessary TOPS-10 terminal parameters	*/
-
-  trmop(02041, `VT100`);	/* tty type vt100	*/
-  trmop(02002, 0);	/* tty no tape	*/
-  trmop(02003, 0);	/* tty lc	*/
-  trmop(02005, 1);	/* tty tab	*/
-  trmop(02010, 1);	/* tty no crlf	*/
-  trmop(02020, 0);	/* tty no tape	*/
-  trmop(02021, 1);	/* tty page	*/
-  trmop(02025, 0);	/* tty blanks	*/
-  trmop(02026, 1);	/* tty no alt	*/
-  trmop(02040, 1);	/* tty defer	*/
-#endif
-#ifdef SARG20
-  ttybin(1);	/* set line to binary mode */
-#endif
-  /* Set up my personal prejudices	*/
-
-  esc("<");	/* Enter ANSI mode (if in VT52 mode)	*/
-  rm("?1");     /* cursor keys normal   */
-  rm("?3");	/* 80 col mode		*/
-  rm("?4");     /* Jump scroll          */
-  rm("?5");     /* Normal screen        */
-  rm("?6");	/* Absolute origin mode	*/
-  sm("?7");	/* Wrap around on	*/
-  rm("?8");	/* Auto repeat off	*/
-  decstbm(0,0);	/* No scroll region	*/
-  sgr("0");     /* Normal character attributes  */
-
-}
-
-bye () {
-  /* Force my personal prejudices upon the poor luser	*/
-
-  esc("<");	/* Enter ANSI mode (if in VT52 mode)	*/
-  rm("?1");     /* cursor keys normal   */
-  rm("?3");	/* 80 col mode		*/
-  rm("?5");     /* Normal screen        */
-  rm("?6");	/* Absolute origin mode	*/
-  sm("?7");	/* Wrap around on	*/
-  sm("?8");	/* Auto repeat on	*/
-  decstbm(0,0);	/* No scroll region	*/
-  sgr("0");     /* Normal character attributes  */
-
-  /* Say goodbye */
-
-  ed(2);
-  cup(12,30);
-  printf("That's all, folks!\n");
-  printf("\n\n\n");
-  inflush();
-#ifdef SARG20
-  ttybin(0);	/* reset line to normal mode */
-#endif
-#ifdef UNIX
-#ifdef TERMIO
-  (void) ioctl(0, TCSETAW, &termioOrg);
-#else
-  stty(0,&sgttyOrg);
-#endif
-#endif
-  exit(0);
-}
-
-#ifdef UNIX
-onbrk() {
-  signal(SIGINT, onbrk);
-  if (reading)
-    brkrd = 1;
-  else
-    longjmp(intrenv, 1);
-}
-
-onterm() {
-  signal(SIGTERM, onterm);
-  longjmp(intrenv, 1);
-}
-#endif
-
-holdit() {
-  inflush();
-  printf("Push <RETURN>");
-  readnl();
-}
-
-readnl() {
-#ifdef UNIX
-  char ch;
-  fflush(stdout);
-  brkrd = 0;
-  reading = 1;
-  do { read(0,&ch,1); } while(ch != '\n' && !brkrd);
-  if (brkrd)
-    kill(getpid(), SIGTERM);
-  reading = 0;
-#endif
-#ifdef SARG10
- while (getchar() != '\n')
- ;
-#endif
-#ifdef SARG20
- while (getchar() != '\n')
-   ;
-#endif
-}
-
-scanto(str, pos, toc) char *str; int *pos; char toc; {
-  char c;
-  int result = 0;
-
-  while (toc != (c = str[(*pos)++])) {
-    if (isdigit(c)) result = result * 10 + c - '0';
-    else break;
-  }
-  if (c == toc) return(result);
-  else          return(0);
-}
-
-char *lookup(t, k) struct table t[]; int k; {
-
-  int i;
-  for (i = 0; t[i].key != -1; i++) {
-    if (t[i].key == k) return(t[i].msg);
-  }
-  return("BAD VALUE");
-}
-
-menu(table) char *table[]; {
-
-  int i, tablesize, choice;
-  char c;
-  char storage[80];
-  char *s = storage;
-  println("");
-  tablesize = 0;
-  for (i = 0; *table[i] != '\0'; i++) {
-    printf("          %d. %s\n", i, table[i]);
-    tablesize++;
-  }
-  tablesize--;
-
-  printf("\n          Enter choice number (0 - %d): ", tablesize);
-  for(;;) {
-    inputline(s);
-    choice = 0;
-    while (c = *s++) choice = 10 * choice + c - '0';
-    if (choice >= 0 && choice <= tablesize) {
-      ed(2);
-      return (choice);
-    }
-    printf("          Bad choice, try again: ");
-  }
-}
-
-chrprint (s) char *s; {
-
-  int i;
-
-  printf("  ");
-  sgr("7");
-  printf(" ");
-  for (i = 0; s[i] != '\0'; i++) {
-    if (s[i] <= ' ' || s[i] == '\177')
-    printf("<%d> ", s[i]);
-    else printf("%c ", s[i]);
-  }
-  sgr("");
-}
diff -Naur konsole/tests/Makefile konsole/tests/Makefile
--- konsole/tests/Makefile	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/tests/Makefile	1970-01-01 02:00:00.000000000 +0200
@@ -1,15 +0,0 @@
-CFLAGS	= -O
-OBJS	= main.o esc.o
-
-all: vttest quote
-
-vttest:	$(OBJS)
-	cc $(CFLAGS) -o vttest $(OBJS)
-
-install: vttest
-	cp vttest.1 /usr/man/man1/vttest.1
-	cp vttest /usr/local/bin/vttest
-	strip /usr/local/bin/vttest
-
-clean:
-	rm -f $(OBJS) vttest foo core lint tags a.out
diff -Naur konsole/tests/README.vttest konsole/tests/README.vttest
--- konsole/tests/README.vttest	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/tests/README.vttest	1970-01-01 02:00:00.000000000 +0200
@@ -1,57 +0,0 @@
-NOTES FROM THE MOD.SOURCES MODERATOR:
-I split the source up into the three separate pieces it now is.
-In doing this, I put lines like "int reading;" in a header file
-that both C modules include.  If your Unix requires one of these
-to be "extern int reading;" then you will have some editing to do.
-Also note that this program uses FIONREAD, which must be implemented
-differently in SystemV, etc., and check out the setjmp() call...
-	/Rich $alz
-Oh, yeah:  I also wrote the Makefile and manpage, such as they are.
--------------------------------------------------------------------
-
-This is a program to test the compatibility (or to demonstrate the
-non-compatibility) of so-called "VT100-compatible" terminals. In
-conformance of the good old hacker traditions, the only documentation
-of this program is the source code itself. To understand it, you also
-need a copy of the original VT100 manual from DEC.
-
-Comments and bug reports: Since this is a release (via USENET) to the
-whole world, a lot of people are going to have opinions and fresh
-ideas about it. (What -- bugs in MY program? Aww...)  I can't deal
-with everyone sending me a hacked version, but if you have found a
-serious bug, or ported it to VMS, do tell me. I can't promise any new
-version release, though. From this version on (1.7b) VTTEST will have
-to live its own life without its father holding its hand.
-
-My address is:
-
-Network-mail address:     (mcvax,seismo)!enea!suadb!lindberg
-
-Real-world-mail address: Per Lindberg
-                         QZ, Stockholm University Computing Center
-			 Box 27322
-			 S - 102 54  Stockholm
-			 SWEDEN
-
-The original version of this program is written for the Sargasso C
-compiler for the DECsystem-10. Many thanks to all sales persons with
-quote VT100-compatible unquote terminals, who prompted me to write
-this program, and also to:
-
--- Bo Kleve, LIDAC, Linkoping University, Sweden
-   for the portation to DECSYSTEM-20 with the Sargasso C compiler
-
--- Johan Widen, TTDS, Royal Institute of Technology, Stockholm, Sweden
-   for the portation to various UNIX systems (incl. System III and Xenix)
-
--- Russ Herman, AES Data Inc., Missisauga, Ont. Canada
-   for fixes and code for the VT102 test
-
-Thanx also to JMR "Gremlin" at KTH, and Goran Wallberg at QZ
-for suggestions, bug fixes, etc.
-
-This program does not have support for all the different variations
-of VT100, like VT125, VT131 nor the new VT200 series. Feel free to
-add that yourself. Happy Hacking!
-
-                 /TMP
diff -Naur konsole/tests/vttest.1 konsole/tests/vttest.1
--- konsole/tests/vttest.1	2008-01-05 01:54:02.000000000 +0200
+++ apps/konsole/tests/vttest.1	1970-01-01 02:00:00.000000000 +0200
@@ -1,13 +0,0 @@
-.TH VTTEST 1 "LOCAL"
-.SH NAME
-vttest \- test VT100-type terminal
-.SH SYNOPSIS
-.B vttest
-.SH DESCRIPTION
-.I Vttest
-is a program designed to test the functionality of a VT100 terminal
-(or emulator thereof).
-It tests both display (escape sequence handling) and keyboard.
-.PP
-The program is menu\-driven and contains full on\-line operating
-instructions.
