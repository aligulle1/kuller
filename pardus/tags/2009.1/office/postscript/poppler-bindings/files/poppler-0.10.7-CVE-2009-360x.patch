http://cgit.freedesktop.org/poppler/poppler/commit/?id=1082e1671a

CVE-2009-3603 CVE-2009-3608 CVE-2009-3609

diff -pruN poppler-0.10.7.orig/poppler/Stream.cc poppler-0.10.7/poppler/Stream.cc
--- poppler-0.10.7.orig/poppler/Stream.cc	2009-05-16 17:27:41.000000000 +0200
+++ poppler-0.10.7/poppler/Stream.cc	2009-10-24 20:14:48.000000000 +0200
@@ -403,6 +403,10 @@ ImageStream::ImageStream(Stream *strA, i
   } else {
     imgLineSize = nVals;
   }
+  if (width > INT_MAX / nComps) {
+    // force a call to gmallocn(-1,...), which will throw an exception
+    imgLineSize = -1;
+  }
   imgLine = (Guchar *)gmallocn(imgLineSize, sizeof(Guchar));
   imgIdx = nVals;
 }
diff -pruN poppler-0.10.7.orig/poppler/XRef.cc poppler-0.10.7/poppler/XRef.cc
--- poppler-0.10.7.orig/poppler/XRef.cc	2009-10-24 20:11:45.000000000 +0200
+++ poppler-0.10.7/poppler/XRef.cc	2009-10-24 20:26:33.000000000 +0200
@@ -80,6 +80,7 @@ ObjectStream::ObjectStream(XRef *xref, i
   objs = NULL;
   objNums = NULL;
   offsets = NULL;
+  ok = gFalse;
 
   if (!xref->fetch(objStrNum, 0, &objStr)->isStream()) {
     goto err1;
@@ -106,8 +107,11 @@ ObjectStream::ObjectStream(XRef *xref, i
     goto err1;
   }
 
-  if (nObjects*(int)sizeof(int)/sizeof(int) != nObjects) {
-    error(-1, "Invalid 'nObjects'");
+  // this is an arbitrary limit to avoid integer overflow problems
+  // in the 'new Object[nObjects]' call (Acrobat apparently limits
+  // object streams to 100-200 objects)
+  if (nObjects > 1000000) {
+    error(-1, "Too many objects in an object stream");
     goto err1;
   }
  
@@ -167,10 +171,10 @@ ObjectStream::ObjectStream(XRef *xref, i
   }
 
 //   gfree(offsets);
+  ok = gTrue;
 
  err1:
   objStr.free();
-  return;
 }
 
 ObjectStream::~ObjectStream() {
@@ -948,6 +952,11 @@ Object *XRef::fetch(int num, int gen, Ob
 	delete objStr;
       }
       objStr = new ObjectStream(this, e->offset);
+      if (!objStr->isOk()) {
+	delete objStr;
+	objStr = NULL;
+	goto err;
+      }
     }
     objStr->getObject(e->gen, num, obj);
     break;
diff -pruN poppler-0.10.7.orig/poppler/XRef.h poppler-0.10.7/poppler/XRef.h
--- poppler-0.10.7.orig/poppler/XRef.h	2009-10-24 20:11:45.000000000 +0200
+++ poppler-0.10.7/poppler/XRef.h	2009-10-24 20:27:32.000000000 +0200
@@ -44,6 +44,8 @@ public:
   // generation 0.
   ObjectStream(XRef *xref, int objStrNumA);
 
+  GBool isOk() { return ok; }
+
   ~ObjectStream();
 
   // Return the object number of this object stream.
@@ -64,6 +66,7 @@ private:
   int *objNums;			// the object numbers (length = nObjects)
   int *offsets;			// the object offsets (length = nObjects)
   Guint firstOffset;
+  GBool ok;
 };
 
 
diff -pruN poppler-0.10.7.orig/splash/Splash.cc poppler-0.10.7/splash/Splash.cc
--- poppler-0.10.7.orig/splash/Splash.cc	2009-10-24 20:11:45.000000000 +0200
+++ poppler-0.10.7/splash/Splash.cc	2009-10-24 20:14:48.000000000 +0200
@@ -27,6 +27,7 @@
 
 #include <stdlib.h>
 #include <string.h>
+#include <limits.h>
 #include "goo/gmem.h"
 #include "SplashErrorCodes.h"
 #include "SplashMath.h"
@@ -2001,6 +2002,9 @@ SplashError Splash::fillImageMask(Splash
   xq = w % scaledWidth;
 
   // allocate pixel buffer
+  if (yp < 0 || yp > INT_MAX - 1) {
+    return splashErrBadArg;
+  }
   pixBuf = (SplashColorPtr)gmallocn((yp + 1), w);
 
   // initialize the pixel pipe
@@ -2301,6 +2305,9 @@ SplashError Splash::drawImage(SplashImag
   xq = w % scaledWidth;
 
   // allocate pixel buffers
+  if (yp < 0 || yp > INT_MAX - 1) {
+    return splashErrBadArg;
+  }
   colorBuf = (SplashColorPtr)gmallocn3((yp + 1), w, nComps);
   if (srcAlpha) {
     alphaBuf = (Guchar *)gmallocn((yp + 1), w);
diff -pruN poppler-0.10.7.orig/splash/SplashBitmap.cc poppler-0.10.7/splash/SplashBitmap.cc
--- poppler-0.10.7.orig/splash/SplashBitmap.cc	2009-10-24 20:11:45.000000000 +0200
+++ poppler-0.10.7/splash/SplashBitmap.cc	2009-10-24 20:15:05.000000000 +0200
@@ -26,6 +26,7 @@
 #endif
 
 #include <stdio.h>
+#include <limits.h>
 #include "goo/gmem.h"
 #include "SplashErrorCodes.h"
 #include "SplashBitmap.h"
@@ -42,26 +43,48 @@ SplashBitmap::SplashBitmap(int widthA, i
   mode = modeA;
   switch (mode) {
   case splashModeMono1:
-    rowSize = (width + 7) >> 3;
+    if (width > 0) {
+      rowSize = (width + 7) >> 3;
+    } else {
+      rowSize = -1;
+    }
     break;
   case splashModeMono8:
-    rowSize = width;
+    if (width > 0) {
+      rowSize = width;
+    } else {
+      rowSize = -1;
+    }
     break;
   case splashModeRGB8:
   case splashModeBGR8:
-    rowSize = width * 3;
+    if (width > 0 && width <= INT_MAX / 3) {
+      rowSize = width * 3;
+    } else {
+      rowSize = -1;
+    }
     break;
   case splashModeXBGR8:
-    rowSize = width * 4;
+    if (width > 0 && width <= INT_MAX / 4) {
+      rowSize = width * 4;
+    } else {
+      rowSize = -1;
+    }
     break;
 #if SPLASH_CMYK
   case splashModeCMYK8:
-    rowSize = width * 4;
+    if (width > 0 && width <= INT_MAX / 4) {
+      rowSize = width * 4;
+    } else {
+      rowSize = -1;
+    }
     break;
 #endif
   }
-  rowSize += rowPad - 1;
-  rowSize -= rowSize % rowPad;
+  if (rowSize > 0) {
+    rowSize += rowPad - 1;
+    rowSize -= rowSize % rowPad;
+  }
   data = (SplashColorPtr)gmallocn(rowSize, height);
   if (!topDown) {
     data += (height - 1) * rowSize;
diff -pruN poppler-0.10.7.orig/splash/SplashErrorCodes.h poppler-0.10.7/splash/SplashErrorCodes.h
--- poppler-0.10.7.orig/splash/SplashErrorCodes.h	2009-05-02 14:14:56.000000000 +0200
+++ poppler-0.10.7/splash/SplashErrorCodes.h	2009-10-24 20:14:48.000000000 +0200
@@ -41,6 +41,8 @@
 
 #define splashErrSingularMatrix  8	// matrix is singular
 
-#define splashErrZeroImage       9      // image of 0x0
+#define splashErrBadArg          9      // bad argument
+
+#define splashErrZeroImage     254      // image of 0x0
 
 #endif
