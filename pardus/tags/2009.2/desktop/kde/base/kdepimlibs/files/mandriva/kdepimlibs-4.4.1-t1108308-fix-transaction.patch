Index: akonadi/specialcollectionshelperjobs_p.h
===================================================================
--- akonadi/specialcollectionshelperjobs_p.h	(révision 1108307)
+++ akonadi/specialcollectionshelperjobs_p.h	(révision 1108308)
@@ -42,7 +42,7 @@
   @author Constantin Berzan <exit3219@gmail.com>
   @since 4.4
 */
-class AKONADI_TESTS_EXPORT ResourceScanJob : public TransactionSequence
+class AKONADI_TESTS_EXPORT ResourceScanJob : public Job
 {
   Q_OBJECT
 
Index: akonadi/specialcollectionshelperjobs.cpp
===================================================================
--- akonadi/specialcollectionshelperjobs.cpp	(révision 1108307)
+++ akonadi/specialcollectionshelperjobs.cpp	(révision 1108308)
@@ -141,18 +141,18 @@
   if ( !mRootCollection.isValid() ) {
     q->setError( Unknown );
     q->setErrorText( i18n( "Could not fetch root collection of resource %1.", mResourceId ) );
-    q->commit();
+    q->emitResult();
     return;
   }
 
   // We are done!
-  q->commit();
+  q->emitResult();
 }
 
 
 
 ResourceScanJob::ResourceScanJob( const QString &resourceId, KCoreConfigSkeleton *settings, QObject *parent )
-  : TransactionSequence( parent ),
+  : Job( parent ),
     d( new Private( settings, this ) )
 {
   setResourceId( resourceId );
@@ -190,8 +190,6 @@
     setError( Job::Unknown );
     setErrorText( i18n( "No resource ID given." ) );
     emitResult();
-    TransactionSequence::doStart(); // HACK: probable misuse of TransactionSequence API.
-                                    // Calling commit() here hangs :-/
     return;
   }
 
@@ -301,7 +299,7 @@
       q->emitResult();
       return;
     }
-                         
+
     QMapIterator<QString, QVariant> it( mDefaultResourceOptions );
     while ( it.hasNext() ) {
       it.next();
@@ -314,7 +312,7 @@
       if ( argType == QVariant::Invalid ) {
         q->setError( Job::Unknown );
         q->setErrorText( i18n( "Failed to configure default resource via D-Bus." ) );
-        q->commit();
+        q->emitResult();
         return;
       }
 
@@ -322,7 +320,7 @@
       if ( !reply.isValid() ) {
         q->setError( Job::Unknown );
         q->setErrorText( i18n( "Failed to configure default resource via D-Bus." ) );
-        q->commit();
+        q->emitResult();
         return;
       }
     }
@@ -381,7 +379,7 @@
   if ( !resourceCollection.isValid() ) {
     q->setError( Job::Unknown );
     q->setErrorText( i18n( "Failed to fetch the resource collection." ) );
-    q->commit();
+    q->emitResult();
     return;
   }
 
@@ -425,7 +423,7 @@
   }
 
   if ( mPendingModifyJobs == 0 )
-    q->commit();
+    q->emitResult();
 }
 
 void DefaultResourceJobPrivate::collectionModifyResult( KJob *job )
@@ -507,7 +505,7 @@
     }
   }
 
-  TransactionSequence::slotResult( job );
+  Job::slotResult( job );
 }
 
 // ===================== GetLockJob ============================
