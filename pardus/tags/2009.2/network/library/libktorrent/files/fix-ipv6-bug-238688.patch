Index: src/net/socket.cpp
===================================================================
--- src/net/socket.cpp	(revision 1130595)
+++ src/net/socket.cpp	(revision 1130596)
@@ -183,7 +183,7 @@
 	
 	bool Socket::bind(const QString & ip,Uint16 port,bool also_listen)
 	{
-		int val = 1;
+		int val = 1, no = 0;
 #ifndef Q_WS_WIN
 		if (setsockopt(m_fd,SOL_SOCKET,SO_REUSEADDR,&val,sizeof(int)) < 0)
 #else
@@ -192,6 +192,10 @@
 		{
 			Out(SYS_CON|LOG_NOTICE) << QString("Failed to set the reuseaddr option : %1").arg(strerror(errno)) << endl;
 		}
+		// Bind this socket to IPv4 as well. This is a workaround for systems
+		// which support IPv4-mapped addresses but have them disabled by
+		// default (e.g. net.ipv6.bindv6only=1 on Debian Linux).
+		setsockopt(m_fd,SOL_IPV6,IPV6_V6ONLY,&no,sizeof(no));
 
 		net::Address addr(ip,port);
 		if (::bind(m_fd,addr.address(),addr.length()) != 0)
@@ -212,7 +216,7 @@
 	
 	bool Socket::bind(const net::Address& addr, bool also_listen)
 	{
-		int val = 1;
+		int val = 1, no = 0;
 #ifndef Q_WS_WIN
 		if (setsockopt(m_fd,SOL_SOCKET,SO_REUSEADDR,&val,sizeof(int)) < 0)
 #else
@@ -221,6 +225,10 @@
 		{
 			Out(SYS_CON|LOG_NOTICE) << QString("Failed to set the reuseaddr option : %1").arg(strerror(errno)) << endl;
 		}
+		// Bind this socket to IPv4 as well. This is a workaround for systems
+		// which support IPv4-mapped addresses but have them disabled by
+		// default (e.g. net.ipv6.bindv6only=1 on Debian Linux).
+		setsockopt(m_fd,SOL_IPV6,IPV6_V6ONLY,&no,sizeof(no));
 		
 		if (::bind(m_fd,addr.address(),addr.length()) != 0)
 		{
