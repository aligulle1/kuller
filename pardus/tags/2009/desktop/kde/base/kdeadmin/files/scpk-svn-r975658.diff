Index: system-config-printer-kde/CMakeLists.txt
===================================================================
--- system-config-printer-kde/CMakeLists.txt.orig
+++ system-config-printer-kde/CMakeLists.txt
@@ -1,21 +1,19 @@
-set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}  ${CMAKE_CURRENT_SOURCE_DIR}/cmake-modules )
+find_package( KDE4 REQUIRED )
 
-MACRO(PYKDE4_ADD_EXECUTABLE _pyname _exename)
-    INSTALL(CODE "EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -DTARGET=${DATA_INSTALL_DIR}/system-config-printer-kde/${_pyname} -DLINK_NAME=${BIN_INSTALL_DIR}/${_exename} -P ${CMAKE_CURRENT_SOURCE_DIR}/cmake-modules/create_exe_symlink.cmake)" )
-ENDMACRO(PYKDE4_ADD_EXECUTABLE)
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}  ${CMAKE_CURRENT_SOURCE_DIR}/cmake-modules )
 
 macro_optional_find_package(PythonLibrary)
 macro_optional_find_package(SIP)
 
 macro_optional_find_package(PyQt4)
 IF(NOT PYQT4_FOUND)
-    macro_log_feature(PYQT4_FOUND "PyQt4" "PyQt4 was not found.  It is needed by system-config-printer-kde to run. (Use -DINSTALL_SYSTEM_CONFIG_PRINTER=TRUE to install anyway)" "http://www.riverbankcomputing.co.uk/software/pyqt/" FALSE)
+    macro_log_feature(PYQT4_FOUND "PyQt4" "PyQt4 was not found.  It is needed by system-config-printer-kde to run. (Use -DINSTALL_SYSTEM_CONFIG_PRINTER=TRUE to install anyway)" "http://www.riverbankcomputing.co.uk/pyqt/" FALSE)
 ENDIF(NOT PYQT4_FOUND)
 
-macro_optional_find_package(PyKDE)
-IF(NOT PYKDE_FOUND)
-    macro_log_feature(PYKDE_FOUND "PyKDE" "PyKDE was not found.  It is needed by system-config-printer-kde to run.  (Use -DINSTALL_SYSTEM_CONFIG_PRINTER=TRUE to install anyway)" "http://websvn.kde.org/trunk/KDE/kdebindings/python/pykde4/" FALSE)
-ENDIF(NOT PYKDE_FOUND)
+macro_optional_find_package(PyKDE4)
+IF(NOT PYKDE4_FOUND)
+    macro_log_feature(PYKDE_FOUND "PyKDE4" "PyKDE4 was not found.  It is needed by system-config-printer-kde to run.  (Use -DINSTALL_SYSTEM_CONFIG_PRINTER=TRUE to install anyway)" "http://websvn.kde.org/trunk/KDE/kdebindings/python/pykde4/" FALSE)
+ENDIF(NOT PYKDE4_FOUND)
 
 macro_optional_find_package(PyCups)
 IF(NOT PYCUPS_FOUND)
@@ -27,18 +25,21 @@ IF(NOT SYSTEMCONFIGPRINTER_FOUND)
     macro_log_feature(SYSTEMCONFIGPRINTER_FOUND "system-config-printer" "system-config-printer was not found.  Some of its modules (cupshelpers.py, config.py, smburi.py and debug.py) are required by system-config-printer-kde." "http://cyberelk.net/tim/software/system-config-printer/" FALSE)
 ENDIF(NOT SYSTEMCONFIGPRINTER_FOUND)
 
-IF(PYQT4_FOUND AND PYKDE_FOUND AND PYCUPS_FOUND AND SYSTEMCONFIGPRINTER_FOUND)
+IF(PYQT4_FOUND AND PYKDE4_FOUND AND PYCUPS_FOUND AND SYSTEMCONFIGPRINTER_FOUND)
     SET(INSTALL_SYSTEM_CONFIG_PRINTER TRUE)
-ENDIF(PYQT4_FOUND AND PYKDE_FOUND AND PYCUPS_FOUND AND SYSTEMCONFIGPRINTER_FOUND)
+ENDIF(PYQT4_FOUND AND PYKDE4_FOUND AND PYCUPS_FOUND AND SYSTEMCONFIGPRINTER_FOUND)
 
 IF(INSTALL_SYSTEM_CONFIG_PRINTER)
     install( FILES
         new-printer.ui
         system-config-printer.ui
         system-config-printer-kde.py
+        options.py
+        optionwidgets.py
+        ipp-browse-dialog.ui
+        smb-browse-dialog.ui
         DESTINATION ${DATA_INSTALL_DIR}/system-config-printer-kde )
-    PYKDE4_ADD_EXECUTABLE(system-config-printer-kde.py system-config-printer-kde)
-    install(FILES system-config-printer-kde.desktop DESTINATION ${XDG_APPS_INSTALL_DIR})
+    install(FILES system-config-printer-kde.desktop DESTINATION ${SERVICES_INSTALL_DIR})
 ENDIF(INSTALL_SYSTEM_CONFIG_PRINTER)
 
 macro_display_feature_log()
Index: system-config-printer-kde/cmake-modules/create_exe_symlink.cmake
===================================================================
--- system-config-printer-kde/cmake-modules/create_exe_symlink.cmake
+++ /dev/null
@@ -1,16 +0,0 @@
-# Create an executable symlink to a Python script.
-# This also sets the target script's permission bits.
-
-MESSAGE(STATUS "Symlinking $ENV{DESTDIR}${LINK_NAME} to ${TARGET}")
-
-GET_FILENAME_COMPONENT(abs_link_name $ENV{DESTDIR}/${LINK_NAME} ABSOLUTE)
-GET_FILENAME_COMPONENT(link_path $ENV{DESTDIR}/${LINK_NAME} PATH)
-GET_FILENAME_COMPONENT(abs_link_path ${link_path} ABSOLUTE)
-FILE(MAKE_DIRECTORY ${abs_link_path})
-
-GET_FILENAME_COMPONENT(abs_target ${TARGET} ABSOLUTE)
-IF(UNIX)
-    EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E create_symlink ${abs_target} ${abs_link_name})
-    EXECUTE_PROCESS(COMMAND chmod 755 $ENV{DESTDIR}/${abs_target})
-ENDIF(UNIX)
-# FIXME: WIN32 support
Index: system-config-printer-kde/cmake-modules/FindPyKDE.cmake
===================================================================
--- system-config-printer-kde/cmake-modules/FindPyKDE.cmake
+++ /dev/null
@@ -1,33 +0,0 @@
-# Find PyKde
-# ~~~~~~~~~~
-# Copyright (c) 2008, Jonathan Riddell <jriddell@ubuntu.com>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-# PyKde website: http://www.riverbankcomputing.co.uk/pykde/index.php
-#
-# Find the installed version of PyKDE.
-
-IF(PYKDE_FOUND)
-  # Already in cache, be silent
-  SET(PYKDE_FOUND TRUE)
-ELSE(PYKDE_FOUND)
-
-  GET_FILENAME_COMPONENT(_cmake_module_path ${CMAKE_CURRENT_LIST_FILE}  PATH)
-
-  EXECUTE_PROCESS(COMMAND ${PYTHON_EXECUTABLE} ${_cmake_module_path}/FindPyKDE.py OUTPUT_VARIABLE pykde ERROR_QUIET)
-  IF(pykde)
-    SET(PYKDE_FOUND TRUE)
-  ENDIF(pykde)
-
-  IF(PYKDE_FOUND)
-    IF(NOT PYKDE_FIND_QUIETLY)
-      MESSAGE(STATUS "Found PyKde")
-    ENDIF(NOT PYKDE_FIND_QUIETLY)
-  ELSE(PYKDE_FOUND)
-    IF(PYKDE_FIND_REQUIRED)
-      MESSAGE(FATAL_ERROR "Could not find PyKDE")
-    ENDIF(PYKDE_FIND_REQUIRED)
-  ENDIF(PYKDE_FOUND)
-
-ENDIF(PYKDE_FOUND)
Index: system-config-printer-kde/cmake-modules/FindPyKDE.py
===================================================================
--- system-config-printer-kde/cmake-modules/FindPyKDE.py
+++ /dev/null
@@ -1,9 +0,0 @@
-# Copyright (c) 2008, Jonathan Riddell <jriddell@ubuntu.com>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-try:
-    from PyKDE4.kdeui import KApplication
-except:
-    exit(1)
-print "Groovy"
Index: system-config-printer-kde/COMMENTS
===================================================================
--- /dev/null
+++ system-config-printer-kde/COMMENTS
@@ -0,0 +1,13 @@
+01:37 <seele> the menu/list on the left looks like a tree, will it eventually become a list like the other modules? icon and all?
+01:38 <seele> under configured printers, options and job options tabs, widgets dont have correct alignment
+01:38 <seele> job options is pretty scary looking too, we'll probably need to work on that
+01:38 <seele> i assume advanced is wip
+01:39 <seele> under policies tab, do you think the uesr and group permissions make sense? i know we discussed it a while ago as a way of doing it (or
+              someone else if not you)
+01:39 <seele> also.. remove should be disabled until you select a list item
+01:41 <seele> under settings, it takes a number of seconds for the change driver wizard to load after clicking the button. will this be improved eventually?
+01:41 <seele> also, is the change driver wizard within scope of what we can improve? (not going to comment on it now, but it could be tweaked)
+01:43 <seele> the remove printer button gets lost with the other printer buttons on that page. i'll have to think about what to do with that section, i dont
+              know where else remove printer could go
+01:45 <seele> the other parts of the UI, i'm not sure how much is up for debate. for example, the new printer wizard. also, i dont know much about print
+              server configuration and if those options are sufficient and presented in the best way
Index: system-config-printer-kde/ipp-browse-dialog.ui
===================================================================
--- /dev/null
+++ system-config-printer-kde/ipp-browse-dialog.ui
@@ -0,0 +1,124 @@
+<ui version="4.0" >
+ <class>IPPBrowseDialog</class>
+ <widget class="QDialog" name="IPPBrowseDialog" >
+  <property name="windowModality" >
+   <enum>Qt::NonModal</enum>
+  </property>
+  <property name="geometry" >
+   <rect>
+    <x>0</x>
+    <y>0</y>
+    <width>400</width>
+    <height>300</height>
+   </rect>
+  </property>
+  <property name="font" >
+   <font>
+    <weight>50</weight>
+    <bold>false</bold>
+   </font>
+  </property>
+  <property name="focusPolicy" >
+   <enum>Qt::StrongFocus</enum>
+  </property>
+  <property name="windowTitle" >
+   <string>IPP Browser</string>
+  </property>
+  <property name="modal" >
+   <bool>true</bool>
+  </property>
+  <widget class="QWidget" name="layoutWidget" >
+   <property name="geometry" >
+    <rect>
+     <x>21</x>
+     <y>250</y>
+     <width>361</width>
+     <height>41</height>
+    </rect>
+   </property>
+   <layout class="QHBoxLayout" name="horizontalLayout" >
+    <item>
+     <widget class="KPushButton" name="btnIPPBrowseRefresh" >
+      <property name="text" >
+       <string>Refresh</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <spacer name="horizontalSpacer" >
+      <property name="orientation" >
+       <enum>Qt::Horizontal</enum>
+      </property>
+      <property name="sizeHint" stdset="0" >
+       <size>
+        <width>40</width>
+        <height>20</height>
+       </size>
+      </property>
+     </spacer>
+    </item>
+    <item>
+     <widget class="KPushButton" name="btnIPPBrowseOk" >
+      <property name="text" >
+       <string>Ok</string>
+      </property>
+      <property name="shortcut" >
+       <string>Ctrl+O</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="KPushButton" name="btnIPPBrowseCancel" >
+      <property name="text" >
+       <string>Cancel</string>
+      </property>
+     </widget>
+    </item>
+   </layout>
+  </widget>
+  <widget class="QTreeWidget" name="twIPPBrowser" >
+   <property name="geometry" >
+    <rect>
+     <x>30</x>
+     <y>10</y>
+     <width>341</width>
+     <height>221</height>
+    </rect>
+   </property>
+   <property name="sizePolicy" >
+    <sizepolicy vsizetype="Expanding" hsizetype="Expanding" >
+     <horstretch>0</horstretch>
+     <verstretch>0</verstretch>
+    </sizepolicy>
+   </property>
+   <property name="sortingEnabled" >
+    <bool>true</bool>
+   </property>
+   <property name="allColumnsShowFocus" >
+    <bool>true</bool>
+   </property>
+   <property name="columnCount" >
+    <number>2</number>
+   </property>
+   <column>
+    <property name="text" >
+     <string>1</string>
+    </property>
+   </column>
+   <column>
+    <property name="text" >
+     <string>1</string>
+    </property>
+   </column>
+  </widget>
+ </widget>
+ <customwidgets>
+  <customwidget>
+   <class>KPushButton</class>
+   <extends>QPushButton</extends>
+   <header>kpushbutton.h</header>
+  </customwidget>
+ </customwidgets>
+ <resources/>
+ <connections/>
+</ui>
Index: system-config-printer-kde/new-printer.ui
===================================================================
--- system-config-printer-kde/new-printer.ui.orig
+++ system-config-printer-kde/new-printer.ui
@@ -1,65 +1,66 @@
-<ui version="4.0" >
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
  <class>form</class>
- <widget class="QDialog" name="form" >
-  <property name="geometry" >
+ <widget class="QDialog" name="form">
+  <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>707</width>
-    <height>534</height>
+    <height>583</height>
    </rect>
   </property>
-  <property name="windowTitle" >
+  <property name="windowTitle">
    <string>Dialog</string>
   </property>
-  <property name="windowIcon" >
+  <property name="windowIcon">
    <iconset>
     <normaloff>../../../../.designer/backup/printer-128.png</normaloff>../../../../.designer/backup/printer-128.png</iconset>
   </property>
-  <layout class="QGridLayout" >
-   <item row="0" column="0" colspan="5" >
-    <widget class="QStackedWidget" name="ntbkNewPrinter" >
-     <property name="currentIndex" >
+  <layout class="QGridLayout">
+   <item row="0" column="0" colspan="5">
+    <widget class="QStackedWidget" name="ntbkNewPrinter">
+     <property name="currentIndex">
       <number>1</number>
      </property>
-     <widget class="QWidget" name="page" >
-      <layout class="QGridLayout" >
-       <item row="0" column="0" >
-        <widget class="QLabel" name="label" >
-         <property name="text" >
+     <widget class="QWidget" name="page">
+      <layout class="QGridLayout">
+       <item row="0" column="0">
+        <widget class="QLabel" name="label">
+         <property name="text">
           <string>Printer Name</string>
          </property>
         </widget>
        </item>
-       <item row="1" column="0" >
-        <widget class="QLineEdit" name="entNPName" />
+       <item row="1" column="0">
+        <widget class="QLineEdit" name="entNPName"/>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_2" >
-         <property name="text" >
+       <item row="2" column="0">
+        <widget class="QLabel" name="label_2">
+         <property name="text">
           <string>Description</string>
          </property>
         </widget>
        </item>
-       <item row="3" column="0" >
-        <widget class="QLineEdit" name="entNPDescription" />
+       <item row="3" column="0">
+        <widget class="QLineEdit" name="entNPDescription"/>
        </item>
-       <item row="4" column="0" >
-        <widget class="QLabel" name="label_3" >
-         <property name="text" >
+       <item row="4" column="0">
+        <widget class="QLabel" name="label_3">
+         <property name="text">
           <string>Location</string>
          </property>
         </widget>
        </item>
-       <item row="5" column="0" >
-        <widget class="QLineEdit" name="entNPLocation" />
+       <item row="5" column="0">
+        <widget class="QLineEdit" name="entNPLocation"/>
        </item>
-       <item row="6" column="0" >
+       <item row="6" column="0">
         <spacer>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>691</width>
            <height>40</height>
@@ -69,45 +70,45 @@
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_3" >
-      <layout class="QGridLayout" >
-       <item row="0" column="0" colspan="3" >
-        <widget class="QLabel" name="label_7" >
-         <property name="text" >
+     <widget class="QWidget" name="page_3">
+      <layout class="QGridLayout">
+       <item row="0" column="0" colspan="3">
+        <widget class="QLabel" name="label_7">
+         <property name="text">
           <string>Select Connection</string>
          </property>
         </widget>
        </item>
-       <item row="1" column="0" >
-        <widget class="QListWidget" name="tvNPDevices" />
+       <item row="1" column="0">
+        <widget class="QListWidget" name="tvNPDevices"/>
        </item>
-       <item row="1" column="1" >
-        <widget class="QStackedWidget" name="ntbkNPType" >
-         <property name="currentIndex" >
+       <item row="1" column="1">
+        <widget class="QStackedWidget" name="ntbkNPType">
+         <property name="currentIndex">
           <number>7</number>
          </property>
-         <widget class="QWidget" name="page_4" >
-          <layout class="QGridLayout" >
-           <item row="0" column="0" >
-            <widget class="QLabel" name="label_8" >
-             <property name="text" >
+         <widget class="QWidget" name="page_4">
+          <layout class="QGridLayout">
+           <item row="0" column="0">
+            <widget class="QLabel" name="label_8">
+             <property name="text">
               <string>Description</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="0" >
-            <widget class="QLabel" name="lblNPDeviceDescription" >
-             <property name="text" >
+           <item row="1" column="0">
+            <widget class="QLabel" name="lblNPDeviceDescription">
+             <property name="text">
               <string>Device Description</string>
              </property>
             </widget>
            </item>
-           <item row="2" column="0" >
+           <item row="2" column="0">
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
@@ -117,24 +118,24 @@
            </item>
           </layout>
          </widget>
-         <widget class="QWidget" name="page_5" >
-          <layout class="QGridLayout" >
-           <item row="0" column="0" >
-            <widget class="QLabel" name="label_9" >
-             <property name="text" >
+         <widget class="QWidget" name="page_5">
+          <layout class="QGridLayout">
+           <item row="0" column="0">
+            <widget class="QLabel" name="label_9">
+             <property name="text">
               <string>Enter Device URI</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="0" >
-            <widget class="QLineEdit" name="entNPTDevice" />
+           <item row="1" column="0">
+            <widget class="QLineEdit" name="entNPTDevice"/>
            </item>
-           <item row="2" column="0" >
+           <item row="2" column="0">
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>330</height>
@@ -144,41 +145,41 @@
            </item>
           </layout>
          </widget>
-         <widget class="QWidget" name="page_6" >
-          <layout class="QGridLayout" >
-           <item row="0" column="0" colspan="2" >
-            <widget class="QLabel" name="label_10" >
-             <property name="text" >
+         <widget class="QWidget" name="page_6">
+          <layout class="QGridLayout">
+           <item row="0" column="0" colspan="2">
+            <widget class="QLabel" name="label_10">
+             <property name="text">
               <string>Location of the Network Printer</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="0" >
-            <widget class="QLabel" name="label_11" >
-             <property name="text" >
+           <item row="1" column="0">
+            <widget class="QLabel" name="label_11">
+             <property name="text">
               <string>Host:</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="1" >
-            <widget class="QLineEdit" name="entNPTDirectJetHostname" />
+           <item row="1" column="1">
+            <widget class="QLineEdit" name="entNPTDirectJetHostname"/>
            </item>
-           <item row="2" column="0" >
-            <widget class="QLabel" name="label_12" >
-             <property name="text" >
+           <item row="2" column="0">
+            <widget class="QLabel" name="label_12">
+             <property name="text">
               <string>Port number:</string>
              </property>
             </widget>
            </item>
-           <item row="2" column="1" >
-            <widget class="QLineEdit" name="entNPTDirectJetPort" />
+           <item row="2" column="1">
+            <widget class="QLineEdit" name="entNPTDirectJetPort"/>
            </item>
-           <item row="3" column="0" colspan="2" >
+           <item row="3" column="0" colspan="2">
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>328</width>
                <height>299</height>
@@ -188,72 +189,72 @@
            </item>
           </layout>
          </widget>
-         <widget class="QWidget" name="page_7" >
-          <layout class="QGridLayout" name="gridLayout" >
-           <item row="0" column="0" colspan="4" >
-            <widget class="QLabel" name="label_13" >
-             <property name="text" >
+         <widget class="QWidget" name="page_7">
+          <layout class="QGridLayout" name="gridLayout">
+           <item row="0" column="0" colspan="4">
+            <widget class="QLabel" name="label_13">
+             <property name="text">
               <string>IPP Printer</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="0" >
-            <widget class="QLabel" name="label_14" >
-             <property name="text" >
+           <item row="1" column="0">
+            <widget class="QLabel" name="label_14">
+             <property name="text">
               <string>Host:</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="1" colspan="2" >
-            <widget class="QLineEdit" name="entNPTIPPHostname" />
+           <item row="1" column="1" colspan="2">
+            <widget class="QLineEdit" name="entNPTIPPHostname"/>
            </item>
-           <item row="1" column="3" >
-            <widget class="QPushButton" name="btnIPPFindQueue" >
-             <property name="enabled" >
+           <item row="1" column="3">
+            <widget class="QPushButton" name="btnIPPFindQueue">
+             <property name="enabled">
               <bool>true</bool>
              </property>
-             <property name="text" >
+             <property name="text">
               <string>Find Queue...</string>
              </property>
             </widget>
            </item>
-           <item row="2" column="0" >
-            <widget class="QLabel" name="label_15" >
-             <property name="text" >
+           <item row="2" column="0">
+            <widget class="QLabel" name="label_15">
+             <property name="text">
               <string>Queue:</string>
              </property>
             </widget>
            </item>
-           <item row="2" column="1" colspan="3" >
-            <widget class="QLineEdit" name="entNPTIPPQueuename" />
+           <item row="2" column="1" colspan="3">
+            <widget class="QLineEdit" name="entNPTIPPQueuename"/>
            </item>
-           <item row="3" column="0" >
-            <widget class="QLabel" name="label_34" >
-             <property name="text" >
+           <item row="3" column="0">
+            <widget class="QLabel" name="label_34">
+             <property name="text">
               <string>URI:</string>
              </property>
             </widget>
            </item>
-           <item row="3" column="1" colspan="2" >
-            <widget class="QLabel" name="lblIPPURI" >
-             <property name="text" >
+           <item row="3" column="1" colspan="2">
+            <widget class="QLabel" name="lblIPPURI">
+             <property name="text">
               <string>...</string>
              </property>
             </widget>
            </item>
-           <item row="4" column="0" colspan="2" >
-            <widget class="QPushButton" name="btnIPPVerify" >
-             <property name="text" >
+           <item row="4" column="0" colspan="2">
+            <widget class="QPushButton" name="btnIPPVerify">
+             <property name="text">
               <string>Verify...</string>
              </property>
             </widget>
            </item>
-           <item row="4" column="2" colspan="2" >
-            <spacer name="horizontalSpacer" >
-             <property name="orientation" >
+           <item row="4" column="2" colspan="2">
+            <spacer name="horizontalSpacer">
+             <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>298</width>
                <height>20</height>
@@ -261,12 +262,12 @@
              </property>
             </spacer>
            </item>
-           <item row="5" column="0" colspan="4" >
-            <spacer name="verticalSpacer" >
-             <property name="orientation" >
+           <item row="5" column="0" colspan="4">
+            <spacer name="verticalSpacer">
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>418</width>
                <height>297</height>
@@ -276,61 +277,61 @@
            </item>
           </layout>
          </widget>
-         <widget class="QWidget" name="page_8" >
-          <layout class="QGridLayout" name="gridLayout_3" >
-           <item row="0" column="0" colspan="3" >
-            <widget class="QLabel" name="label_17" >
-             <property name="text" >
+         <widget class="QWidget" name="page_8">
+          <layout class="QGridLayout" name="gridLayout_3">
+           <item row="0" column="0" colspan="3">
+            <widget class="QLabel" name="label_17">
+             <property name="text">
               <string>Location of the LPD network printer</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="0" >
-            <widget class="QLabel" name="label_18" >
-             <property name="text" >
+           <item row="1" column="0">
+            <widget class="QLabel" name="label_18">
+             <property name="text">
               <string>Host:</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="1" >
-            <widget class="QComboBox" name="cmbentNPTLpdHost" >
-             <property name="editable" >
+           <item row="1" column="1">
+            <widget class="QComboBox" name="cmbentNPTLpdHost">
+             <property name="editable">
               <bool>true</bool>
              </property>
              <item>
-              <property name="text" >
-               <string comment="KDE::DoNotExtract">localhost</string>
+              <property name="text">
+               <string>localhost</string>
               </property>
              </item>
             </widget>
            </item>
-           <item row="1" column="2" >
-            <widget class="QPushButton" name="btnNPTLpdProbe" >
-             <property name="text" >
+           <item row="1" column="2">
+            <widget class="QPushButton" name="btnNPTLpdProbe">
+             <property name="text">
               <string comment="Try to discover network printers">Probe</string>
              </property>
             </widget>
            </item>
-           <item row="2" column="0" >
-            <widget class="QLabel" name="label_19" >
-             <property name="text" >
+           <item row="2" column="0">
+            <widget class="QLabel" name="label_19">
+             <property name="text">
               <string>Queue:</string>
              </property>
             </widget>
            </item>
-           <item row="2" column="1" colspan="2" >
-            <widget class="QComboBox" name="cmbentNPTLpdQueue" >
-             <property name="editable" >
+           <item row="2" column="1" colspan="2">
+            <widget class="QComboBox" name="cmbentNPTLpdQueue">
+             <property name="editable">
               <bool>true</bool>
              </property>
             </widget>
            </item>
-           <item row="3" column="1" colspan="2" >
+           <item row="3" column="1" colspan="2">
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>288</width>
                <height>295</height>
@@ -340,9 +341,9 @@
            </item>
           </layout>
          </widget>
-         <widget class="QWidget" name="page_9" >
-          <widget class="QLabel" name="label_20" >
-           <property name="geometry" >
+         <widget class="QWidget" name="page_9">
+          <widget class="QLabel" name="label_20">
+           <property name="geometry">
             <rect>
              <x>30</x>
              <y>80</y>
@@ -350,14 +351,14 @@
              <height>20</height>
             </rect>
            </property>
-           <property name="text" >
+           <property name="text">
             <string comment="KDE::DoNotExtract">TODO, SCSI</string>
            </property>
           </widget>
          </widget>
-         <widget class="QWidget" name="page_10" >
-          <widget class="QLabel" name="label_21" >
-           <property name="geometry" >
+         <widget class="QWidget" name="page_10">
+          <widget class="QLabel" name="label_21">
+           <property name="geometry">
             <rect>
              <x>60</x>
              <y>90</y>
@@ -365,144 +366,213 @@
              <height>20</height>
             </rect>
            </property>
-           <property name="text" >
+           <property name="text">
             <string comment="KDE::DoNotExtract">TODO serial</string>
            </property>
           </widget>
          </widget>
-         <widget class="QWidget" name="page_11" >
-          <layout class="QGridLayout" name="gridLayout_4" >
-           <item row="0" column="0" colspan="4" >
-            <widget class="QLabel" name="label_22" >
-             <property name="text" >
+         <widget class="QWidget" name="page_11">
+          <layout class="QGridLayout" name="gridLayout_2">
+           <item row="0" column="0" colspan="3">
+            <widget class="QLabel" name="label_22">
+             <property name="text">
               <string>SMB Printer</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="0" >
-            <widget class="QLabel" name="label_23" >
-             <property name="text" >
+           <item row="1" column="0">
+            <widget class="QLabel" name="lblSMBUri">
+             <property name="text">
               <string comment="KDE::DoNotExtract">smb://</string>
              </property>
             </widget>
            </item>
-           <item row="1" column="1" colspan="2" >
-            <widget class="QLineEdit" name="entSMBURI" />
+           <item row="1" column="1">
+            <widget class="QLineEdit" name="entSMBURI"/>
            </item>
-           <item row="1" column="3" >
-            <widget class="QPushButton" name="btnSMBBrowse" >
-             <property name="text" >
+           <item row="1" column="2">
+            <widget class="QPushButton" name="btnSMBBrowse">
+             <property name="text">
               <string>Browse</string>
              </property>
             </widget>
            </item>
-           <item row="2" column="0" colspan="4" >
-            <widget class="QLabel" name="lblSMBHint" >
-             <property name="text" >
-              <string>&lt;i>smb://[workgroup/]server[:port]/printer&lt;/i></string>
+           <item row="2" column="0" colspan="3">
+            <widget class="QLabel" name="lblSMBHint">
+             <property name="text">
+              <string>&lt;i&gt;smb://[workgroup/]server[:port]/printer&lt;/i&gt;</string>
              </property>
             </widget>
            </item>
-           <item row="3" column="0" colspan="4" >
-            <widget class="QLabel" name="label_16" >
-             <property name="text" >
+           <item row="3" column="0" colspan="3">
+            <widget class="QLabel" name="label_16">
+             <property name="text">
               <string>Authentication</string>
              </property>
             </widget>
            </item>
-           <item row="4" column="0" colspan="4" >
-            <widget class="QRadioButton" name="rbtnSMBAuthPrompt" >
-             <property name="text" >
+           <item row="4" column="0" colspan="3">
+            <widget class="QRadioButton" name="rbtnSMBAuthPrompt">
+             <property name="text">
               <string>Prompt user if authentication is required</string>
              </property>
             </widget>
            </item>
-           <item row="5" column="0" colspan="4" >
-            <widget class="QRadioButton" name="rbtnSMBAuthSet" >
-             <property name="text" >
+           <item row="5" column="0" colspan="3">
+            <widget class="QRadioButton" name="rbtnSMBAuthSet">
+             <property name="text">
               <string>Set authentication details now</string>
              </property>
             </widget>
            </item>
-           <item row="6" column="0" colspan="2" >
-            <spacer name="horizontalSpacer_2" >
-             <property name="orientation" >
-              <enum>Qt::Horizontal</enum>
-             </property>
-             <property name="sizeHint" stdset="0" >
-              <size>
-               <width>169</width>
-               <height>68</height>
-              </size>
-             </property>
-            </spacer>
-           </item>
-           <item row="6" column="2" colspan="2" >
-            <widget class="QWidget" native="1" name="tblSMBAuth" >
-             <layout class="QGridLayout" name="gridLayout_2" >
-              <item row="1" column="1" >
-               <widget class="QLineEdit" name="entSMBPassword" >
-                <property name="echoMode" >
-                 <enum>QLineEdit::Password</enum>
-                </property>
-               </widget>
-              </item>
-              <item row="1" column="0" >
-               <widget class="QLabel" name="label_26" >
-                <property name="text" >
-                 <string>Password:</string>
-                </property>
-               </widget>
-              </item>
-              <item row="0" column="1" >
-               <widget class="QLineEdit" name="entSMBUsername" />
-              </item>
-              <item row="0" column="0" >
-               <widget class="QLabel" name="label_25" >
-                <property name="text" >
-                 <string>Username:</string>
-                </property>
-               </widget>
-              </item>
-             </layout>
-             <zorder>entSMBPassword</zorder>
-             <zorder>label_26</zorder>
-             <zorder>entSMBUsername</zorder>
-             <zorder>label_25</zorder>
-            </widget>
-           </item>
-           <item row="7" column="0" colspan="2" >
-            <widget class="QPushButton" name="btnSMBVerify" >
-             <property name="text" >
-              <string>Verify</string>
-             </property>
-            </widget>
-           </item>
-           <item row="7" column="2" colspan="2" >
-            <spacer>
-             <property name="orientation" >
-              <enum>Qt::Horizontal</enum>
-             </property>
-             <property name="sizeHint" stdset="0" >
-              <size>
-               <width>188</width>
-               <height>28</height>
-              </size>
-             </property>
-            </spacer>
-           </item>
-           <item row="8" column="0" colspan="4" >
-            <spacer>
-             <property name="orientation" >
-              <enum>Qt::Vertical</enum>
-             </property>
-             <property name="sizeHint" stdset="0" >
-              <size>
-               <width>404</width>
-               <height>216</height>
-              </size>
-             </property>
-            </spacer>
+           <item row="6" column="0" colspan="3">
+            <layout class="QVBoxLayout" name="verticalLayout">
+             <item>
+              <layout class="QHBoxLayout" name="horizontalLayout_2">
+               <item>
+                <spacer name="horizontalSpacer_2">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeType">
+                  <enum>QSizePolicy::Fixed</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>128</width>
+                   <height>62</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+               <item>
+                <widget class="QWidget" name="tblSMBAuth" native="true">
+                 <widget class="QLineEdit" name="entSMBPassword">
+                  <property name="geometry">
+                   <rect>
+                    <x>76</x>
+                    <y>35</y>
+                    <width>115</width>
+                    <height>27</height>
+                   </rect>
+                  </property>
+                  <property name="echoMode">
+                   <enum>QLineEdit::Password</enum>
+                  </property>
+                 </widget>
+                 <widget class="QLabel" name="label_26">
+                  <property name="geometry">
+                   <rect>
+                    <x>4</x>
+                    <y>35</y>
+                    <width>68</width>
+                    <height>27</height>
+                   </rect>
+                  </property>
+                  <property name="text">
+                   <string>Password:</string>
+                  </property>
+                 </widget>
+                 <widget class="QLineEdit" name="entSMBUsername">
+                  <property name="geometry">
+                   <rect>
+                    <x>76</x>
+                    <y>4</y>
+                    <width>115</width>
+                    <height>27</height>
+                   </rect>
+                  </property>
+                 </widget>
+                 <widget class="QLabel" name="label_25">
+                  <property name="geometry">
+                   <rect>
+                    <x>4</x>
+                    <y>4</y>
+                    <width>68</width>
+                    <height>27</height>
+                   </rect>
+                  </property>
+                  <property name="text">
+                   <string>Username:</string>
+                  </property>
+                 </widget>
+                </widget>
+               </item>
+               <item>
+                <spacer name="horizontalSpacer_3">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeType">
+                  <enum>QSizePolicy::Fixed</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>68</width>
+                   <height>17</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+              </layout>
+             </item>
+             <item>
+              <layout class="QHBoxLayout" name="horizontalLayout">
+               <item>
+                <spacer>
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeType">
+                  <enum>QSizePolicy::Minimum</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>198</width>
+                   <height>22</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+               <item>
+                <widget class="QPushButton" name="btnSMBVerify">
+                 <property name="text">
+                  <string>Verify</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <spacer name="horizontalSpacer_4">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeType">
+                  <enum>QSizePolicy::Fixed</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>78</width>
+                   <height>20</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+              </layout>
+             </item>
+             <item>
+              <spacer>
+               <property name="orientation">
+                <enum>Qt::Vertical</enum>
+               </property>
+               <property name="sizeHint" stdset="0">
+                <size>
+                 <width>415</width>
+                 <height>208</height>
+                </size>
+               </property>
+              </spacer>
+             </item>
+            </layout>
            </item>
           </layout>
          </widget>
@@ -510,118 +580,118 @@
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_12" >
-      <layout class="QGridLayout" >
-       <item row="0" column="0" colspan="2" >
-        <widget class="QRadioButton" name="rbtnNPFoomatic" >
-         <property name="text" >
+     <widget class="QWidget" name="page_12">
+      <layout class="QGridLayout">
+       <item row="0" column="0" colspan="2">
+        <widget class="QRadioButton" name="rbtnNPFoomatic">
+         <property name="text">
           <string>Select printer from database</string>
          </property>
         </widget>
        </item>
-       <item row="1" column="0" colspan="2" >
-        <widget class="QLabel" name="label_27" >
-         <property name="text" >
+       <item row="1" column="0" colspan="2">
+        <widget class="QLabel" name="label_27">
+         <property name="text">
           <string>The foomatic printer database contains various manufacturer provided PostScript Printer Description (PPD) files and also can generate PPD files for a large number of (non PostScript) printers. But in general manufacturer provided PPD files provide better access to the specific features of the printer.</string>
          </property>
-         <property name="wordWrap" >
+         <property name="wordWrap">
           <bool>true</bool>
          </property>
         </widget>
        </item>
-       <item row="2" column="0" colspan="2" >
-        <widget class="QListWidget" name="tvNPMakes" />
+       <item row="2" column="0" colspan="2">
+        <widget class="QListWidget" name="tvNPMakes"/>
        </item>
-       <item row="3" column="0" colspan="2" >
-        <widget class="QRadioButton" name="rbtnNPPPD" >
-         <property name="text" >
+       <item row="3" column="0" colspan="2">
+        <widget class="QRadioButton" name="rbtnNPPPD">
+         <property name="text">
           <string>Provide PPD file</string>
          </property>
         </widget>
        </item>
-       <item row="4" column="0" colspan="2" >
-        <widget class="QLabel" name="label_28" >
-         <property name="text" >
-          <string>&lt;qt>PostScript Printer Description (PPD) files can often be found on the driver disk that comes with the printer. For PostScript printers they are often part of the Windows&lt;sup>®&lt;/sup> driver.&lt;/qt></string>
+       <item row="4" column="0" colspan="2">
+        <widget class="QLabel" name="label_28">
+         <property name="text">
+          <string>&lt;qt&gt;PostScript Printer Description (PPD) files can often be found on the driver disk that comes with the printer. For PostScript printers they are often part of the Windows&lt;sup&gt;®&lt;/sup&gt; driver.&lt;/qt&gt;</string>
          </property>
-         <property name="wordWrap" >
+         <property name="wordWrap">
           <bool>true</bool>
          </property>
         </widget>
        </item>
-       <item row="5" column="0" >
-        <widget class="QLineEdit" name="filechooserPPD" />
+       <item row="5" column="0">
+        <widget class="QLineEdit" name="filechooserPPD"/>
        </item>
-       <item row="5" column="1" >
-        <widget class="QPushButton" name="filechooserPPDButton" >
-         <property name="text" >
+       <item row="5" column="1">
+        <widget class="QPushButton" name="filechooserPPDButton">
+         <property name="text">
           <string>Browse</string>
          </property>
         </widget>
        </item>
-       <item row="6" column="0" colspan="2" >
-        <widget class="QWidget" native="1" name="downloadableDriverSearchFrame" >
-         <layout class="QGridLayout" >
-          <item row="0" column="0" colspan="3" >
-           <widget class="QRadioButton" name="rbtnNPDownloadableDriverSearch" >
-            <property name="text" >
+       <item row="6" column="0" colspan="2">
+        <widget class="QWidget" name="downloadableDriverSearchFrame" native="true">
+         <layout class="QGridLayout">
+          <item row="0" column="0" colspan="3">
+           <widget class="QRadioButton" name="rbtnNPDownloadableDriverSearch">
+            <property name="text">
              <string>Search for a printer driver to download</string>
             </property>
            </widget>
           </item>
-          <item row="1" column="0" colspan="3" >
-           <widget class="QLabel" name="label_29" >
-            <property name="text" >
+          <item row="1" column="0" colspan="3">
+           <widget class="QLabel" name="label_29">
+            <property name="text">
              <string>Enter some search terms for the model of your printer.</string>
             </property>
            </widget>
           </item>
-          <item row="2" column="0" >
-           <widget class="QLabel" name="label_30" >
-            <property name="text" >
+          <item row="2" column="0">
+           <widget class="QLabel" name="label_30">
+            <property name="text">
              <string>Search terms:</string>
             </property>
            </widget>
           </item>
-          <item row="2" column="1" >
-           <widget class="QLineEdit" name="entNPDownloadableDriverSearch" />
+          <item row="2" column="1">
+           <widget class="QLineEdit" name="entNPDownloadableDriverSearch"/>
           </item>
-          <item row="2" column="2" >
-           <widget class="QPushButton" name="btnNPDownloadableDriverSearch" >
-            <property name="text" >
+          <item row="2" column="2">
+           <widget class="QPushButton" name="btnNPDownloadableDriverSearch">
+            <property name="text">
              <string>Search</string>
             </property>
            </widget>
           </item>
-          <item row="3" column="0" >
-           <widget class="QLabel" name="label_31" >
-            <property name="text" >
+          <item row="3" column="0">
+           <widget class="QLabel" name="label_31">
+            <property name="text">
              <string>Printer model:</string>
             </property>
            </widget>
           </item>
-          <item row="3" column="1" colspan="2" >
-           <widget class="QComboBox" name="cmbNPDownloadableDriverFoundPrinters" />
+          <item row="3" column="1" colspan="2">
+           <widget class="QComboBox" name="cmbNPDownloadableDriverFoundPrinters"/>
           </item>
          </layout>
         </widget>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_13" >
-      <layout class="QGridLayout" >
-       <item rowspan="2" row="1" column="0" >
-        <widget class="QListWidget" name="tvNPModels" />
+     <widget class="QWidget" name="page_13">
+      <layout class="QGridLayout">
+       <item row="1" column="0" rowspan="2">
+        <widget class="QListWidget" name="tvNPModels"/>
        </item>
-       <item row="1" column="1" colspan="2" >
-        <widget class="QListWidget" name="tvNPDrivers" />
+       <item row="1" column="1" colspan="2">
+        <widget class="QListWidget" name="tvNPDrivers"/>
        </item>
-       <item row="2" column="1" >
+       <item row="2" column="1">
         <spacer>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>296</width>
            <height>28</height>
@@ -629,55 +699,55 @@
          </property>
         </spacer>
        </item>
-       <item row="2" column="2" >
-        <widget class="QPushButton" name="btnNPPDComments" >
-         <property name="text" >
+       <item row="2" column="2">
+        <widget class="QPushButton" name="btnNPPDComments">
+         <property name="text">
           <string>Comments</string>
          </property>
         </widget>
        </item>
-       <item row="0" column="0" >
-        <widget class="QLabel" name="label_32" >
-         <property name="text" >
+       <item row="0" column="0">
+        <widget class="QLabel" name="label_32">
+         <property name="text">
           <string>Models:</string>
          </property>
         </widget>
        </item>
-       <item row="0" column="1" >
-        <widget class="QLabel" name="label_33" >
-         <property name="text" >
+       <item row="0" column="1">
+        <widget class="QLabel" name="label_33">
+         <property name="text">
           <string>Driver:</string>
          </property>
         </widget>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_2" >
-      <layout class="QGridLayout" >
-       <item row="0" column="0" >
-        <widget class="QLabel" name="label_4" >
-         <property name="text" >
+     <widget class="QWidget" name="page_2">
+      <layout class="QGridLayout">
+       <item row="0" column="0">
+        <widget class="QLabel" name="label_4">
+         <property name="text">
           <string>Printers to be members of this class</string>
          </property>
         </widget>
        </item>
-       <item row="1" column="0" >
-        <layout class="QGridLayout" >
-         <item row="0" column="0" >
-          <widget class="QLabel" name="label_6" >
-           <property name="text" >
+       <item row="1" column="0">
+        <layout class="QGridLayout">
+         <item row="0" column="0">
+          <widget class="QLabel" name="label_6">
+           <property name="text">
             <string>Members of this class</string>
            </property>
           </widget>
          </item>
-         <item rowspan="2" row="0" column="1" >
-          <layout class="QVBoxLayout" >
+         <item row="0" column="1" rowspan="2">
+          <layout class="QVBoxLayout">
            <item>
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
@@ -686,25 +756,25 @@
             </spacer>
            </item>
            <item>
-            <widget class="QPushButton" name="btnNCAddMember" >
-             <property name="text" >
-              <string>&lt;</string>
+            <widget class="QPushButton" name="btnNCAddMember">
+             <property name="text">
+              <string/>
              </property>
             </widget>
            </item>
            <item>
-            <widget class="QPushButton" name="btnNCDelMember" >
-             <property name="text" >
-              <string>></string>
+            <widget class="QPushButton" name="btnNCDelMember">
+             <property name="text">
+              <string/>
              </property>
             </widget>
            </item>
            <item>
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>291</height>
@@ -714,72 +784,72 @@
            </item>
           </layout>
          </item>
-         <item row="0" column="2" >
-          <widget class="QLabel" name="label_5" >
-           <property name="text" >
+         <item row="0" column="2">
+          <widget class="QLabel" name="label_5">
+           <property name="text">
             <string>Others</string>
            </property>
           </widget>
          </item>
-         <item row="1" column="0" >
-          <widget class="QListWidget" name="tvNCMembers" />
+         <item row="1" column="0">
+          <widget class="QListWidget" name="tvNCMembers"/>
          </item>
-         <item row="1" column="2" >
-          <widget class="QListWidget" name="tvNCNotMembers" />
+         <item row="1" column="2">
+          <widget class="QListWidget" name="tvNCNotMembers"/>
          </item>
         </layout>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_14" >
-      <layout class="QGridLayout" name="gridLayout_5" >
-       <item row="0" column="0" >
-        <widget class="QLabel" name="label_24" >
-         <property name="text" >
+     <widget class="QWidget" name="page_14">
+      <layout class="QGridLayout" name="gridLayout_5">
+       <item row="0" column="0">
+        <widget class="QLabel" name="label_24">
+         <property name="text">
           <string>Try to transfer the current settings</string>
          </property>
         </widget>
        </item>
-       <item row="1" column="0" >
-        <widget class="QRadioButton" name="rbtnChangePPDasIs" >
-         <property name="text" >
+       <item row="1" column="0">
+        <widget class="QRadioButton" name="rbtnChangePPDasIs">
+         <property name="text">
           <string>Use the new PPD (Postscript Printer Description) as is.</string>
          </property>
         </widget>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_37" >
-         <property name="text" >
-          <string>This way all current option settings will be lost. The default settings of the new PPD will be used.</string>
+       <item row="2" column="0">
+        <widget class="QLabel" name="label_37">
+         <property name="text">
+          <string>This way all current option settings will be lost. The default settings of the new PPD will be used. </string>
          </property>
-         <property name="wordWrap" >
+         <property name="wordWrap">
           <bool>true</bool>
          </property>
         </widget>
        </item>
-       <item row="3" column="0" >
-        <widget class="QRadioButton" name="rbtnChangePPDKeepSettings" >
-         <property name="text" >
-          <string>Try to copy the option settings over from the old PPD.</string>
+       <item row="3" column="0">
+        <widget class="QRadioButton" name="rbtnChangePPDKeepSettings">
+         <property name="text">
+          <string>Try to copy the option settings over from the old PPD. </string>
          </property>
         </widget>
        </item>
-       <item row="4" column="0" >
-        <widget class="QLabel" name="label_38" >
-         <property name="text" >
+       <item row="4" column="0">
+        <widget class="QLabel" name="label_38">
+         <property name="text">
           <string>This is done by assuming that options with the same name do have the same meaning. Settings of options that are not present in the new PPD will be lost and options only present in the new PPD will be set to default.</string>
          </property>
-         <property name="wordWrap" >
+         <property name="wordWrap">
           <bool>true</bool>
          </property>
         </widget>
        </item>
-       <item row="6" column="0" >
-        <spacer name="verticalSpacer_2" >
-         <property name="orientation" >
+       <item row="6" column="0">
+        <spacer name="verticalSpacer_2">
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>638</width>
            <height>317</height>
@@ -787,14 +857,14 @@
          </property>
         </spacer>
        </item>
-       <item row="5" column="0" >
-        <layout class="QFormLayout" name="formLayout" />
+       <item row="5" column="0">
+        <layout class="QFormLayout" name="formLayout"/>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_15" >
-      <widget class="QLabel" name="label_35" >
-       <property name="geometry" >
+     <widget class="QWidget" name="page_15">
+      <widget class="QLabel" name="label_35">
+       <property name="geometry">
         <rect>
          <x>60</x>
          <y>50</y>
@@ -802,14 +872,14 @@
          <height>20</height>
         </rect>
        </property>
-       <property name="text" >
+       <property name="text">
         <string comment="KDE::DoNotExtract">TODO: Installed Options page</string>
        </property>
       </widget>
      </widget>
-     <widget class="QWidget" name="page_16" >
-      <widget class="QLabel" name="label_36" >
-       <property name="geometry" >
+     <widget class="QWidget" name="page_16">
+      <widget class="QLabel" name="label_36">
+       <property name="geometry">
         <rect>
          <x>30</x>
          <y>60</y>
@@ -817,19 +887,19 @@
          <height>20</height>
         </rect>
        </property>
-       <property name="text" >
+       <property name="text">
         <string comment="KDE::DoNotExtract">TODO: Downloadable Driver page</string>
        </property>
       </widget>
      </widget>
     </widget>
    </item>
-   <item row="1" column="0" >
+   <item row="1" column="0">
     <spacer>
-     <property name="orientation" >
+     <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
-     <property name="sizeHint" stdset="0" >
+     <property name="sizeHint" stdset="0">
       <size>
        <width>121</width>
        <height>20</height>
@@ -837,30 +907,30 @@
      </property>
     </spacer>
    </item>
-   <item row="1" column="1" >
-    <widget class="QPushButton" name="btnNPBack" >
-     <property name="text" >
-      <string>&lt; Back</string>
+   <item row="1" column="1">
+    <widget class="QPushButton" name="btnNPBack">
+     <property name="text">
+      <string>Back</string>
      </property>
     </widget>
    </item>
-   <item row="1" column="2" >
-    <widget class="QPushButton" name="btnNPForward" >
-     <property name="text" >
-      <string>Forward ></string>
+   <item row="1" column="2">
+    <widget class="QPushButton" name="btnNPForward">
+     <property name="text">
+      <string>Forward</string>
      </property>
     </widget>
    </item>
-   <item row="1" column="3" >
-    <widget class="QPushButton" name="btnNPApply" >
-     <property name="text" >
+   <item row="1" column="3">
+    <widget class="QPushButton" name="btnNPApply">
+     <property name="text">
       <string>OK</string>
      </property>
     </widget>
    </item>
-   <item row="1" column="4" >
-    <widget class="QPushButton" name="btnNPCancel" >
-     <property name="text" >
+   <item row="1" column="4">
+    <widget class="QPushButton" name="btnNPCancel">
+     <property name="text">
       <string>Cancel</string>
      </property>
     </widget>
Index: system-config-printer-kde/options.py
===================================================================
--- /dev/null
+++ system-config-printer-kde/options.py
@@ -0,0 +1,398 @@
+# -*- coding: utf-8 -*-
+## system-config-printer
+
+#############################################################################
+##
+## Copyright 2007-2009 Canonical Ltd
+## Copyright 2008-2009 Richard Birnie <arbyuk@googlemail.com>
+## Author: Jonathan Riddell <jriddell@ubuntu.com>
+##         Richard Birnie <arbyuk@googlemail.com>
+##
+## Includes code from System Config Printer:
+## Copyright (C) 2006, 2007, 2008 Red Hat, Inc.
+## Copyright (C) 2006, 2007 Florian Festi <ffesti@redhat.com>
+## Copyright (C) 2006, 2007, 2008 Tim Waugh <twaugh@redhat.com>
+##
+## This program is free software; you can redistribute it and/or
+## modify it under the terms of the GNU General Public License as
+## published by the Free Software Foundation; either version 2 of
+## the License, or (at your option) any later version.
+##
+## This program is distributed in the hope that it will be useful,
+## but WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with this program.  If not, see <http://www.gnu.org/licenses/>.
+##
+#############################################################################
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+"""
+These classes are used in the Job Options tab of the printer config dialogue
+"""
+
+def OptionWidget(name, v, s, on_change):
+    if isinstance(v, list):
+        # XXX
+        if isinstance(s, list):
+            for vv in v + s:
+                if not isinstance(vv, str): raise ValueError
+            return OptionSelectMany(name, v, s, on_change)
+        print v, s
+        raise NotImplemented
+    else:
+        if (isinstance(s, int) or
+            isinstance(s, float) or
+            (isinstance(s, tuple) and
+             len(s) == 2 and
+             ((isinstance(s[0], int) and isinstance(s[1], int)) or
+              (isinstance(s[0], float) and isinstance(s[1], float))))):
+            try:
+                if (isinstance(s, int) or
+                    isinstance(s, tuple) and isinstance(s[0], int)):
+                    v = int(v)
+                else:
+                    v = float(v)
+            except ValueError:
+                return OptionText(name, v, "", on_change)
+            return OptionNumeric(name, v, s, on_change)
+        elif isinstance(s, list):
+            for sv in s:
+                if not isinstance(sv, int):
+                    return OptionSelectOne(name, v, s, on_change)
+            try:
+                v = int(v)
+            except ValueError:
+                return OptionSelectOne(name, v, s, on_change)
+            return OptionSelectOneNumber(name, v, s, on_change)
+        elif isinstance(s, str):
+            return OptionText(name, v, s, on_change)
+        else:
+            raise ValueError
+
+# ---------------------------------------------------------------------------
+
+class OptionInterface:
+    def get_current_value(self):
+        raise NotImplemented
+
+    def is_changed(self):
+        raise NotImplemented
+
+class OptionAlwaysShown(OptionInterface):
+    # States
+    STATE_UNCHANGED=0
+    STATE_RESET=1
+    STATE_ADJUSTED=2
+
+    def __init__(self, name, ipp_type, system_default,
+                 widget, button, combobox_map = None, use_supported = False):
+        self.name = name
+        self.widget = widget
+        self.button = button
+        if ipp_type == bool:
+            def bool_type (x):
+                if type (x) == str:
+                    if x.lower () in ("false", "no", "off"):
+                        return False
+                    # Even the empty string is true.
+                    return True
+                return bool (x)
+            ipp_type = bool_type
+        self.ipp_type = ipp_type
+        self.set_default (system_default)
+        self.combobox_map = combobox_map
+        if combobox_map != None and ipp_type == int:
+            i = 0
+            dict = {}
+            while i < self.widget.count():
+                dict[combobox_map[i]] = self.widget.itemText(i)
+                i += 1
+            self.combobox_dict = dict
+        self.use_supported = use_supported
+        self.reinit (None)
+
+    def set_default(self, system_default):
+        # For the media option, the system default depends on the printer's
+        # PageSize setting.  This method allows the main module to tell us
+        # what that is.
+        self.system_default = self.ipp_type (system_default)
+
+    def reinit(self, original_value, supported=None):
+        """Set the original value of the option and the supported choices.
+        The special value None for original_value resets the option to the
+        system default."""
+        if (supported != None and
+            self.use_supported):
+            if (type(self.widget) == QComboBox and
+                self.ipp_type == str):
+                self.widget.clear()
+                for each in supported:
+                    self.widget.addItem(each)
+            elif (type(self.widget) == QComboBox and
+                  self.ipp_type == int and
+                  self.combobox_map != None):
+                self.widget.clear()
+                for each in supported:
+                    self.widget.addItem(self.combobox_dict[each])
+        if original_value != None:
+            self.original_value = self.ipp_type (original_value)
+            self.set_widget_value (self.original_value)
+            if original_value != self.get_widget_value():
+                self.button.setEnabled(True)
+        else:
+            self.original_value = None
+            self.set_widget_value (self.system_default)
+            self.button.setEnabled(False)
+        self.state = self.STATE_UNCHANGED
+
+    def set_widget_value(self, ipp_value):
+        t = type(self.widget)
+        if t == QSpinBox:
+            return self.widget.setValue(ipp_value)
+        elif t == QComboBox:
+            if self.ipp_type == str and self.combobox_map == None:
+                index = self.widget.findText(ipp_value)
+                if index != -1:
+                    self.widget.setCurrentIndex(index)
+            else:
+                # It's an int.
+                if self.combobox_map:
+                    index = self.combobox_map.index (ipp_value)
+                else:
+                    index = ipp_value
+                return self.widget.setCurrentIndex(index)
+        elif t == QCheckBox:
+            return self.widget.setChecked(ipp_value)
+        else:
+            raise NotImplemented
+
+    def get_widget_value(self):
+        t = type(self.widget)
+        if t == QSpinBox:
+            # Ideally we would use self.widget.get_value() here, but
+            # it doesn't work if the value has been typed in and then
+            # the Apply button immediately clicked.  To handle this,
+            # we use self.widget.get_text() and fall back to
+            # get_value() if the result cannot be interpreted as the
+            # type we expect.
+            try:
+                return self.ipp_type (self.widget.value ())
+            except ValueError:
+                # Can't convert result of get_text() to ipp_type.
+                return self.ipp_type (self.widget.value ())
+        elif t == QComboBox:
+            if self.combobox_map:
+                return self.combobox_map[self.widget.currentIndex()]
+            if self.ipp_type == str:
+                return self.widget.currentText()
+            return self.ipp_type (unicode(self.widget.currentText()))
+        elif t == QCheckBox:
+            return self.ipp_type (self.widget.isChecked())
+
+        raise NotImplemented
+
+    def get_current_value(self):
+        return self.get_widget_value ()
+
+    def is_changed(self):
+        if self.original_value != None:
+            # There was a value set previously.
+            if self.state == self.STATE_RESET:
+                # It's been removed.
+                return True
+            if self.state == self.STATE_ADJUSTED:
+                if self.get_current_value () != self.original_value:
+                    return True
+                return False
+
+            # The value is the same as before, and not reset.
+            return False
+
+        # There was no original value set.
+        if self.state == self.STATE_ADJUSTED:
+            # It's been adjusted.
+            return True
+
+        # It's been left alone, or possible adjusted and then reset.
+        return False
+
+    def reset(self):
+        self.set_widget_value (self.system_default)
+        self.state = self.STATE_RESET
+        self.button.setEnabled(False)
+
+    def changed(self):
+        self.state = self.STATE_ADJUSTED
+        self.button.setEnabled(True)
+
+class OptionAlwaysShownSpecial(OptionAlwaysShown):
+    def __init__(self, name, ipp_type, system_default,
+                 widget, button, combobox_map = None, use_supported = False,
+                 special_choice = "System default"):
+        self.special_choice = special_choice
+        self.special_choice_shown = False
+        OptionAlwaysShown.__init__ (self, name, ipp_type, system_default,
+                                    widget, button,
+                                    combobox_map=combobox_map,
+                                    use_supported=use_supported)
+
+    def show_special_choice (self):
+        if self.special_choice_shown:
+            return
+
+        self.special_choice_shown = True
+        # Only works for ComboBox widgets
+        self.widget.insertItem(0, self.special_choice)
+        self.widget.setCurrentIndex(0)
+        ##model = self.widget.get_model ()
+        ##iter = model.insert (0)
+        ##model.set_value (iter, 0, self.special_choice)
+        ##self.widget.set_active_iter (model.get_iter_first ())
+
+    def hide_special_choice (self):
+        if not self.special_choice_shown:
+            return
+
+        self.special_choice_shown = False
+        # Only works for ComboBox widgets
+        self.widget.removeItem(0)
+
+    def reinit(self, original_value, supported=None):
+        if original_value != None:
+            self.hide_special_choice ()
+        else:
+            self.show_special_choice ()
+
+        OptionAlwaysShown.reinit (self, original_value, supported=supported)
+
+    def reset(self):
+        self.show_special_choice ()
+        OptionAlwaysShown.reset (self)
+
+    def changed(self):
+        OptionAlwaysShown.changed (self)
+        if self.widget.currentIndex() > 0:
+            self.hide_special_choice ()
+
+class Option(OptionInterface):
+
+    conflicts = None
+
+    def __init__(self, name, value, supported, on_change):
+        self.name = name
+        self.value = value
+        self.supported = supported
+        self.on_change = on_change
+        self.is_new = False
+
+        label = unicode(name)
+        if not label.endswith (':'):
+            label += ':'
+        self.label = QLabel(label)
+
+    def get_current_value(self):
+        raise NotImplemented
+
+    def is_changed(self):
+        return (self.is_new or
+                str (self.get_current_value()) != str (self.value))
+
+    def changed(self, widget, *args):
+        self.on_change(self)
+    
+# ---------------------------------------------------------------------------
+
+class OptionSelectOne(Option):
+
+    def __init__(self, name, value, supported, on_change):
+        Option.__init__(self, name, value, supported, on_change)
+
+        self.selector = gtk.combo_box_new_text()
+        
+        
+        selected = None
+        for nr, choice in enumerate(supported):
+            self.selector.append_text(str(choice))
+            if str (value) == str (choice):
+                selected = nr
+        if selected is not None:
+            self.selector.set_active(selected)
+        else:
+            print "Unknown value for %s: %s" % (name, value)
+            print "Choices:", supported
+        self.selector.connect("changed", self.changed)
+
+    def get_current_value(self):
+        return self.selector.get_active_text()
+
+# ---------------------------------------------------------------------------
+
+class OptionSelectOneNumber(OptionSelectOne):
+
+    def get_current_value(self):
+        return int(self.selector.get_active_text())
+
+# ---------------------------------------------------------------------------
+
+class OptionSelectMany(Option):
+
+    def __init__(self, name, value, supported, on_change):
+        Option.__init__(self, name, value, supported, on_change)
+        self.checkboxes = []
+        vbox = gtk.VBox()
+
+        for s in supported:
+            checkbox = gtk.CheckButton(label=s)
+            checkbox.set_active(s in value)
+            vbox.add(checkbox)
+            checkbox.connect("toggled", self.changed)
+            self.checkboxes.append(checkbox)
+        self.selector = vbox
+            
+    def get_current_value(self):
+        return[s for s, chk in zip(self.supported, self.checkboxes)
+               if chk.get_active()]
+
+# ---------------------------------------------------------------------------
+
+class OptionNumeric(Option):
+    def __init__(self, name, value, supported, on_change):
+        self.is_float = (isinstance(supported, float) or
+                         (isinstance(supported, tuple) and
+                          isinstance(supported[0], float)))
+        if self.is_float:
+            digits = 2
+        else:
+            digits = 0
+
+        if not isinstance(supported, tuple):
+            supported = (0, supported)
+        Option.__init__(self, name, value, supported, on_change)
+        adj = gtk.Adjustment(value, supported[0], supported[1], 1.0, 5.0, 0.0)
+        self.selector = gtk.SpinButton(adj, climb_rate=1.0, digits=digits)
+        if not self.is_float:
+            self.selector.set_numeric(True)
+        self.selector.connect("changed", self.changed)
+
+    def get_current_value(self):
+        if self.is_float:
+            return self.selector.get_value()
+        return self.selector.get_value_as_int()
+
+# ---------------------------------------------------------------------------
+
+class OptionText(Option):
+    def __init__(self, name, value, supported, on_change):
+        Option.__init__(self, name, value, supported, on_change)
+
+        self.selector = QLineEdit()
+        self.selector.setText(value)
+        self.selector.connect(self.selector, SIGNAL("textChanged(QString)"), self.changed)
+
+    def get_current_value(self):
+        return self.selector.text()
Index: system-config-printer-kde/optionwidgets.py
===================================================================
--- /dev/null
+++ system-config-printer-kde/optionwidgets.py
@@ -0,0 +1,221 @@
+# -*- coding: utf-8 -*-
+## system-config-printer
+
+#############################################################################
+##
+## Copyright 2007-2009 Canonical Ltd
+## Copyright 2008-2009 Richard Birnie <arbyuk@googlemail.com>
+## Author: Jonathan Riddell <jriddell@ubuntu.com>
+##         Richard Birnie <arbyuk@googlemail.com>
+##
+## Includes code from System Config Printer:
+## Copyright (C) 2006, 2007, 2008 Red Hat, Inc.
+## Copyright (C) 2006, 2007 Florian Festi <ffesti@redhat.com>
+## Copyright (C) 2006, 2007, 2008 Tim Waugh <twaugh@redhat.com>
+##
+## This program is free software; you can redistribute it and/or
+## modify it under the terms of the GNU General Public License as
+## published by the Free Software Foundation; either version 2 of
+## the License, or (at your option) any later version.
+##
+## This program is distributed in the hope that it will be useful,
+## but WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with this program.  If not, see <http://www.gnu.org/licenses/>.
+##
+#############################################################################
+
+import cups
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+from PyKDE4.kdecore import i18n
+
+"""
+These classes are used to dynamically generate the UI on the Options tab of the printer config dialogue
+"""
+
+def OptionWidget(option, ppd, gui, tab_label=None):
+    """Factory function"""
+    ui = option.ui
+    if (ui == cups.PPD_UI_BOOLEAN and
+        len (option.choices) != 2):
+        # This option is advertised as a Boolean but in fact has more
+        # than two choices.
+        print "Treating Boolean option %s as PickOne" % option.keyword
+        ui = cups.PPD_UI_PICKONE
+
+    if ui == cups.PPD_UI_BOOLEAN:
+        return OptionBool(option, ppd, gui, tab_label=tab_label)
+        pass
+    elif ui == cups.PPD_UI_PICKONE:
+        return OptionPickOne(option, ppd, gui, tab_label=tab_label)
+    elif ui == cups.PPD_UI_PICKMANY:
+        ##return OptionPickMany(option, ppd, gui, tab_label=tab_label)
+        pass
+
+# ---------------------------------------------------------------------------
+class Option(QObject):
+    
+    def __init__(self, option, ppd, gui, tab_label=None):
+        QObject.__init__(self)
+        self.option = option
+        self.ppd = ppd
+        self.gui = gui
+        self.enabled = True
+        self.tab_label = tab_label
+
+        ##vbox = gtk.VBox()
+        
+        #self.btnConflict = gtk.Button()
+        #icon = gtk.image_new_from_stock(gtk.STOCK_DIALOG_WARNING,
+        #                                gtk.ICON_SIZE_SMALL_TOOLBAR)
+        #self.btnConflict.add(icon)
+        #self.btnConflict.set_no_show_all(True) #avoid the button taking
+                                               # over control again
+        #vbox.add(self.btnConflict)    # vbox reserves space while button
+        #vbox.set_size_request(32, 28) # is hidden
+        #self.conflictIcon = vbox
+
+        #self.btnConflict.connect("clicked", self.on_btnConflict_clicked)
+        #icon.show()
+
+        self.constraints = [c for c in ppd.constraints
+                            if c.option1 == option.keyword]
+        #for c in self.constraints:
+        #    if not c.choice1 or not c.choice2:
+        #        print c.option1, repr(c.choice1), c.option2, repr(c.choice2)
+        self.conflicts = set()
+        self.conflict_message = ""
+
+    def enable(self, enabled=True):
+        self.selector.setEnabled(enabled)
+        self.enabled = enabled
+
+    def disable(self):
+        self.enable (False)
+
+    def is_enabled(self):
+        return self.enabled
+
+    def get_current_value(self):
+        raise NotImplemented
+
+    def is_changed(self):
+        return self.get_current_value()!= self.option.defchoice
+    
+    def writeback(self):
+        if self.enabled:
+            self.ppd.markOption(self.option.keyword, self.get_current_value())
+
+    def checkConflicts(self, update_others=True):
+        value = self.get_current_value()
+        for constraint in self.constraints:
+            option2 = self.gui.options.get(constraint.option2, None)
+            if option2 is None: continue
+
+            if (constraint.choice1==value and
+                option2.get_current_value() == constraint.choice2):
+                # conflict
+                self.conflicts.add(constraint)
+                if update_others:
+                    option2.checkConflicts(update_others=False)
+            elif constraint in self.conflicts:
+                # remove conflict
+                self.conflicts.remove(constraint)
+                option2.checkConflicts(update_others=False)
+
+
+        tooltip = [unicode(i18n("Conflicts with:"))]
+        for c in self.conflicts:
+            option = self.gui.options.get(c.option2)
+            tooltip.append(option.option.text)
+            
+        tooltip = "\n".join(tooltip)
+
+        self.conflict_message = tooltip # XXX more verbose
+            
+        if self.conflicts:
+            #FIXME: btnConflict not impemented yet
+            #self.gui.btnConflict.setTooltip(tooltip + "OPTION-" + self.option.keyword)
+            #self.btnConflict.show()
+            pass
+        else:
+            #self.btnConflict.hide()
+            pass
+
+        self.gui.option_changed(self)
+        return self.conflicts
+
+    def on_change(self, index):
+        self.checkConflicts()
+
+"""
+    def on_btnConflict_clicked(self, button):
+        self.dialog.set_markup(self.conflict_message)
+        self.dialog.run()
+        self.dialog.hide()
+        
+# ---------------------------------------------------------------------------
+"""
+
+
+class OptionBool(Option):
+
+    def __init__(self, option, ppd, gui, tab_label=None):
+        self.selector = QCheckBox(option.text, gui)
+        self.label = None
+        self.false = u"False" # hack to allow "None" instead of "False"
+        self.true = u"True"
+        for c in option.choices:
+            if c["choice"] in ("None", "False", "Off"):
+                self.false = c["choice"]
+            if c["choice"] in ("True", "On"):
+                self.true = c["choice"]
+        self.selector.setChecked(option.defchoice == self.true)
+        #self.selector.set_alignment(0.0, 0.5)
+        self.connect(self.selector, SIGNAL("toggled(bool)"), self.on_change)
+        Option.__init__(self, option, ppd, gui, tab_label=tab_label)
+
+    def get_current_value(self):
+        return (self.false, self.true)[self.selector.isChecked()]
+
+# ---------------------------------------------------------------------------
+
+class OptionPickOne(Option):
+    widget_name = "OptionPickOne"
+
+    def __init__(self, option, ppd, gui, tab_label=None):
+        self.selector = QComboBox(gui)
+        
+        label = option.text
+        if not label.endswith (':'):
+            label += ':'
+        self.label = QLabel(label, gui)
+        
+        selected = None
+        for nr, choice in enumerate(option.choices):
+            self.selector.addItem(choice['text'])
+            if option.defchoice == choice['choice']:
+                selected = self.selector.count() - 1
+        if selected is not None:
+            self.selector.setCurrentIndex(selected)
+        else:
+            print option.text, "unknown value:", option.defchoice
+        self.connect(self.selector, SIGNAL("currentIndexChanged(int)"), self.on_change)
+
+        Option.__init__(self, option, ppd, gui, tab_label=tab_label)
+
+    def get_current_value(self):
+        return self.option.choices[self.selector.currentIndex()]['choice']
+
+# ---------------------------------------------------------------------------
+
+class OptionPickMany(OptionPickOne):
+    widget_name = "OptionPickMany"
+
+    def __init__(self, option, ppd, gui, tab_label=None):
+        raise NotImplemented
+        Option.__init__(self, option, ppd, gui, tab_label=tab_label)
Index: system-config-printer-kde/smb-browse-dialog.ui
===================================================================
--- /dev/null
+++ system-config-printer-kde/smb-browse-dialog.ui
@@ -0,0 +1,124 @@
+<ui version="4.0" >
+ <class>SMBBrowseDialog</class>
+ <widget class="QDialog" name="SMBBrowseDialog" >
+  <property name="windowModality" >
+   <enum>Qt::NonModal</enum>
+  </property>
+  <property name="geometry" >
+   <rect>
+    <x>0</x>
+    <y>0</y>
+    <width>400</width>
+    <height>300</height>
+   </rect>
+  </property>
+  <property name="font" >
+   <font>
+    <weight>50</weight>
+    <bold>false</bold>
+   </font>
+  </property>
+  <property name="focusPolicy" >
+   <enum>Qt::StrongFocus</enum>
+  </property>
+  <property name="windowTitle" >
+   <string>SMB Browser</string>
+  </property>
+  <property name="modal" >
+   <bool>true</bool>
+  </property>
+  <widget class="QWidget" name="layoutWidget" >
+   <property name="geometry" >
+    <rect>
+     <x>21</x>
+     <y>250</y>
+     <width>361</width>
+     <height>41</height>
+    </rect>
+   </property>
+   <layout class="QHBoxLayout" name="horizontalLayout" >
+    <item>
+     <widget class="KPushButton" name="btnSMBBrowseRefresh" >
+      <property name="text" >
+       <string>Refresh</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <spacer name="horizontalSpacer" >
+      <property name="orientation" >
+       <enum>Qt::Horizontal</enum>
+      </property>
+      <property name="sizeHint" stdset="0" >
+       <size>
+        <width>40</width>
+        <height>20</height>
+       </size>
+      </property>
+     </spacer>
+    </item>
+    <item>
+     <widget class="KPushButton" name="btnSMBBrowseOk" >
+      <property name="text" >
+       <string>Ok</string>
+      </property>
+      <property name="shortcut" >
+       <string>Ctrl+O</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="KPushButton" name="btnSMBBrowseCancel" >
+      <property name="text" >
+       <string>Cancel</string>
+      </property>
+     </widget>
+    </item>
+   </layout>
+  </widget>
+  <widget class="QTreeWidget" name="twSMBBrowser" >
+   <property name="geometry" >
+    <rect>
+     <x>30</x>
+     <y>10</y>
+     <width>341</width>
+     <height>221</height>
+    </rect>
+   </property>
+   <property name="sizePolicy" >
+    <sizepolicy vsizetype="Expanding" hsizetype="Expanding" >
+     <horstretch>0</horstretch>
+     <verstretch>0</verstretch>
+    </sizepolicy>
+   </property>
+   <property name="sortingEnabled" >
+    <bool>true</bool>
+   </property>
+   <property name="allColumnsShowFocus" >
+    <bool>true</bool>
+   </property>
+   <property name="columnCount" >
+    <number>2</number>
+   </property>
+   <column>
+    <property name="text" >
+     <string>1</string>
+    </property>
+   </column>
+   <column>
+    <property name="text" >
+     <string>1</string>
+    </property>
+   </column>
+  </widget>
+ </widget>
+ <customwidgets>
+  <customwidget>
+   <class>KPushButton</class>
+   <extends>QPushButton</extends>
+   <header>kpushbutton.h</header>
+  </customwidget>
+ </customwidgets>
+ <resources/>
+ <connections/>
+</ui>
Index: system-config-printer-kde/system-config-printer-kde.desktop
===================================================================
--- system-config-printer-kde/system-config-printer-kde.desktop.orig
+++ system-config-printer-kde/system-config-printer-kde.desktop
@@ -1,79 +1,59 @@
 [Desktop Entry]
-Name=Printing
-Name[ca]=Impressió
-Name[cs]=Tisk
-Name[da]=Udskrift
-Name[de]=Drucken
-Name[el]=Εκτύπωση
-Name[es]=Imprimiendo
-Name[et]=Trükkimine
-Name[fr]=Impression
-Name[ga]=Priontáil
-Name[gl]=Impresión
-Name[hne]=छपाई
-Name[hu]=Nyomtatás
-Name[is]=Prentun
-Name[it]=Stampa
-Name[ja]=印刷
-Name[lt]=Spausdinimas
-Name[lv]=Drukāšana
-Name[mai]=छपाइ कए रहल अछि
-Name[nb]=Utskrift
-Name[nds]=Drucken
-Name[nl]=Printers
-Name[nn]=Utskrift
-Name[pa]=ਪਰਿੰਟਿੰਗ
-Name[pl]=Drukowanie
-Name[pt]=Impressão
-Name[pt_BR]=Imprimindo
-Name[ro]=Imprimare
-Name[ru]=Печать
-Name[sl]=Tiskanje
-Name[sv]=Utskrift
-Name[tr]=Yazdırma
-Name[uk]=Друк
-Name[x-test]=xxPrintingxx
-Name[zh_CN]=打印
-Name[zh_TW]=列印
-Comment=Configure printers
-Comment[ca]=Configura les impressores
-Comment[cs]=Nastavení tisku
-Comment[da]=Indstil printere
-Comment[de]=Drucker einrichten
-Comment[el]=Ρύθμιση εκτυπωτών
-Comment[es]=Configurar impresoras
-Comment[et]=Printerite seadistamine
-Comment[fr]=Configurer les imprimantes
-Comment[ga]=Cumraigh printéirí
-Comment[gl]=Configuración das impresoras
-Comment[hne]=प्रिंटर मन ल कान्फिगर करव
-Comment[hu]=Nyomtatóbeállítás
-Comment[is]=Stilla prentara
-Comment[it]=Configura le stampanti
-Comment[ja]=プリンタの設定
-Comment[lt]=Konfigūruoti spausdintuvus
-Comment[lv]=Konfigurēt drukas ierīces
-Comment[nb]=Sett opp skrivere
-Comment[nds]=Druckers instellen
-Comment[nl]=Printers instellen
-Comment[nn]=Set opp skrivarar
-Comment[pa]=ਪਰਿੰਟਿੰਗ ਸੰਰਚਨਾ
-Comment[pl]=Konfiguracja drukarek
-Comment[pt]=Configurar as impressoras
-Comment[pt_BR]=Configurar impressoras
-Comment[ro]=Configurează imprimantele
-Comment[ru]=Настройка принтеров
-Comment[sl]=Nastavite tiskalnike
-Comment[sv]=Anpassa skrivare
-Comment[tr]=Yazıcıları yapılandır
-Comment[uk]=Налаштувати принтери
-Comment[x-test]=xxConfigure printersxx
-Comment[zh_CN]=配置打印机
-Comment[zh_TW]=設定印表機
-Exec=system-config-printer-kde
-Terminal=false
-Type=Application
+Exec=kcmshell4 system-config-printer-kde
 Icon=printer
-StartupNotify=true
-OnlyShowIn=KDE;
+Type=Service
+X-KDE-ServiceTypes=KCModule
+
+X-KDE-Library=kpythonpluginfactory
+X-KDE-ParentApp=kcontrol
+X-KDE-PluginKeyword=system-config-printer-kde/system-config-printer-kde.py
+
+X-KDE-System-Settings-Parent-Category=computer-administration
+
+Name=Printer Configuration
+Name[bg]=Настройване на принтер
+Name[cs]=Nastavení tiskárny
+Name[da]=Konfiguration af printer
+Name[de]=Druckereinrichtung
+Name[el]=Ρυθμίσεις εκτυπωτή
+Name[et]=Printeri seadistamine
+Name[lv]=Printera konfigurācija
+Name[nb]=Skriveroppsett
+Name[nds]=Druckerinstellen
+Name[nl]=Printerconfiguratie
+Name[nn]=Skrivaroppsett
+Name[pt]=Configuração da Impressora
+Name[pt_BR]=Configuração da impressora
+Name[ro]=Configurare imprimantă
+Name[sv]=Skrivarinställning
+Name[tr]=Yazıcı Yapılandırması
+Name[uk]=Налаштування принтера
+Name[x-test]=xxPrinter Configurationxx
+Name[zh_CN]=打印机配置
+Name[zh_TW]=印表機設定
+
+Comment=Configure local and remote Printers
+Comment[bg]=Настройване на локални и отдалечени принтери
+Comment[cs]=Nastavte lokální a vzdálené tiskárny
+Comment[da]=Indstil lokale og eksterne printere
+Comment[de]=Drucker einrichten
+Comment[el]=Ρύθμιση τοπικών και απομακρυσμένων εκτυπωτών
+Comment[et]=Kohalike ja võrguprinterite seadistamine
+Comment[lv]=Konfigurēt lokālos un attālinātos printerus
+Comment[nb]=Sett opp lokale og nettverkskipiplugin_rawconverter.poskrivere
+Comment[nds]=Lokaal un feern Druckers instellen
+Comment[nl]=Lokale printers en die op afstand instellen
+Comment[nn]=Set opp lokale og nettverksskrivarar
+Comment[pt]=Configurar as impressoras locais e remotas
+Comment[pt_BR]=Configurar impressoras locais e remotas
+Comment[ro]=Configurează imprimantele locale și distante
+Comment[sv]=Anpassa lokala skrivare och fjärrskrivare
+Comment[tr]=Yerel ve uzak Yazıcıları yapılandır
+Comment[uk]=Налаштувати локальні і віддалені принтери
+Comment[x-test]=xxConfigure local and remote Printersxx
+Comment[zh_CN]=配置本地和远程的打印机
+Comment[zh_TW]=設定本地與遠端印表機
+
+X-KDE-Keywords=printer,printers,printing
+
 Categories=Qt;KDE;System;
Index: system-config-printer-kde/system-config-printer-kde.py
===================================================================
--- system-config-printer-kde/system-config-printer-kde.py.orig
+++ system-config-printer-kde/system-config-printer-kde.py
@@ -3,12 +3,15 @@
 
 #############################################################################
 ##
-## Copyright (C) 2007 Canonical Ltd
+## Copyright 2007-2009 Canonical Ltd
+## Copyright 2008-2009 Richard Birnie <arbyuk@googlemail.com>
 ## Author: Jonathan Riddell <jriddell@ubuntu.com>
+##         Richard Birnie <arbyuk@googlemail.com>
 ##
-## Includes code from System Config Printer
-## Copyright (C) 2007 Tim Waugh <twaugh@redhat.com>
-## Copyright (C) 2007 Red Hat, Inc.
+## Includes code from System Config Printer:
+## Copyright (C) 2006, 2007, 2008 Red Hat, Inc.
+## Copyright (C) 2006, 2007 Florian Festi <ffesti@redhat.com>
+## Copyright (C) 2006, 2007, 2008 Tim Waugh <twaugh@redhat.com>
 ##
 ## This program is free software; you can redistribute it and/or
 ## modify it under the terms of the GNU General Public License as
@@ -28,9 +31,7 @@
 MIN_REFRESH_INTERVAL = 1 # seconds
 import locale
 
-import sys, os, time, traceback, re, tempfile, httplib
-#tempfile
-import thread
+import sys, os, time, traceback, re, tempfile, httplib, thread
 
 #load modules from system-config-printer-common (debug, smburi), change path here if you have it installed elsewhere
 SYSTEM_CONFIG_PRINTER_DIR = "/usr/share/system-config-printer"
@@ -43,6 +44,7 @@ from PyQt4 import uic
 
 from PyKDE4.kdecore import *
 from PyKDE4.kdeui import *
+from PyKDE4.kio import *
 
 #use _() to keep code the same as gnome system-config-printer
 def _(string):
@@ -65,13 +67,15 @@ cups.require ("1.9.27")
 
 # These come from system-config-printer
 import config
-import cupshelpers  #, options
+import cupshelpers, options
+from optionwidgets import OptionWidget
 from smburi import SMBURI
 from debug import *
 
 import dbus
 import dbus.mainloop.qt
 import dbus.service
+import urllib
 
 ellipsis = unichr(0x2026)
 
@@ -87,6 +91,30 @@ def validDeviceURI (uri):
         return True
     return False
 
+if os.path.exists("system-config-printer.ui"):
+    APPDIR = QDir.currentPath()
+else:
+    file = KStandardDirs.locate("data", "system-config-printer-kde/system-config-printer.ui")
+    APPDIR = file.left(file.lastIndexOf("/"))
+
+class PyKcm(KCModule):
+    def __init__(self, component_data, parent, gui):
+        KCModule.__init__(self, component_data, parent)
+
+        uic.loadUi(APPDIR + "/" + "system-config-printer.ui", self)
+        self.setButtons(KCModule.Apply)
+        self.gui = gui
+        
+    def changed(self, state):
+        """a setting has changed, activate the Apply button"""
+        self.emit(SIGNAL("changed(bool)"), state)
+
+    def save(self):
+        self.gui.on_btnPrinterPropertiesApply_clicked()
+
+    def load(self):
+        self.gui.on_btnRevert_clicked()
+
 class GUI(QWidget):
     """our main class is the main window"""
 
@@ -95,9 +123,12 @@ class GUI(QWidget):
                        cups.IPP_PRINTER_BUSY: i18nc("Printer state", "Busy"),
                        cups.IPP_PRINTER_STOPPED: i18nc("Printer state", "Stopped") }
 
-    def __init__(self, start_printer = None, change_ppd = False):
-        QWidget.__init__(self)
 
+    def makeui(self, component_data, parent):
+        self.ui = PyKcm(component_data, parent, self)
+        start_printer = None
+        change_ppd = False
+        
         try:
             self.language = locale.getlocale(locale.LC_MESSAGES)
             self.encoding = locale.getlocale(locale.LC_CTYPE)
@@ -111,7 +142,7 @@ class GUI(QWidget):
         self.printer = None
         self.conflicts = set() # of options
         self.connect_server = (self.printer and self.printer.getServer()) \
-                               or cups.getServer()	
+                               or cups.getServer()        
         self.connect_user = cups.getUser()
         self.password = '' #FIXME not in Gnome version
         self.passwd_retry = False #FIXME not in Gnome version
@@ -126,53 +157,204 @@ class GUI(QWidget):
         try:
             self.cups = cups.Connection()
         except RuntimeError:
-	    #warn the user that cups is not running
-	    message = i18n("CUPS is not currently running. CUPS is required for complete printing functionality. Please start CUPS then restart this application.")
-	    answer = QMessageBox.warning(self, i18n("Print Server Not Running"), message, QMessageBox.Ok)
-	    #still allow the app to start for those that really want that
-	    if answer == QMessageBox.Ok:
-		pass
-	    
             self.cups = None
 
-        if os.path.exists("system-config-printer.ui"):
-            APPDIR = QDir.currentPath()
-        else:
-            file = KStandardDirs.locate("appdata", "system-config-printer.ui")
-            APPDIR = file.left(file.lastIndexOf("/"))
-
-        uic.loadUi(APPDIR + "/" + "system-config-printer.ui", self)
-        self.show()
-
         # New Printer Dialog
         self.newPrinterGUI = np = NewPrinterGUI(self)
-        #np.NewPrinterWindow.set_transient_for(self.MainWindow)
-
+        
         self.setConnected()
 
-        self.connect(self.mainlist, SIGNAL("itemSelectionChanged()"), self.on_tvMainList_cursor_changed)
-        self.connect(self.mainlist, SIGNAL("currentItemChanged (QTreeWidgetItem*, QTreeWidgetItem*)"), self.on_tvMainList_changed)
-        self.connect(self.chkServerBrowse, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
-        self.connect(self.chkServerShare, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
-        self.connect(self.chkServerShareAny, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
-        self.connect(self.chkServerRemoteAdmin, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
-        self.connect(self.chkServerAllowCancelAll, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
-        self.connect(self.chkServerLogDebug, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
-
-        self.connect(self.btnNewClass, SIGNAL("clicked()"), self.on_new_class_activate)
-        self.connect(self.btnNewPrinter, SIGNAL("clicked()"), self.on_new_printer_activate)
-
-        self.connect(self.entPDescription, SIGNAL("textEdited(const QString&)"), self.on_printer_changed)
-        self.connect(self.entPLocation, SIGNAL("textEdited(const QString&)"), self.on_printer_changed)
-        self.connect(self.entPDevice, SIGNAL("textEdited(const QString&)"), self.on_printer_changed)
-        self.connect(self.chkPEnabled, SIGNAL("stateChanged(int)"), self.on_printer_changed)
-        self.connect(self.chkPAccepting, SIGNAL("stateChanged(int)"), self.on_printer_changed)
-        self.connect(self.chkPShared, SIGNAL("stateChanged(int)"), self.on_printer_changed)
-        self.connect(self.cmbPErrorPolicy, SIGNAL("currentIndexChanged(int)"), self.on_printer_changed)
-        self.connect(self.cmbPOperationPolicy, SIGNAL("currentIndexChanged(int)"), self.on_printer_changed)
-        self.connect(self.cmbPStartBanner, SIGNAL("currentIndexChanged(int)"), self.on_printer_changed)
-        self.connect(self.cmbPEndBanner, SIGNAL("currentIndexChanged(int)"), self.on_printer_changed)
-        #self.connect(self.rbtnPAllow, SIGNAL("toggled(bool)"), self.on_printer_changed)
+        self.ui.connect(self.ui.mainlist, SIGNAL("itemSelectionChanged()"), self.on_tvMainList_cursor_changed)
+        self.ui.connect(self.ui.mainlist, SIGNAL("currentItemChanged (QTreeWidgetItem*, QTreeWidgetItem*)"), self.on_tvMainList_changed)
+        self.ui.connect(self.ui.chkServerBrowse, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
+        self.ui.connect(self.ui.chkServerShare, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
+        self.ui.connect(self.ui.chkServerShareAny, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
+        self.ui.connect(self.ui.chkServerRemoteAdmin, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
+        self.ui.connect(self.ui.chkServerAllowCancelAll, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
+        self.ui.connect(self.ui.chkServerLogDebug, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
+
+        self.ui.connect(self.ui.btnChangePPD, SIGNAL("clicked()"), self.on_btnChangePPD_clicked)
+        self.ui.connect(self.ui.btnNewClass, SIGNAL("clicked()"), self.on_new_class_activate)
+        self.ui.connect(self.ui.btnNewPrinterNetwork, SIGNAL("clicked()"), self.on_new_printer_activate)
+        self.ui.connect(self.ui.btnPrintTestPage, SIGNAL("clicked()"), self.on_btnPrintTestPage_clicked)
+        self.ui.connect(self.ui.btnSelfTest, SIGNAL("clicked()"), self.on_btnSelfTest_clicked)
+        self.ui.connect(self.ui.btnCleanHeads, SIGNAL("clicked()"), self.on_btnCleanHeads_clicked)
+
+        self.ui.connect(self.ui.btnNewJobOption, SIGNAL("clicked()"), self.on_btnNewJobOption_clicked)
+        self.ui.connect(self.ui.entNewJobOption, SIGNAL("textChanged(QString)"), self.on_entNewJobOption_changed)
+
+        self.ui.connect(self.ui.entPDescription, SIGNAL("textEdited(const QString&)"), self.on_printer_changed)
+        self.ui.connect(self.ui.entPLocation, SIGNAL("textEdited(const QString&)"), self.on_printer_changed)
+        self.ui.connect(self.ui.chkPMakeDefault, SIGNAL("stateChanged(int)"), self.chkPMakeDefault_stateChanged)
+        self.ui.connect(self.ui.btnDelete, SIGNAL("clicked()"), self.btnDelete_clicked)
+        self.ui.connect(self.ui.entPDevice, SIGNAL("textEdited(const QString&)"), self.on_printer_changed)
+        self.ui.connect(self.ui.chkPEnabled, SIGNAL("stateChanged(int)"),self.on_printer_changed)
+        self.ui.connect(self.ui.chkPAccepting, SIGNAL("stateChanged(int)"), self.on_printer_changed)
+        self.ui.connect(self.ui.chkPShared, SIGNAL("stateChanged(int)"), self.on_printer_changed)
+        self.ui.connect(self.ui.cmbPStartBanner, SIGNAL("currentIndexChanged(int)"), self.on_printer_changed)
+        self.ui.connect(self.ui.cmbPEndBanner, SIGNAL("currentIndexChanged(int)"), self.on_printer_changed)
+        self.ui.connect(self.ui.rbtnPAllow, SIGNAL("toggled(bool)"), self.on_printer_changed)
+        self.ui.connect(self.ui.btnPAddUser, SIGNAL("clicked()"), self.btnPAddUser_clicked)
+        self.ui.connect(self.ui.btnPDelUser, SIGNAL("clicked()"), self.btnPDelUser_clicked)
+
+        self.ui.connect(self.ui.btnClassAddMember, SIGNAL("clicked()"), self.on_btnClassAddMember_clicked)
+        self.ui.connect(self.ui.btnClassDelMember, SIGNAL("clicked()"), self.on_btnClassDelMember_clicked)
+
+        self.ui.mainlist.header().hide()
+
+        self.policiesTabWidget = self.ui.ntbkPrinter.widget(1)
+        self.memberTabWidget = self.ui.ntbkPrinter.widget(2)
+        self.optionsTabWidget = self.ui.ntbkPrinter.widget(3)
+
+        self.ui.btnClassAddMember.setIcon(KIcon("arrow-left"))
+        self.ui.btnClassDelMember.setIcon(KIcon("arrow-right"))
+        self.mainListSelectedName = None
+        self.mainListSelectedType = None
+
+        # Job Options widgets.
+        opts = [ options.OptionAlwaysShown ("copies", int, 1,
+                                            self.ui.sbJOCopies,
+                                            self.ui.btnJOResetCopies),
+                 options.OptionAlwaysShownSpecial \
+                 ("orientation-requested", int, 3,
+                  self.ui.cmbJOOrientationRequested,
+                  self.ui.btnJOResetOrientationRequested,
+                  combobox_map = [3, 4, 5, 6],
+                  special_choice=_("Automatic rotation")),
+
+                 options.OptionAlwaysShown ("fitplot", bool, False,
+                                            self.ui.cbJOFitplot,
+                                            self.ui.btnJOResetFitplot),
+
+                 options.OptionAlwaysShown ("number-up", int, 1,
+                                            self.ui.cmbJONumberUp,
+                                            self.ui.btnJOResetNumberUp,
+                                            combobox_map=[1, 2, 4, 6, 9, 16]),
+
+                 options.OptionAlwaysShown ("number-up-layout", str, "lrtb",
+                                            self.ui.cmbJONumberUpLayout,
+                                            self.ui.btnJOResetNumberUpLayout,
+                                            combobox_map = [ "lrtb",
+                                                             "lrbt",
+                                                             "rltb",
+                                                             "rlbt",
+                                                             "tblr",
+                                                             "tbrl",
+                                                             "btlr",
+                                                             "btrl" ]),
+
+                 options.OptionAlwaysShown ("brightness", int, 100,
+                                            self.ui.sbJOBrightness,
+                                            self.ui.btnJOResetBrightness),
+
+                 options.OptionAlwaysShown ("finishings", int, 3,
+                                            self.ui.cmbJOFinishings,
+                                            self.ui.btnJOResetFinishings,
+                                            combobox_map = [ 3, 4, 5, 6,
+                                                             7, 8, 9, 10,
+                                                             11, 12, 13, 14,
+                                                             20, 21, 22, 23,
+                                                             24, 25, 26, 27,
+                                                             28, 29, 30, 31,
+                                                             50, 51, 52, 53 ],
+                                            use_supported = True),
+
+                 options.OptionAlwaysShown ("job-priority", int, 50,
+                                            self.ui.sbJOJobPriority,
+                                            self.ui.btnJOResetJobPriority),
+
+                 options.OptionAlwaysShown ("media", str,
+                                            "A4", # This is the default for
+                                                  # when media-default is
+                                                  # not supplied by the IPP
+                                                  # server.  Fortunately it
+                                                  # is a mandatory attribute.
+                                            self.ui.cmbJOMedia,
+                                            self.ui.btnJOResetMedia,
+                                            use_supported = True),
+
+                 options.OptionAlwaysShown ("sides", str, "one-sided",
+                                            self.ui.cmbJOSides,
+                                            self.ui.btnJOResetSides,
+                                            combobox_map =
+                                            [ "one-sided",
+                                              "two-sided-long-edge",
+                                              "two-sided-short-edge" ]),
+
+                 options.OptionAlwaysShown ("job-hold-until", str,
+                                            "no-hold",
+                                            self.ui.cmbJOHoldUntil,
+                                            self.ui.btnJOResetHoldUntil,
+                                            use_supported = True),
+
+                 options.OptionAlwaysShown ("mirror", bool, False,
+                                            self.ui.cbJOMirror,
+                                            self.ui.btnJOResetMirror),
+
+                 options.OptionAlwaysShown ("scaling", int, 100,
+                                            self.ui.sbJOScaling,
+                                            self.ui.btnJOResetScaling),
+
+
+                 options.OptionAlwaysShown ("saturation", int, 100,
+                                            self.ui.sbJOSaturation,
+                                            self.ui.btnJOResetSaturation),
+
+                 options.OptionAlwaysShown ("hue", int, 0,
+                                            self.ui.sbJOHue,
+                                            self.ui.btnJOResetHue),
+
+                 options.OptionAlwaysShown ("gamma", int, 1000,
+                                            self.ui.sbJOGamma,
+                                            self.ui.btnJOResetGamma),
+
+                 options.OptionAlwaysShown ("cpi", float, 10.0,
+                                            self.ui.sbJOCpi, self.ui.btnJOResetCpi),
+
+                 options.OptionAlwaysShown ("lpi", float, 6.0,
+                                            self.ui.sbJOLpi, self.ui.btnJOResetLpi),
+
+                 options.OptionAlwaysShown ("page-left", int, 18,
+                                            self.ui.sbJOPageLeft,
+                                            self.ui.btnJOResetPageLeft),
+
+                 options.OptionAlwaysShown ("page-right", int, 18,
+                                            self.ui.sbJOPageRight,
+                                            self.ui.btnJOResetPageRight),
+
+                 options.OptionAlwaysShown ("page-top", int, 36,
+                                            self.ui.sbJOPageTop,
+                                            self.ui.btnJOResetPageTop),
+
+                 options.OptionAlwaysShown ("page-bottom", int, 36,
+                                            self.ui.sbJOPageBottom,
+                                            self.ui.btnJOResetPageBottom),
+
+                 options.OptionAlwaysShown ("prettyprint", bool, False,
+                                            self.ui.cbJOPrettyPrint,
+                                            self.ui.btnJOResetPrettyPrint),
+
+                 options.OptionAlwaysShown ("wrap", bool, False, self.ui.cbJOWrap,
+                                            self.ui.btnJOResetWrap),
+
+                 options.OptionAlwaysShown ("columns", int, 1,
+                                            self.ui.sbJOColumns,
+                                            self.ui.btnJOResetColumns),
+                 ]
+        self.job_options_widgets = {}
+        self.job_options_buttons = {}
+        for option in opts:
+            self.job_options_widgets[option.widget] = option
+            self.job_options_buttons[option.button] = option
+            self.connect(option.button, SIGNAL("clicked()"), self.on_job_option_reset)
+            if type(option.widget) == QSpinBox:
+                self.connect(option.widget, SIGNAL("valueChanged(int)"), self.on_job_option_changed)
+            elif type(option.widget) == QComboBox:
+                self.connect(option.widget, SIGNAL("currentIndexChanged(int)"), self.on_job_option_changed)
+            elif type(option.widget) == QCheckBox:
+                self.connect(option.widget, SIGNAL("stateChanged(int)"), self.on_job_option_changed)
+            else:
+                raise RuntimeError
 
         try:
             self.populateList(start_printer, change_ppd)
@@ -182,25 +364,25 @@ class GUI(QWidget):
             self.populateList()
             self.show_HTTP_Error(s)
 
-        self.mainlist.header().hide()
-
         #hide some bits until implemented
-        self.btnNewPrinterNetwork.hide()
-        self.newPrinterNetworkLabel.hide()
-        self.btnNewPrinterSpecial.hide()
-        self.newPrinterSpecialLabel.hide()
-        self.btnNewPrinter.setText(i18n("New Printer"))
-        self.btnPrinterPropertiesApply.setIcon(KIcon("dialog-ok-apply"))
-        self.btnRevert.setIcon(KIcon("document-revert"))
-        self.newPrinterLabel.hide()
-        #(obsolete) only show settings until ready for the rest
-        #self.mainlist.hide()
-        self.mainlist.setCurrentItem(self.settingsItem)
+        self.ui.btnNewPrinter.hide()
+        self.ui.newPrinterLabel.hide()
+        self.ui.btnNewPrinterSpecial.hide()
+        self.ui.newPrinterSpecialLabel.hide()
+        self.ui.entPName.hide()
+        self.ui.lblPName.hide()
+
+        #catch the currentItemChanged signal. This should stop the
+        # 'Do you want to save settings' pop-up at startup
+        self.ui.mainlist.blockSignals(True)
+        self.ui.mainlist.setCurrentItem(self.settingsItem)
+        self.ui.mainlist.blockSignals(False) #unblock the signal
+        
         #FIXME hide labels until implemented
-        self.lblPOptions.hide()
-        self.lblPInstallOptions.hide()
+        self.ui.lblPOptions.hide()
+        self.ui.lblPInstallOptions.hide()
 
-        self.setWindowIcon(KIcon("printer"))
+        return self.ui
 
     # now called  dests_iconview_item_activated() in the Gnome version
     def on_tvMainList_cursor_changed(self):
@@ -209,14 +391,17 @@ class GUI(QWidget):
             # and the user just pressed "Cancel".
             #FIXME, should offer dialog prompting to save or cancel here
             return
-        items = self.mainlist.selectedItems()
+        items = self.ui.mainlist.selectedItems()
+
         if len(items) < 1:
             return
         item = items[0]
+
         #FIXME only show settings until ready for the rest
         #item = self.settingsItem
-        type = str(item.text(1))
-        name = str(item.text(0))
+        type = unicode(item.text(1))
+        name = unicode(item.text(0))
+
         #name, type = self.getSelectedItem()
         #model, self.mainListSelected = self.tvMainList.get_selection().get_selected()
         #Save the values incase it gets deselected
@@ -224,11 +409,9 @@ class GUI(QWidget):
         self.mainListSelectedName = name
         item_selected = True
         if type == "New":
-            #self.ntbkMain.set_current_page(0)
-            self.ntbkMain.setCurrentIndex(0)
+            self.ui.ntbkMain.setCurrentIndex(0)
         elif type == "Settings":
-            #self.ntbkMain.set_current_page(0)
-            self.ntbkMain.setCurrentIndex(1)
+            self.ui.ntbkMain.setCurrentIndex(1)
             if self.cups:
                 self.fillServerTab()
             else:
@@ -239,19 +422,19 @@ class GUI(QWidget):
         elif type in ['Printer', 'Class']:
             try:
                 self.fillPrinterTab(name)
-                self.fillPrinterOptions()
+                # the below not needed, fillPrinterTab() already calls fillPrinterOptions()
+                ##self.fillPrinterOptions("foo", True) #FIXME parameters need fixing
                 self.setDataButtonState()
+                self.ui.ntbkPrinter.setCurrentIndex(0)
             except RuntimeError:
                 # Perhaps cupsGetPPD2 failed for a browsed printer.
-                self.ntbkMain.setCurrentIndex(3)
-                #self.ntbkMain.set_current_page(2)
+                self.ui.ntbkMain.setCurrentIndex(3)
                 return
 
-            #self.ntbkMain.set_current_page(1)
-            self.ntbkMain.setCurrentIndex(2)
+            self.ui.printerNameLabel.setText(name)
+            self.ui.ntbkMain.setCurrentIndex(2)
         elif type == "None":
-            #self.ntbkMain.set_current_page(2)
-            self.ntbkMain.setCurrentIndex(3)
+            self.ui.ntbkMain.setCurrentIndex(3)
             self.setDataButtonState()
             item_selected = False
 
@@ -270,13 +453,15 @@ class GUI(QWidget):
         elif type == "Settings":
             return self.save_serversettings()
 
+    @pyqtSignature("")
     def on_tvMainList_changed(self, new, old):
         """about to change, offer to save"""
         if self.changed:
-            answer = QMessageBox.question(self, "Save Changes", "Do you want to save changes?", QMessageBox.Save | QMessageBox.Discard | QMessageBox.Cancel, QMessageBox.Save)
-            if answer == QMessageBox.Save:
+            answer = KMessageBox.questionYesNo(self, "Do you want to save changes?", "Save Changes", KStandardGuiItem.save(), KStandardGuiItem.discard() )
+    
+            if answer == KMessageBox.Yes: #save is equivalent to yes
                 self.printer_properties_response()
-            elif answer == QMessageBox.Discard:
+            elif answer == KMessageBox.No: #discard is equivalent to no
                 self.changed = set() # avoid asking the user
 
     def busy (self, win = None):
@@ -284,7 +469,7 @@ class GUI(QWidget):
             if not win:
                 win = self
             win.setCursor(Qt.WaitCursor)
-            QApplication.processEvents()
+            KApplication.processEvents()
         except:
             nonfatalException ()
 
@@ -293,7 +478,7 @@ class GUI(QWidget):
             if not win:
                 win = self
             win.setCursor(Qt.ArrowCursor)
-            QApplication.processEvents()
+            KApplication.processEvents()
         except:
             nonfatalException ()
 
@@ -315,14 +500,14 @@ class GUI(QWidget):
 
         for widget in (#FIXMEself.btnNewPrinter, self.btnNewClass,
                        #self.new_printer, self.new_class,
-                       self.chkServerBrowse, self.chkServerShare,
-                       self.chkServerRemoteAdmin,
-                       self.chkServerAllowCancelAll,
-                       self.chkServerLogDebug):
+                       self.ui.chkServerBrowse, self.ui.chkServerShare,
+                       self.ui.chkServerRemoteAdmin,
+                       self.ui.chkServerAllowCancelAll,
+                       self.ui.chkServerLogDebug):
             widget.setEnabled(connected)
 
-        sharing = self.chkServerShare.isChecked ()
-        self.chkServerShareAny.setEnabled (sharing)
+        sharing = self.ui.chkServerShare.isChecked ()
+        self.ui.chkServerShareAny.setEnabled (sharing)
 
         try:
             del self.server_settings
@@ -330,9 +515,11 @@ class GUI(QWidget):
             pass
 
     def populateList(self, start_printer = None, change_ppd = False):
-        #FIXMEold_name, old_type = self.getSelectedItem()
-        old_name = ""
-        old_type = ""
+        old_name, old_type = self.getSelectedItem()
+        if self.ui.ntbkMain.currentIndex() == 1:
+            serverPageShowing = True
+        else:
+            serverPageShowing = False
 
         select_path = None
 
@@ -416,9 +603,11 @@ class GUI(QWidget):
             more_entries =  self.mainlist.remove(iter)
             if not more_entries: break
         """
-        self.mainlist.clear()
-        QTreeWidgetItem(self.mainlist, ["New Printer", 'New'])
-        self.settingsItem = QTreeWidgetItem(self.mainlist, ["Server Settings", 'Settings'])
+        self.ui.mainlist.clear()
+        QTreeWidgetItem(self.ui.mainlist, ["New Printer", 'New'])
+        self.settingsItem = QTreeWidgetItem(self.ui.mainlist, ["Server Settings", 'Settings'])
+        if serverPageShowing:
+            self.settingsItem.setSelected(True)
 
         # add new
         for printers, text, name in (
@@ -429,7 +618,7 @@ class GUI(QWidget):
             if not printers: continue
 
             #self.mainlist.addTopLevelItem(QTreeWidgetItem(self.mainlist, text))
-            rootTreeItem = QTreeWidgetItem(self.mainlist, [text, name])
+            rootTreeItem = QTreeWidgetItem(self.ui.mainlist, [text, name])
             #iter = self.mainlist.append(None, (text, name))
             #path = self.mainlist.get_path(iter)
 
@@ -438,7 +627,7 @@ class GUI(QWidget):
                     start_printer = printer_name
                 treeItem = QTreeWidgetItem(rootTreeItem, [printer_name, "Printer"])
                 #p_iter = self.mainlist.append(iter, (printer_name, "Printer"))
-                if printer_name==start_printer:
+                if printer_name==start_printer and not serverPageShowing:
                     treeItem.setSelected(True)
                     expanded[name] = True
             if expanded[name]:
@@ -461,28 +650,29 @@ class GUI(QWidget):
             return
         if isinstance(widget, QCheckBox):
             value = widget.isChecked()
-        elif isinstance(widget, QLineEdit):
+        elif isinstance(widget, QLineEdit): #this should be a KLineEdit but causes errors
             value = unicode(widget.text())
         elif isinstance(widget, QRadioButton):
             value = widget.isChecked()
-        elif isinstance(widget, QComboBox):
+        elif isinstance(widget, QComboBox): #KCombobox causes errors
             value = unicode(widget.currentText())
         else:
             raise ValueError, "Widget type not supported (yet)"
 
         p = self.printer
         old_values = {
-            self.entPDescription : p.info,
-            self.entPLocation : p.location,
-            self.entPDevice : p.device_uri,
-            self.chkPEnabled : p.enabled,
-            self.chkPAccepting : not p.rejecting,
-            self.chkPShared : p.is_shared,
-            self.cmbPStartBanner : p.job_sheet_start,
-            self.cmbPEndBanner : p.job_sheet_end,
-            self.cmbPErrorPolicy : p.error_policy,
-            self.cmbPOperationPolicy : p.op_policy,
-            #self.rbtnPAllow: p.default_allow, #FIXME access control tab
+            self.ui.entPDescription : p.info,
+            self.ui.entPLocation : p.location,
+            self.ui.entPDevice : p.device_uri,
+            self.ui.chkPEnabled : p.enabled,
+            self.ui.chkPAccepting : not p.rejecting,
+            self.ui.chkPShared : p.is_shared,
+            self.ui.cmbPStartBanner : p.job_sheet_start,
+            self.ui.cmbPEndBanner : p.job_sheet_end,
+            self.ui.rbtnPAllow: p.default_allow
+            #FIXME Not implemented in the current UI
+            #self.cmbPErrorPolicy : p.error_policy,
+            #self.cmbPOperationPolicy : p.op_policy,
             }
 
         old_value = old_values[widget]
@@ -518,6 +708,7 @@ class GUI(QWidget):
 
         installablebold = False
         optionsbold = False
+        """ FIXME, no conflicts button in system settings
         if self.conflicts:
             debugprint ("Conflicts detected")
             self.btnConflict.show()
@@ -527,15 +718,16 @@ class GUI(QWidget):
                 else:
                     optionsbold = True
         else:
-            self.btnConflict.hide()
+            self.ui.btnConflict.hide()
+        """
         installabletext = i18n("Installable Options")
         optionstext = i18n("Printer Options")
         if installablebold:
             installabletext = i18nc("Conflicted entry", "<b>%1</b>", installabletext)
         if optionsbold:
             optionstext = i18nc("Conflicted entry", "<b>%1</b>", optionstext)
-        self.lblPInstallOptions.setText(installabletext)
-        self.lblPOptions.setText(optionstext)
+        self.ui.lblPInstallOptions.setText(installabletext)
+        self.ui.lblPOptions.setText(optionstext)
 
         """  FIXME
         store = self.tvPrinterProperties.get_model ()
@@ -551,8 +743,9 @@ class GUI(QWidget):
                     store.set_value (iter, 0, optionstext)
         """
 
-        self.btnPrinterPropertiesApply.setEnabled(len (self.changed) > 0)
-        self.btnRevert.setEnabled(len (self.changed) > 0)
+        self.ui.changed(len (self.changed) > 0)
+        #self.ui.btnPrinterPropertiesApply.setEnabled(len (self.changed) > 0)
+        #self.ui.btnRevert.setEnabled(len (self.changed) > 0)
 
     def save_printer(self, printer, saveall=False):
         class_deleted = False
@@ -565,21 +758,12 @@ class GUI(QWidget):
                     self.passwd_retry = False # use cached Passwd 
                     self.cups.addPrinter(name, ppd=self.ppd)
 
-            #FIXME classes
             if printer.is_class:
-                pass
-                """
                 # update member list
-                new_members = self.getCurrentClassMembers(self.tvClassMembers)
+                new_members = self.getCurrentClassMembers(self.ui.tvClassMembers)
                 if not new_members:
-                    dialog = gtk.MessageDialog(
-                        flags=0, type=gtk.MESSAGE_WARNING,
-                        buttons=gtk.BUTTONS_YES_NO,
-                        message_format=_("This will delete this class!"))
-                    dialog.format_secondary_text(_("Proceed anyway?"))
-                    result = dialog.run()
-                    dialog.destroy()
-                    if result==gtk.RESPONSE_NO:
+                    result = KMessageBox.warningContinueCancel(self.ui, i18n("Class now has no members. Proceed anyway?"), i18n("Class Empty"))
+                    if result == KMessageBox.Continue:
                         return True
                     class_deleted = True
 
@@ -587,24 +771,24 @@ class GUI(QWidget):
                 old_members = printer.class_members[:]
 
                 for member in new_members:
+                    member = unicode(member)
                     if member in old_members:
                         old_members.remove(member)
                     else:
                         self.cups.addPrinterToClass(member, name)
                 for member in old_members:
                     self.cups.deletePrinterFromClass(member, name)    
-                """
 
-            location = unicode(self.entPLocation.text())
-            info = unicode(self.entPDescription.text())
-            device_uri = unicode(self.entPDevice.text())
+            location = unicode(self.ui.entPLocation.text())
+            info = unicode(self.ui.entPDescription.text())
+            device_uri = unicode(self.ui.entPDevice.text())
             if device_uri.find (ellipsis) != -1:
                 # The URI is sanitized and not editable.
                 device_uri = printer.device_uri
 
-            enabled = self.chkPEnabled.isChecked()
-            accepting = self.chkPAccepting.isChecked()
-            shared = self.chkPShared.isChecked()
+            enabled = self.ui.chkPEnabled.isChecked()
+            accepting = self.ui.chkPAccepting.isChecked()
+            shared = self.ui.chkPShared.isChecked()
 
             if info!=printer.info or saveall:
                 self.passwd_retry = False # use cached Passwd 
@@ -627,24 +811,26 @@ class GUI(QWidget):
                 self.passwd_retry = False # use cached Passwd 
                 self.printer.setShared(shared)
 
-            job_sheet_start = unicode(self.cmbPStartBanner.currentText())
-            job_sheet_end = unicode(self.cmbPEndBanner.currentText())
-            error_policy = unicode(self.cmbPErrorPolicy.currentText())
-            op_policy = unicode(self.cmbPOperationPolicy.currentText())
+            job_sheet_start = unicode(self.ui.cmbPStartBanner.currentText())
+            job_sheet_end = unicode(self.ui.cmbPEndBanner.currentText())
+            #FIXME Not implemented in current UI
+            #error_policy = unicode(self.cmbPErrorPolicy.currentText())
+            #op_policy = unicode(self.cmbPOperationPolicy.currentText())
 
             if (job_sheet_start != printer.job_sheet_start or
                 job_sheet_end != printer.job_sheet_end) or saveall:
                 self.passwd_retry = False # use cached Passwd
                 printer.setJobSheets(job_sheet_start, job_sheet_end)
-            if error_policy != printer.error_policy or saveall:
-                self.passwd_retry = False # use cached Passwd
-                printer.setErrorPolicy(error_policy)
-            if op_policy != printer.op_policy or saveall:
-                self.passwd_retry = False # use cached Passwd
-                printer.setOperationPolicy(op_policy)
+            #FIXME Not implemented in current UI
+            #if error_policy != printer.error_policy or saveall:
+                #self.passwd_retry = False # use cached Passwd
+                #printer.setErrorPolicy(error_policy)
+            #if op_policy != printer.op_policy or saveall:
+                #self.passwd_retry = False # use cached Passwd
+                #printer.setOperationPolicy(op_policy)
 
-            """FIXME TODO access
-            default_allow = self.rbtnPAllow.get_active()
+            #Access Control
+            default_allow = self.ui.rbtnPAllow.isChecked()
             except_users = self.getPUsers()
 
             if (default_allow != printer.default_allow or
@@ -656,13 +842,16 @@ class GUI(QWidget):
                 if option not in self.server_side_options:
                     printer.unsetOption(option)
             for option in self.server_side_options.itervalues():
-                if option.is_changed() or saveall:
-                    printer.setOption(option.name, option.get_current_value())
-            """
+                if (option.is_changed() or
+                    saveall and
+                    option.get_current_value () != option.system_default):
+                    printer.setOption(unicode(option.name), unicode(option.get_current_value()) )
+
         except cups.IPPError, (e, s):
             self.show_IPP_Error(e, s)
             return True
         self.changed = set() # of options
+        
         if not self.__dict__.has_key ("server_settings"):
             # We can authenticate with the server correctly at this point,
             # but we have never fetched the server settings to see whether
@@ -677,9 +866,12 @@ class GUI(QWidget):
             self.populateList ()
         else:
             # Update our copy of the printer's settings.
-            printers = cupshelpers.getPrinters (self.cups)
-            this_printer = { name: printers[name] }
-            self.printers.update (this_printer)
+            try:
+                printers = cupshelpers.getPrinters (self.cups)
+                this_printer = { name: printers[name] }
+                self.printers.update (this_printer)
+            except cups.IPPError, (e, s):
+                show_IPP_Error(e, s, self.PrinterPropertiesDialog)
 
         return False
 
@@ -690,6 +882,7 @@ class GUI(QWidget):
 
     @pyqtSignature("")
     def on_btnPrintTestPage_clicked(self):
+        self.setTestButton(self.printer)
         if self.test_button_cancels:
             jobs = self.printer.testsQueued ()
             for job in jobs:
@@ -706,19 +899,21 @@ class GUI(QWidget):
             custom_testpage = None
             opt = self.ppd.findOption ("PageSize")
             if opt:
+                print opt
                 custom_testpage = os.path.join(SYSTEM_CONFIG_PRINTER_DIR, 'testpage-%s.ps' % opt.defchoice.lower())
+                print custom_testpage
 
             if custom_testpage and os.path.exists(custom_testpage):
                 debugprint ('Printing custom test page ' + custom_testpage)
                 job_id = self.cups.printTestPage(self.printer.name,
                     file=custom_testpage)
+                print job_id
             else:
                 debugprint ('Printing default test page')
                 job_id = self.cups.printTestPage(self.printer.name)
 
             self.setTestButton (self.printer)
-            QMessageBox.information(self, i18nc("Test page submitted", "Submitted"), i18n("Test page submitted as "
-                                                            "job %d") % job_id)
+            KMessageBox.information(self, i18n("Test page submitted as job %1", job_id), i18nc("Test page submitted", "Submitted"))
         except cups.IPPError, (e, msg):
             if (e == cups.IPP_NOT_AUTHORIZED and
                 self.connect_server != 'localhost' and
@@ -748,7 +943,7 @@ class GUI(QWidget):
             self.lblInfo.set_markup ('<span size="larger">' +
                                      i18nc("Maintenance command submitted", "<b>Submitted</b>") + '</span>\n\n' +
                                      i18n("Maintenance command submitted as "
-                                       "job %d") % job_id)
+                                       "job %d", job_id))
             self.InfoDialog.set_transient_for (self.MainWindow)
             self.InfoDialog.run ()
             self.InfoDialog.hide ()
@@ -818,25 +1013,24 @@ class GUI(QWidget):
             """
             raise
 
-        for widget in (self.entPDescription, self.entPLocation,
-                       self.entPDevice):
-            widget.setReadOnly(not editable)
-
-        for widget in (self.btnSelectDevice, self.btnChangePPD):
-            """,FIXME
-                       self.chkPEnabled, self.chkPAccepting, self.chkPShared,
-                       self.cmbPStartBanner, self.cmbPEndBanner,
-                       self.cmbPErrorPolicy, self.cmbPOperationPolicy,
-                       self.rbtnPAllow, self.rbtnPDeny, self.tvPUsers,
-                       self.entPUser, self.btnPAddUser, self.btnPDelUser):
-            """
-            widget.setEnabled(editable)
+        for widget in (self.ui.entPDescription, self.ui.entPLocation,
+                        self.ui.entPName, self.ui.entPDevice):
+                            widget.setReadOnly(not editable)
+
+        for widget in (self.ui.btnChangePPD,
+                       self.ui.chkPEnabled, self.ui.chkPAccepting, self.ui.chkPShared,
+                       self.ui.cmbPStartBanner, self.ui.cmbPEndBanner,  self.ui.btnPAddUser,
+                       self.ui.btnPDelUser, self.ui.rbtnPAllow, self.ui.rbtnPDeny):
+                    #""",FIXME
+                       #self.btnSelectDevice, self.cmbPErrorPolicy,
+                       #self.cmbPOperationPolicy,):
+                    #"""
+                widget.setEnabled(editable)
 
         # Description page
-        self.entPDescription.setText(printer.info)
-        self.entPLocation.setText(printer.location)
-        #obsolete self.lblPMakeModel.setText(printer.make_and_model)
-        #obsolete self.lblPState.setText(printer.state_description)
+        self.ui.entPName.setText(printer.name)
+        self.ui.entPDescription.setText(printer.info)
+        self.ui.entPLocation.setText(printer.location)
 
         uri = printer.device_uri
         if uri.startswith("smb://"):
@@ -847,69 +1041,82 @@ class GUI(QWidget):
                 if len (user) or len (password):
                     uri += ellipsis
                 uri += SMBURI (group=group, host=host, share=share).get_uri ()
-                self.entPDevice.setEnabled(False)
+                self.ui.entPDevice.setEnabled(False)
             else:
-                self.entPDevice.setEnabled(True)
-        self.entPDevice.setText(uri)
-        self.changed.discard(self.entPDevice)
+                self.ui.entPDevice.setEnabled(True)
+
+        self.ui.entPDevice.setText(uri)
+        self.changed.discard(self.ui.entPDevice)
 
         # Hide make/model and Device URI for classes
-        for widget in (self.lblPMakeModel2, self.lblPMakeModel,
-                       self.btnChangePPD, self.lblPDevice2,
-                       self.entPDevice, self.btnSelectDevice):
+        for widget in (self.ui.lblPMakeModel2, self.ui.lblPMakeModel,
+                        self.ui.lblPDevice2, self.ui.entPDevice,
+                        self.ui.btnChangePPD):
+                       #, self.btnSelectDevice):
             if printer.is_class:
                 widget.hide()
             else:
                 widget.show()
 
+        ## default printer
+        default = self.cups.getDefault()
+        
+        if printer.name == default:
+            #catch the stateChanged signal to prevent a signal loop
+            self.ui.chkPMakeDefault.blockSignals(True) 
+            self.ui.chkPMakeDefault.setChecked(True) #set checked
+            #unblock the signal
+            self.ui.chkPMakeDefault.blockSignals(False)
+            self.ui.chkPMakeDefault.setText(i18n("This is the default printer"))
+        else:
+            #catch the stateChanged signal to prevent a signal loop
+            self.ui.chkPMakeDefault.blockSignals(True)
+            self.ui.chkPMakeDefault.setChecked(False) #set unchecked
+            #unblock the signal
+            self.ui.chkPMakeDefault.blockSignals(False)
+            if default is not None:
+                self.ui.chkPMakeDefault.setText(i18n('Make Default. (The current default is %1)', default))
+            else:
+                self.ui.chkPMakeDefault.setText(i18n('Make Default. (There is no current default)'))
 
-        # default printer
-        self.btnPMakeDefault.setEnabled(not printer.default)
-        if printer.default:
-            self.lblPDefault.setText(i18n("This is the default printer"))
-        elif self.default_printer:
-            self.lblPDefault.setText(self.default_printer)
-        else:
-            self.lblPDefault.setText(i18n("No default printer set."))
-
-        self.setTestButton (printer)
+        #self.setTestButton (printer)
 
         # Policy tab
         # ----------
 
-        # State
-        self.chkPEnabled.setChecked(printer.enabled)
-        self.chkPAccepting.setChecked(not printer.rejecting)
-        self.chkPShared.setChecked(printer.is_shared)
+        ## State
+        self.ui.chkPEnabled.setChecked(printer.enabled)
+        self.ui.chkPAccepting.setChecked(not printer.rejecting)
+        self.ui.chkPShared.setChecked(printer.is_shared)
         try:
             if printer.is_shared:
                 flag = cups.CUPS_SERVER_SHARE_PRINTERS
                 publishing = int (self.server_settings[flag])
                 if publishing:
-                    self.lblNotPublished.hide()
+                    self.ui.lblNotPublished.hide()
                 else:
-                    self.lblNotPublished.show()
+                    self.ui.lblNotPublished.show()
             else:
-                self.lblNotPublished.hide()
+                self.ui.lblNotPublished.hide()
         except:
-            self.lblNotPublished.hide()
+            self.ui.lblNotPublished.hide()
 
         # Job sheets
-        self.cmbPStartBanner.setEnabled(editable)
-        self.cmbPEndBanner.setEnabled(editable)
+        self.ui.cmbPStartBanner.setEnabled(editable)
+        self.ui.cmbPEndBanner.setEnabled(editable)
 
+#FIXME Not implemented in the current UI
         # Policies
-        self.cmbPErrorPolicy.setEnabled(editable)
-        self.cmbPOperationPolicy.setEnabled(editable)
+        #self.cmbPErrorPolicy.setEnabled(editable)
+        #self.cmbPOperationPolicy.setEnabled(editable)
 
-        """
+        
         # Access control
-        self.rbtnPAllow.set_active(printer.default_allow)
-        self.rbtnPDeny.set_active(not printer.default_allow)
+        self.ui.rbtnPAllow.setChecked(printer.default_allow)
+        self.ui.rbtnPDeny.setChecked(not printer.default_allow)
         self.setPUsers(printer.except_users)
 
-        self.entPUser.set_text("")
-
+        #self.entPUser.set_text("")
         # Server side options (Job options)
         self.server_side_options = {}
         for option in self.job_options_widgets.values ():
@@ -942,20 +1149,18 @@ class GUI(QWidget):
                         option.reinit (value)
 
                     self.server_side_options[option.name] = option
-                except:
+                except ValueError, inst:
                     option_editable = False
-                    self.lblError.set_markup ('<span ' +
+                    text = ('<span ' +
                                               'size="larger">' +
-                                              _("<b>Error</b>") + '</span>\n\n' +
-                                              _("Option '%s' has value '%s' "
-                                                "and cannot be edited.") %
-                                              (option.name, value))
-                    self.ErrorDialog.set_transient_for (self.MainWindow)
-                    self.ErrorDialog.run()
-                    self.ErrorDialog.hide()
-            option.widget.set_sensitive (option_editable)
+                                              i18n("<b>Error</b>") + '</span>\n\n' +
+                                              i18n("Option '%1' has value '%2' "
+                                                   "and cannot be edited.",
+                                                   option.name, value))
+                    QMessageBox.critical(self.ui, i18n("Error"), text)
+            option.widget.setEnabled(option_editable)
             if not editable:
-                option.button.set_sensitive (False)
+                option.button.setEnabled(False)
         self.other_job_options = []
         self.draw_other_job_options (editable=editable)
         for option in self.printer.attributes.keys ():
@@ -967,33 +1172,215 @@ class GUI(QWidget):
             self.add_job_option (option, value=self.printer.attributes[option],
                                  supported=supported, is_new=False,
                                  editable=editable)
-        self.entNewJobOption.set_text ('')
-        self.entNewJobOption.set_sensitive (editable)
-        self.btnNewJobOption.set_sensitive (False)
+        self.ui.entNewJobOption.setText ('')
+        self.ui.entNewJobOption.setEnabled(editable)
+        self.ui.btnNewJobOption.setEnabled(False)
 
         if printer.is_class:
             # remove InstallOptions tab
-            tab_nr = self.ntbkPrinter.page_num(self.swPInstallOptions)
-            if tab_nr != -1:
-                self.ntbkPrinter.remove_page(tab_nr)
+            ##tab_nr = self.ui.ntbkPrinter.page_num(self.swPInstallOptions)
+            ##if tab_nr != -1:
+            ##    self.ui.ntbkPrinter.remove_page(tab_nr)
             self.fillClassMembers(name, editable)
+            pass
         else:
             # real Printer
             self.fillPrinterOptions(name, editablePPD)
 
-        """
-        self.changed = set() # of options
+        #self.changed = set() # of options
         self.updatePrinterProperties ()
         self.setDataButtonState()
 
-    def fillPrinterOptions(self):
-        return #FIXME TODO options tabs
+
+    def fillPrinterOptions(self, name, editable):
+        # remove Member tab
+        tab_nr = self.ui.ntbkPrinter.indexOf(self.memberTabWidget)
+        if tab_nr != -1:
+            self.ui.ntbkPrinter.removeTab(tab_nr)
+        policiesTabNo = self.ui.ntbkPrinter.indexOf(self.policiesTabWidget)
+        self.ui.ntbkPrinter.insertTab(policiesTabNo+1, self.optionsTabWidget, i18n("Options"))
+
+        """
+        # clean Installable Options Tab
+        for widget in self.vbPInstallOptions.get_children():
+            self.vbPInstallOptions.remove(widget)
+
+        """
+        # clean Options Tab
+        for widget in self.ui.optionsPageWidget.children():
+            if isinstance(widget, QWidget):
+                self.ui.vbPOptions.removeWidget(widget)
+                widget.hide()
+            del widget
+        """
+
+        # insert Options Tab
+        if self.ntbkPrinter.page_num(self.swPOptions) == -1:
+            self.ntbkPrinter.insert_page(
+                self.swPOptions, self.lblPOptions, self.static_tabs)
+
+        if not self.ppd:
+            tab_nr = self.ntbkPrinter.page_num(self.swPInstallOptions)
+            if tab_nr != -1:
+                self.ntbkPrinter.remove_page(tab_nr)
+            tab_nr = self.ntbkPrinter.page_num(self.swPOptions)
+            if tab_nr != -1:
+                self.ntbkPrinter.remove_page(tab_nr)           
+            return
+        """
+        ppd = self.ppd
+        ppd.markDefaults()
+
+        hasInstallableOptions = False
+        
+        # build option tabs
+        for group in ppd.optionGroups:
+            if group.name == "InstallableOptions":
+                """
+                hasInstallableOptions = True
+                container = self.vbPInstallOptions
+                tab_nr = self.ntbkPrinter.page_num(self.swPInstallOptions)
+                if tab_nr == -1:
+                    self.ntbkPrinter.insert_page(
+                        self.swPInstallOptions, gtk.Label(group.text),
+                        self.static_tabs)
+                """
+                tab_label = self.ui.lblPInstallOptions
+            else:
+                """
+                frame = gtk.Frame("<b>%s</b>" % group.text)
+                frame.get_label_widget().set_use_markup(True)
+                frame.set_shadow_type (gtk.SHADOW_NONE)
+                self.vbPOptions.pack_start (frame, False, False, 0)
+                container = gtk.Alignment (0.5, 0.5, 1.0, 1.0)
+                # We want a left padding of 12, but there is a Table with
+                # spacing 6, and the left-most column of it (the conflict
+                # icon) is normally hidden, so just use 6 here.
+                container.set_padding (6, 12, 6, 0)
+                frame.add (container)
+                """
+                tab_label = self.ui.lblPOptions
+            container = QGroupBox(self)
+            self.ui.vbPOptions.addWidget(container)
+            container.setTitle(group.text)
+            """
+            
+            table = gtk.Table(1, 3, False)
+            table.set_col_spacings(6)
+            table.set_row_spacings(6)
+            container.add(table)
+            """
+            table = QGridLayout(container)
+            container.setLayout(table)
+
+            rows = 0
+
+            # InputSlot and ManualFeed need special handling.  With
+            # libcups, if ManualFeed is True, InputSlot gets unset.
+            # Likewise, if InputSlot is set, ManualFeed becomes False.
+            # We handle it by toggling the sensitivity of InputSlot
+            # based on ManualFeed.
+            self.option_inputslot = self.option_manualfeed = None
+
+            for nr, option in enumerate(group.options):
+                if option.keyword == "PageRegion":
+                    continue
+                rows += 1
+                """
+                table.resize (rows, 3)
+                """
+                o = OptionWidget(option, ppd, self, tab_label=tab_label)
+                """
+                table.attach(o.conflictIcon, 0, 1, nr, nr+1, 0, 0, 0, 0)
+
+                hbox = gtk.HBox()
+                """
+                if o.label:
+                    table.addWidget(o.label, rows-1, 0)
+                """
+                    a = gtk.Alignment (0.5, 0.5, 1.0, 1.0)
+                    a.set_padding (0, 0, 0, 6)
+                    a.add (o.label)
+                    table.attach(a, 1, 2, nr, nr+1, gtk.FILL, 0, 0, 0)
+                    table.attach(hbox, 2, 3, nr, nr+1, gtk.FILL, 0, 0, 0)
+                else:
+                    table.attach(hbox, 1, 3, nr, nr+1, gtk.FILL, 0, 0, 0)
+                hbox.pack_start(o.selector, False)
+                """
+                table.addWidget(o.selector, rows-1, 1)
+                self.options[option.keyword] = o
+                o.selector.setEnabled(editable)
+                if option.keyword == "InputSlot":
+                    self.option_inputslot = o
+                elif option.keyword == "ManualFeed":
+                    self.option_manualfeed = o
+
+        """
+        # remove Installable Options tab if not needed
+        if not hasInstallableOptions:
+            tab_nr = self.ntbkPrinter.page_num(self.swPInstallOptions)
+            if tab_nr != -1:
+                self.ntbkPrinter.remove_page(tab_nr)
+
+        # check for conflicts
+        for option in self.options.itervalues():
+            conflicts = option.checkConflicts()
+            if conflicts:
+                self.conflicts.add(option)
+
+        self.swPInstallOptions.show_all()
+        self.swPOptions.show_all()
+        """
+
+
+    # Class members
+    
+    def fillClassMembers(self, name, editable):
+        printer = self.printers[name]
+
+        self.ui.btnClassAddMember.setEnabled(editable)
+        self.ui.btnClassDelMember.setEnabled(editable)
+
+        # remove Options tab
+        tab_nr = self.ui.ntbkPrinter.indexOf(self.optionsTabWidget)
+        if tab_nr != -1:
+            self.ui.ntbkPrinter.removeTab(tab_nr)
+        policiesTabNo = self.ui.ntbkPrinter.indexOf(self.policiesTabWidget)
+        self.ui.ntbkPrinter.insertTab(policiesTabNo+1, self.memberTabWidget, i18n("Members"))
+
+        self.ui.tvClassMembers.clear()
+        self.ui.tvClassNotMembers.clear()
+        names = self.printers.keys()
+        names.sort()
+        for name in names:
+            p = self.printers[name]
+            if p is not printer:
+                if name in printer.class_members:
+                    self.ui.tvClassMembers.addItem(name)
+                else:
+                    self.ui.tvClassNotMembers.addItem(name)
+
+    def on_btnClassAddMember_clicked(self):
+        self.moveClassMembers(self.ui.tvClassNotMembers,
+                              self.ui.tvClassMembers)
+        if self.getCurrentClassMembers(self.ui.tvClassMembers) != self.printer.class_members:
+            self.changed.add(self.ui.tvClassMembers)
+        else:
+            self.changed.discard(self.ui.tvClassMembers)
+        self.setDataButtonState()
+
+    def on_btnClassDelMember_clicked(self):
+        self.moveClassMembers(self.ui.tvClassMembers,
+                              self.ui.tvClassNotMembers)
+        if self.getCurrentClassMembers(self.ui.tvClassMembers) != self.printer.class_members:
+            self.changed.add(self.ui.tvClassMembers)
+        else:
+            self.changed.discard(self.ui.tvClassMembers)
+        self.setDataButtonState()
 
     #In Gnome is now on_delete_activate(self, UNUSED):
-    @pyqtSignature("")
-    def on_btnDelete_clicked(self):
+    def btnDelete_clicked(self):
         name, type = self.getSelectedItem()
-        print name
 
         # Confirm
         if type == "Printer":
@@ -1001,31 +1388,58 @@ class GUI(QWidget):
         else:
             message_format = i18n("Really delete class %s?")
 
-	cancel = QMessageBox.question(self,"",
-                unicode(message_format) % name,
-                i18n("&Yes"), i18n("&No"),
-                QString(), 0, 1)
+        answer = KMessageBox.questionYesNo(self,
+                    unicode(message_format) % name,
+                    "")
 
-        if cancel:
+        if answer == KMessageBox.Yes:
+            try:
+                self.cups.deletePrinter(name)
+            except cups.IPPError, (e, msg):
+                self.show_IPP_Error(e, msg)
+        elif answer == KMessageBox.No:
             return
-        try:
-            self.cups.deletePrinter(name)
-        except cups.IPPError, (e, msg):
-            self.show_IPP_Error(e, msg)
 
         self.changed = set()
         self.populateList()
-        self.mainlist.setCurrentItem(self.mainlist.itemAt(0,0))
+        self.ui.mainlist.setCurrentItem(self.ui.mainlist.itemAt(0,0))
 
-    #in Gnome side is now  set_default_printer (self, name):
-    @pyqtSignature("")
-    def on_btnPMakeDefault_clicked(self):
+    #Taken from the gnome version
+    def setDefaultPrinter(self, name):
+        printer = self.printers[name]
         try:
-            self.cups.setDefault(self.printer.name)
+            printer.setAsDefault()
+        except cups.HTTPError, (s,):
+            self.show_HTTP_Error(s)
+            return
+        except cups.IPPError(e, msg):
+            show_IPP_Error(e, msg)
+            return
+
+    def chkPMakeDefault_stateChanged(self):
+        default = self.cups.getDefault()
+        try:
+            if self.ui.chkPMakeDefault.isChecked():
+                name = self.ui.entPName.text()
+                self.setDefaultPrinter(unicode(name))
+                self.ui.chkPMakeDefault.setText(i18n("This is the default printer"))
+            else:
+                if default is not None:
+                    self.ui.chkPMakeDefault.setText(i18n('Make Default. (The current default is %1)', default))
+                else:
+                    self.ui.chkPMakeDefault.setText(i18n('Make Default. (There is no current default)'))
+
+            self.ui.changed(len(self.changed) > 0)
+            #self.ui.btnPrinterPropertiesApply.setEnabled(len (self.changed) > 0)
+            #self.ui.btnRevert.setEnabled(len (self.changed) > 0)
+            
         except cups.IPPError, (e, msg):
             self.show_IPP_Error(e, msg)
             return
 
+##############################
+        #Obsolete? Possibly no longer necessary. Not included in 
+        #current gnome version
         # Also need to check system-wide lpoptions because that's how
         # previous Fedora versions set the default (bug #217395).
         (tmpfd, tmpfname) = tempfile.mkstemp ()
@@ -1064,10 +1478,9 @@ class GUI(QWidget):
                     self.cups.putFile (resource, tmpfname)
                 except cups.HTTPError, (s,):
                     os.remove (tmpfname)
-                    print s
                     self.show_HTTP_Error(s)
                     return
-
+#########################
                 # Now reconnect because the server needs to reload.
                 self.reconnect ()
 
@@ -1084,6 +1497,204 @@ class GUI(QWidget):
             self.populateList()
             self.show_HTTP_Error(s)
 
+    def option_changed(self, option):
+        if option.is_changed():
+            self.changed.add(option)
+        else:
+            self.changed.discard(option)
+
+        if option.conflicts:
+            self.conflicts.add(option)
+        else:
+            self.conflicts.discard(option)
+        self.setDataButtonState()
+
+        if (self.option_manualfeed and self.option_inputslot and
+            option == self.option_manualfeed):
+            if option.get_current_value() == "True":
+                self.option_inputslot.disable ()
+            else:
+                self.option_inputslot.enable ()
+
+    # Access control
+    def getPUsers(self):
+        """return list of usernames from the GUI"""
+        result = [] #empty list to hold result
+        #if there is only one user in the list
+        if self.ui.tvPUsers.topLevelItemCount() < 2:
+            item = self.ui.tvPUsers.itemAt(0, 0)
+            #use a string instead of a QString.
+            #system-config-printer fails in 
+            #self.connection.setPrinterUsersDenied(self.name, except_users)
+            #if we use a QString
+            if item is not None:
+                name = str(item.text(0))
+                result.append(name)
+        else:
+            #create an iterator for the QTreeWidgetObject
+            #had to create an iterator class manually because QTreeWidgetItemIterator
+            #is broken
+            it = Iter(self.ui.tvPUsers)    
+            while it: #iterate over the tree
+                try:
+                    item = it.next()
+                    name = item.text(0)
+                    result.append(name)
+                except StopIteration:
+                    break
+                    
+        result.sort()
+        return result
+
+    def setPUsers(self, users):
+        """write list of usernames into the GUI"""
+        self.ui.tvPUsers.clear()
+        for user in users:
+            #create a QTreeWidgetItem
+            u = QTreeWidgetItem(self.ui.tvPUsers)
+            u.setText(0, user) #set the label for the item
+            #add the item to the top level of the tree
+            self.ui.tvPUsers.addTopLevelItem(u)
+
+    def checkPUsersChanged(self):
+        """check if users in GUI and printer are different
+        and set self.changed"""
+        if self.getPUsers() != self.printer.except_users:
+            self.changed.add(self.ui.tvPUsers)
+        else:
+            self.changed.discard(self.ui.tvPUsers)
+
+        self.setDataButtonState()
+
+    def btnPAddUser_clicked(self):
+        current_user = os.getenv('USER')
+        user, ok = KInputDialog.getText(i18n('Add User'), i18n('Enter Username'), current_user)
+        type(user)
+        
+        if ok and not user.isEmpty():
+            u = QTreeWidgetItem(self.ui.tvPUsers)
+            u.setText(0, user)
+            self.ui.tvPUsers.addTopLevelItem(u)
+        
+        self.checkPUsersChanged()
+
+    def btnPDelUser_clicked(self):
+        users = self.ui.tvPUsers.selectedItems()
+        for u in users:
+            index = self.ui.tvPUsers.indexOfTopLevelItem(u)
+            self.ui.tvPUsers.takeTopLevelItem(index)
+    
+        self.checkPUsersChanged()
+
+    # Server side options
+    def on_job_option_reset(self):
+        button = self.sender()
+        option = self.job_options_buttons[button]
+        option.reset ()
+        # Remember to set this option for removal in the IPP request.
+        if self.server_side_options.has_key (option.name):
+            del self.server_side_options[option.name]
+        if option.is_changed ():
+            self.changed.add(option)
+        else:
+            self.changed.discard(option)
+        self.setDataButtonState()
+
+    def on_job_option_changed(self):
+        if not self.printer:
+            return
+        widget = self.sender()
+        option = self.job_options_widgets[widget]
+        option.changed ()
+        if option.is_changed ():
+            self.server_side_options[option.name] = option
+            self.changed.add(option)
+        else:
+            if self.server_side_options.has_key (option.name):
+                del self.server_side_options[option.name]
+            self.changed.discard(option)
+        self.setDataButtonState()
+        # Don't set the reset button insensitive if the option hasn't
+        # changed from the original value: it's still meaningful to
+        # reset the option to the system default.
+
+    def draw_other_job_options (self, editable=True):
+        n = len (self.other_job_options)
+        #if n == 0:
+        #    self.tblJOOther.hide_all ()
+        #    return
+
+        #self.tblJOOther.resize (n, 3)
+        children = self.ui.tblJOOtherWidget.children()
+        for child in children:
+            if type(child) != QGridLayout:
+                self.ui.tblJOOther.removeWidget(child)
+                child.hide()
+        i = 0
+        self.removeJobOptionButtons = {}
+        for opt in self.other_job_options:
+            self.ui.tblJOOther.addWidget(opt.label, i, 0)
+            self.ui.tblJOOther.addWidget(opt.selector, i, 1)
+            opt.label.show()
+            opt.selector.show()
+            opt.selector.setEnabled(editable)
+
+            btn = QPushButton("Remove", self.ui.tblJOOtherWidget)
+            self.connect(btn, SIGNAL("clicked()"), self.on_btnJOOtherRemove_clicked)
+            #btn.set_data("pyobject", opt)
+            self.removeJobOptionButtons[btn] = opt
+            btn.setEnabled(editable)
+            self.ui.tblJOOther.addWidget(btn, i, 2)
+            i += 1
+
+        #self.tblJOOther.show_all ()
+
+    def add_job_option(self, name, value = "", supported = "", is_new=True,
+                       editable=True):
+        option = options.OptionWidget(name, value, supported,
+                                      self.option_changed)
+        option.is_new = is_new
+        self.other_job_options.append (option)
+        self.draw_other_job_options (editable=editable)
+        self.server_side_options[name] = option
+        if name in self.changed: # was deleted before
+            option.is_new = False
+        self.changed.add(option)
+        self.setDataButtonState()
+        if is_new:
+            ##option.selector.grab_focus ()
+            pass #FIXME
+
+    def on_btnJOOtherRemove_clicked(self):
+        button = self.sender()
+        option = self.removeJobOptionButtons[button]
+        #option = button.get_data("pyobject")
+        self.other_job_options.remove (option)
+        self.draw_other_job_options ()
+        if option.is_new:
+            self.changed.discard(option)
+        else:
+            # keep name as reminder that option got deleted
+            self.changed.add(option.name)
+        del self.server_side_options[option.name]
+        self.setDataButtonState()
+
+    def on_btnNewJobOption_clicked(self):
+        name = self.ui.entNewJobOption.text()
+        self.add_job_option(name)
+        #self.tblJOOther.show_all()
+        self.ui.entNewJobOption.setText('')
+        self.ui.btnNewJobOption.setEnabled(False)
+        self.setDataButtonState()
+
+    def on_entNewJobOption_changed(self, widget):
+        text = unicode(self.ui.entNewJobOption.text())
+        active = (len(text) > 0) and text not in self.server_side_options
+        self.ui.btnNewJobOption.setEnabled(active)
+
+    def on_entNewJobOption_activate(self, widget):
+        self.on_btnNewJobOption_clicked (widget) # wrong widget but ok
+
     ##########################################################################
     ### Server settings
     ##########################################################################
@@ -1095,17 +1706,17 @@ class GUI(QWidget):
         except cups.IPPError, (e, m):
             #FIXME
             self.show_IPP_Error(e, m)
-            self.tvMainList.get_selection().unselect_all()
-            self.on_tvMainList_cursor_changed(self.tvMainList)
+            self.ui.tvMainList.get_selection().unselect_all()
+            self.on_tvMainList_cursor_changed(self.ui.tvMainList)
             return
 
         for widget, setting in [
-            (self.chkServerBrowse, cups.CUPS_SERVER_REMOTE_PRINTERS),
-            (self.chkServerShare, cups.CUPS_SERVER_SHARE_PRINTERS),
-            (self.chkServerShareAny, try_CUPS_SERVER_REMOTE_ANY),
-            (self.chkServerRemoteAdmin, cups.CUPS_SERVER_REMOTE_ADMIN),
-            (self.chkServerAllowCancelAll, cups.CUPS_SERVER_USER_CANCEL_ANY),
-            (self.chkServerLogDebug, cups.CUPS_SERVER_DEBUG_LOGGING),]:
+            (self.ui.chkServerBrowse, cups.CUPS_SERVER_REMOTE_PRINTERS),
+            (self.ui.chkServerShare, cups.CUPS_SERVER_SHARE_PRINTERS),
+            (self.ui.chkServerShareAny, try_CUPS_SERVER_REMOTE_ANY),
+            (self.ui.chkServerRemoteAdmin, cups.CUPS_SERVER_REMOTE_ADMIN),
+            (self.ui.chkServerAllowCancelAll, cups.CUPS_SERVER_USER_CANCEL_ANY),
+            (self.ui.chkServerLogDebug, cups.CUPS_SERVER_DEBUG_LOGGING),]:
             # widget.set_data("setting", setting)
             self.widget_data_setting[widget] = setting
             self.disconnect(widget, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
@@ -1118,15 +1729,12 @@ class GUI(QWidget):
             self.connect(widget, SIGNAL("stateChanged(int)"), self.on_server_widget_changed)
         self.setDataButtonState()
         # Set sensitivity of 'Allow printing from the Internet'.
-        self.on_server_changed (self.chkServerShare) # (any will do here)
+        self.on_server_changed (self.ui.chkServerShare) # (any will do here)
 
     def on_server_widget_changed(self, value):
         self.on_server_changed(self.sender())
 
     def on_server_changed(self, widget):
-        #setting = widget.get_data("setting")
-        #print "widget_data_setting " + str(self.widget_data_setting)
-        #print "widget " + str(widget)
         setting = self.widget_data_setting[widget]
         if self.server_settings.has_key (setting):
             if str(int(widget.isChecked())) == self.server_settings[setting]:
@@ -1134,8 +1742,8 @@ class GUI(QWidget):
             else:
                 self.changed.add(widget)
 
-        sharing = self.chkServerShare.isChecked ()
-        self.chkServerShareAny.setEnabled (
+        sharing = self.ui.chkServerShare.isChecked ()
+        self.ui.chkServerShareAny.setEnabled (
             sharing and self.server_settings.has_key(try_CUPS_SERVER_REMOTE_ANY))
 
         self.setDataButtonState()
@@ -1143,12 +1751,12 @@ class GUI(QWidget):
     def save_serversettings(self):
         setting_dict = self.server_settings.copy()
         for widget, setting in [
-            (self.chkServerBrowse, cups.CUPS_SERVER_REMOTE_PRINTERS),
-            (self.chkServerShare, cups.CUPS_SERVER_SHARE_PRINTERS),
-            (self.chkServerShareAny, try_CUPS_SERVER_REMOTE_ANY),
-            (self.chkServerRemoteAdmin, cups.CUPS_SERVER_REMOTE_ADMIN),
-            (self.chkServerAllowCancelAll, cups.CUPS_SERVER_USER_CANCEL_ANY),
-            (self.chkServerLogDebug, cups.CUPS_SERVER_DEBUG_LOGGING),]:
+            (self.ui.chkServerBrowse, cups.CUPS_SERVER_REMOTE_PRINTERS),
+            (self.ui.chkServerShare, cups.CUPS_SERVER_SHARE_PRINTERS),
+            (self.ui.chkServerShareAny, try_CUPS_SERVER_REMOTE_ANY),
+            (self.ui.chkServerRemoteAdmin, cups.CUPS_SERVER_REMOTE_ADMIN),
+            (self.ui.chkServerAllowCancelAll, cups.CUPS_SERVER_USER_CANCEL_ANY),
+            (self.ui.chkServerLogDebug, cups.CUPS_SERVER_DEBUG_LOGGING),]:
             if not self.server_settings.has_key(setting): continue
             setting_dict[setting] = str(int(widget.isChecked()))
         try:
@@ -1179,13 +1787,15 @@ class GUI(QWidget):
 
     # new printer
     def on_new_printer_activate(self):
-        self.busy()
+        self.ui.setCursor(Qt.WaitCursor)
         self.newPrinterGUI.init("printer")
-        self.ready()
+        self.ui.setCursor(Qt.ArrowCursor)
 
     # new class
     def on_new_class_activate(self):
+        self.ui.setCursor(Qt.WaitCursor)
         self.newPrinterGUI.init("class")
+        self.ui.setCursor(Qt.ArrowCursor)
 
     @pyqtSignature("")
     def on_btnSelectDevice_clicked(self):
@@ -1193,9 +1803,9 @@ class GUI(QWidget):
 
     @pyqtSignature("")
     def on_btnChangePPD_clicked(self):
-        self.busy(self)
+        self.ui.setCursor(Qt.WaitCursor)
         self.newPrinterGUI.init("ppd")
-        self.ready(self)
+        self.ui.setCursor(Qt.ArrowCursor)
 
     def checkNPName(self, name):
         if not name: return False
@@ -1237,17 +1847,19 @@ class GUI(QWidget):
 
     def show_IPP_Error(self, exception, message):
         if exception == cups.IPP_NOT_AUTHORIZED:
-            QMessageBox.critical(self, i18n('Not authorized'), i18n('The password may be incorrect.'))
+            KMessageBox.error(self, i18n('The password may be incorrect.'), i18n('Not authorized'))
         else:
-            QMessageBox.critical(self, i18n('CUPS server error'), i18n("There was an error during the CUPS "\
-                                                              "operation: '%1'.", message))
+            KMessageBox.error(self, i18n("There was an error during the CUPS " "operation: '%1'.", message),
+                                    i18n('CUPS server error'))
+
     def show_HTTP_Error(self, status):
         if (status == cups.HTTP_UNAUTHORIZED or
             status == cups.HTTP_FORBIDDEN):
-            QMessageBox.critical(self, i18n('Not authorized'), 
-                                 i18n('The password may be incorrect, or the '
+            
+            KMessageBox.error(self,i18n('The password may be incorrect, or the '
                                    'server may be configured to deny '
-                                   'remote administration.'))
+                                   'remote administration.'),
+                                   i18n('Not authorized') )
         else:
             if status == cups.HTTP_BAD_REQUEST:
                 msg = i18nc("HTTP error", "Bad request")
@@ -1264,10 +1876,10 @@ class GUI(QWidget):
             else:
                 msg = i18nc("HTTP error", "status %1", status)
 
-        QMessageBox.critical(self, i18n('CUPS server error'), i18n("There was an HTTP error: %1.", msg))
+        KMessageBox.error(self, i18n("There was an HTTP error: %1.", msg), i18n('CUPS server error'))
 
     def getSelectedItem(self):
-        return str(self.mainListSelectedName).decode ('utf-8'), str(self.mainListSelectedType)
+        return unicode(self.mainListSelectedName), unicode(self.mainListSelectedType)
         """
         items = self.mainlist.selectedItems()
         if len(items) < 1:
@@ -1309,49 +1921,51 @@ class GUI(QWidget):
     def updatePrinterProperties(self):
         debugprint ("update printer properties")
         printer = self.printer
-        self.lblPMakeModel.setText(printer.make_and_model)
-        state = self.printer_states.get (printer.state, i18nc("Printer state", "Unknown"))
-	reason = printer.other_attributes.get ('printer-state-message', '')
-	if len (reason) > 0:
-	    state += ' - ' + reason
-        self.lblPState.setText(state)
+        self.ui.lblPMakeModel.setText(printer.make_and_model)
+        state = self.printer_states.get (printer.state, i18nc("Printer state", "Unknown"))[:]
+        reason = printer.other_attributes.get ('printer-state-message', '')
+        if len (reason) > 0:
+            state += ' - ' + reason
+        self.ui.lblPState.setText(state)
         if len (self.changed) == 0:
             debugprint ("no changes yet: full printer properties update")
+
             # State
-            self.chkPEnabled.setEnabled(printer.enabled)
-            self.chkPAccepting.setEnabled(not printer.rejecting)
-            self.chkPShared.setEnabled(printer.is_shared)
+            self.ui.chkPEnabled.setEnabled(printer.enabled)
+            self.ui.chkPAccepting.setEnabled(not printer.rejecting)
+            self.ui.chkPShared.setEnabled(printer.is_shared)
 
             # Job sheets
-            self.fillComboBox(self.cmbPStartBanner,
+            self.fillComboBox(self.ui.cmbPStartBanner,
                               printer.job_sheets_supported,
                               printer.job_sheet_start),
-            self.fillComboBox(self.cmbPEndBanner, printer.job_sheets_supported,
+            self.fillComboBox(self.ui.cmbPEndBanner, printer.job_sheets_supported,
                               printer.job_sheet_end)
 
+#FIXME Not implemented in current UI
             # Policies
-            self.fillComboBox(self.cmbPErrorPolicy,
-                              printer.error_policy_supported,
-                              printer.error_policy)
-            self.fillComboBox(self.cmbPOperationPolicy,
-                              printer.op_policy_supported,
-                              printer.op_policy)
+            #self.fillComboBox(self.cmbPErrorPolicy,
+                              #printer.error_policy_supported,
+                              #printer.error_policy)
+            #self.fillComboBox(self.cmbPOperationPolicy,
+                              #printer.op_policy_supported,
+                              #printer.op_policy)
 
-            """
+            
             # Access control
-            self.rbtnPAllow.set_active(printer.default_allow)
-            self.rbtnPDeny.set_active(not printer.default_allow)
+            self.ui.rbtnPAllow.setChecked(printer.default_allow)
+            self.ui.rbtnPDeny.setChecked(not printer.default_allow)
             self.setPUsers(printer.except_users)
-            """
+            
 
     def setTestButton (self, printer):
         if printer.testsQueued ():
             self.test_button_cancels = True
-            self.btnPrintTestPage.setText(i18n('Cancel Tests'))
-            self.btnPrintTestPage.setEnabled(True)
+            self.ui.btnPrintTestPage.setText(i18n('Cancel Tests'))
+            self.ui.btnPrintTestPage.setEnabled(True)
         else:
             self.test_button_cancels = False
-            self.btnPrintTestPage.setText(i18n('Print Test Page'))
+            self.ui.btnPrintTestPage.setText(i18n('Print Test Page'))
             self.setDataButtonState()
 
     def getCurrentClassMembers(self, listwidget):
@@ -1368,8 +1982,6 @@ class GUI(QWidget):
             treeview_from.takeItem(treeview_from.row(row))
             treeview_to.addItem(row)
 
-    # Password handling
-
     #FIXME obsolete?
     def cupsPasswdCallback(self, querystring):
         return "" #FIXME
@@ -1378,7 +1990,7 @@ class GUI(QWidget):
             if waiting:
                 self.WaitWindow.hide ()
             self.lblPasswordPrompt.set_label (self.prompt_primary +
-                                              querystring)
+                                            querystring)
             self.PasswordDialog.set_transient_for (self.MainWindow)
             self.entPasswd.grab_focus ()
 
@@ -1397,6 +2009,7 @@ class GUI(QWidget):
             self.passwd_retry = True
         return self.password
 
+
 class NewPrinterGUI(QDialog):
 
     new_printer_device_tabs = {
@@ -1433,14 +2046,15 @@ class NewPrinterGUI(QDialog):
         self.WaitWindow = QMessageBox(self.mainapp)
         self.WaitWindow.setStandardButtons(QMessageBox.NoButton)
 
-        if os.path.exists("system-config-printer.ui"):
-            APPDIR = QDir.currentPath()
-        else:
-            file = KStandardDirs.locate("appdata", "system-config-printer.ui")
-            APPDIR = file.left(file.lastIndexOf("/"))
-
         uic.loadUi(APPDIR + "/" + "new-printer.ui", self)
 
+        self.btnNPBack.setIcon(KIcon("go-previous"))
+        self.btnNPForward.setIcon(KIcon("go-next"))
+        self.btnNPCancel.setIcon(KIcon("dialog-cancel"))
+        self.btnNPApply.setIcon(KIcon("dialog-ok"))
+        self.btnNCAddMember.setIcon(KIcon("arrow-left"))
+        self.btnNCDelMember.setIcon(KIcon("arrow-right"))
+
         self.connect(self.tvNPDevices, SIGNAL("itemSelectionChanged()"), self.on_tvNPDevices_cursor_changed)
         self.connect(self.tvNPMakes, SIGNAL("itemSelectionChanged()"), self.on_tvNPMakes_cursor_changed)
         self.connect(self.tvNPModels, SIGNAL("itemSelectionChanged()"), self.on_tvNPModels_cursor_changed)
@@ -1453,12 +2067,12 @@ class NewPrinterGUI(QDialog):
         self.connect(self.rbtnSMBAuthSet, SIGNAL("toggled(bool)"), self.on_rbtnSMBAuthSet_toggled)
         self.rbtnNPFoomatic.setChecked(True)
         self.connect(self.rbtnNPFoomatic, SIGNAL("toggled(bool)"), self.on_rbtnNPFoomatic_toggled)
-	self.connect(self.filechooserPPDButton, SIGNAL("clicked()"),self.on_filechooserPPDButton)
+        self.connect(self.filechooserPPDButton, SIGNAL("clicked()"),self.on_filechooserPPDButton)
         self.options = {} # keyword -> Option object
         self.changed = set()
         self.conflicts = set()
         self.ppd = None
-
+        
         # Synchronisation objects.
         self.ppds_lock = thread.allocate_lock()
         self.devices_lock = thread.allocate_lock()
@@ -1469,18 +2083,9 @@ class NewPrinterGUI(QDialog):
         #self.connect(self.btnNCAddMember, SIGNAL("clicked()"), self.slot_btnNCAddMember_clicked)
         #self.connect(self.btnNCDelMember, SIGNAL("clicked()"), self.slot_btnNCDelMember_clicked)
 
-        """
-        # share with mainapp
-        self.WaitWindow = mainapp.WaitWindow
-        self.lblWait = mainapp.lblWait
-        self.busy = mainapp.busy
-        self.ready = mainapp.ready
-        self.show_IPP_Error = mainapp.show_IPP_Error
-        self.show_HTTP_Error = mainapp.show_HTTP_Error
-        """
-
         # Optionally disable downloadable driver support.
-        if not config.DOWNLOADABLE_DRIVER_SUPPORT:
+        #if not config.DOWNLOADABLE_DRIVER_SUPPORT:
+        if True:
             self.rbtnNPDownloadableDriverSearch.setEnabled(False)
             self.downloadableDriverSearchFrame.hide()
 
@@ -1557,8 +2162,6 @@ class NewPrinterGUI(QDialog):
         #FIXME hide bits which are not yet implemented
         self.btnSMBBrowse.hide()
         self.btnSMBVerify.hide()
-        self.btnIPPFindQueue.hide()
-        self.btnIPPVerify.hide()
         self.btnNPTLpdProbe.hide()
 
     def option_changed(self, option):
@@ -1603,7 +2206,6 @@ class NewPrinterGUI(QDialog):
             # Start fetching information from CUPS in the background
             self.new_printer_PPDs_loaded = False
             self.queryPPDs ()
-
         elif self.dialog_mode == "class":
             self.setWindowTitle(i18n("New Class"))
             self.fillNewClassMembers()
@@ -1681,8 +2283,8 @@ class NewPrinterGUI(QDialog):
             debugprint ("queryPPDs: in progress")
             return
         debugprint ("Lock acquired for PPDs thread")
-        # Start new thread
-        thread.start_new_thread (self.getPPDs_thread, (self.language[0],))
+
+        self.getPPDs_thread(self.language[0])
         debugprint ("PPDs thread started")
 
     def getPPDs_thread(self, language):
@@ -1722,7 +2324,7 @@ class NewPrinterGUI(QDialog):
                                          i18n('Searching for drivers'))
                 self.WaitWindow.show ()
 
-            QApplication.processEvents()
+            KApplication.processEvents()
 
             time.sleep (0.1)
 
@@ -1778,13 +2380,13 @@ class NewPrinterGUI(QDialog):
         self.nextNPTab()
 
     def nextNPTab(self, step=1):
+        self.setCursor(Qt.WaitCursor)
         page_nr = self.ntbkNewPrinter.currentIndex()
 
         if self.dialog_mode == "class":
             #order = [0, 4, 5]
             order = [self.ntbkNewPrinterPages["name"], self.ntbkNewPrinterPages["class-members"]]
         elif self.dialog_mode == "printer":
-            #self.busy(self)
             if page_nr == 1: # Device (first page)
                 # Choose an appropriate name.
                 name = 'printer'
@@ -1804,22 +2406,22 @@ class NewPrinterGUI(QDialog):
                         faxuri = self.get_hplip_uri_for_network_printer(host,
                                                                         "fax")
                     if faxuri:
-                        ##FIXME
-                        dialog = gtk.Dialog(self.device.info,
-                                            self.NewPrinterWindow,
-                                            gtk.DIALOG_MODAL |
-                                            gtk.DIALOG_DESTROY_WITH_PARENT,
-                                            (i18n("Printer"), 1,
-                                             i18n("Fax"), 2))
-                        label = gtk.Label(i18n("This printer supports both "
+                        #create message string
+                        q = i18n("This printer supports both "
                                             "printing and sending faxes.  "
                                             "Which functionality should be "
-                                            "used for this queue?"))
-                        dialog.vbox.pack_start(label, True, True, 0)
-                        label.show()
-                        queue_type = dialog.run()
-                        dialog.destroy()
-                        if (queue_type == 2):
+                                            "used for this queue?")
+                        
+                        #buttons need to be KGuiItem objects
+                        printer_button = KGuiItem(i18n("Printer"))
+                        fax_button = KGuiItem(i18n("Fax"))
+
+                        #This is a bit hackish. Essentially Printer is mapped to the Yes button, Fax to
+                        #the No button. KMessageBox doesn't seem to provide a version for 'This OR That'
+                        queue_type = KMessageBox.questionYesNo(self.NewPrinterWindow, q , 'Choose function', printer_button, fax_button)
+
+                        #test return value of messagebox Printer == 3, Fax == 4
+                        if (queue_type == 3): 
                             self.device.id_dict = \
                                self.get_hpfax_device_id(faxuri)
                             self.device.uri = faxuri
@@ -2000,13 +2602,11 @@ class NewPrinterGUI(QDialog):
                                          i18n('Searching for drivers'))
                 self.WaitWindow.set_transient_for (self.NewPrinterWindow)
                 self.WaitWindow.show ()
-                self.busy(self)
 
                 # Keep the UI refreshed while we wait for the drivers
                 # query to complete.
                 while self.drivers_lock.locked ():
-                    while gtk.events_pending ():
-                        gtk.main_iteration ()
+                    self.mainapp.busy(self)
                     time.sleep (0.1)
 
                 self.ready (self.NewPrinterWindow)
@@ -2017,6 +2617,7 @@ class NewPrinterGUI(QDialog):
         self.ntbkNewPrinter.setCurrentIndex(next_page_nr)
 
         self.setNPButtons()
+        self.setCursor(Qt.ArrowCursor)
 
     def setNPButtons(self):
         nr = self.ntbkNewPrinter.currentIndex()
@@ -2104,7 +2705,7 @@ class NewPrinterGUI(QDialog):
                 self.rbtnNPFoomatic.isChecked() or
                 not self.filechooserPPD.text().isEmpty() or
                 downloadable_selected))
-	
+        
         if nr == 3: # Model/Driver
             iter = self.tvNPDrivers.currentItem()
             self.btnNPForward.setEnabled(bool(iter))
@@ -2123,12 +2724,11 @@ class NewPrinterGUI(QDialog):
             self.btnNPForward.set_sensitive(accepted)
     
     def on_filechooserPPDButton(self):
-	home = QDir.homePath()
-	fd = QFileDialog()
-	fd.setFileMode(fd.ExistingFile)
-	filename = fd.getOpenFileName(self, 'Open PPD file', home)
-	self.filechooserPPD.setText(filename)
-	self.btnNPForward.setEnabled(True)
+        home = QDir.homePath()
+        url = KUrl.fromPath(home)
+        filename = KFileDialog.getOpenFileName(url, '*.ppd', self)
+        self.filechooserPPD.setText(filename)
+        self.btnNPForward.setEnabled(True)
 
     def getDevices_thread(self):
         try:
@@ -2156,15 +2756,14 @@ class NewPrinterGUI(QDialog):
         debugprint ("Releasing devices lock")
         self.devices_lock.release ()
 
+
     # Device URI
     def queryDevices(self):
         if not self.devices_lock.acquire(0):
             debugprint ("queryDevices: in progress")
             return
         debugprint ("Lock acquired for devices thread")
-        # Start new thread
-        thread.start_new_thread (self.getDevices_thread, ())
-        #self.getDevices_thread()
+        self.getDevices_thread()
         debugprint ("Devices thread started")
 
     def fetchDevices(self, parent=None):
@@ -2174,27 +2773,27 @@ class NewPrinterGUI(QDialog):
 
         # Keep the UI refreshed while we wait for the devices to load.
         waiting = False
+        #crashes kcm here as soon as this loop exits
         while (self.devices_lock.locked()):
             if not waiting:
                 waiting = True
                 self.WaitWindow.setText (i18n('<b>Searching</b>') + '<br/><br/>' +
                                          i18n('Searching for printers'))
-                #if not parent:
-                #    parent = self.mainapp.MainWindow
-                #self.WaitWindow.set_transient_for (parent)
-                #self.WaitWindow.show ()
-                self.WaitWindow.show()
-
-            QApplication.processEvents()
+                if not parent:
+                   parent = self.mainapp
+                self.WaitWindow.show ()
+            
+            KApplication.processEvents()
 
             time.sleep (0.1)
-
-        if waiting:
-            #self.WaitWindow.hide ()
-            self.WaitWindow.hide()
+        
+        #if waiting:
+            #self.WaitWindow.hide()
 
         debugprint ("Got devices")
+        
         result = self.devices_result # atomic operation
+
         if isinstance (result, cups.IPPError):
             # Propagate exception.
             raise result
@@ -2504,39 +3103,40 @@ class NewPrinterGUI(QDialog):
         self.btnIPPVerify.setEnabled(valid)
         self.setNPButtons ()
 
-    #FIXME this seems totally different from the Gnome one
     @pyqtSignature("")
     def on_btnIPPFindQueue_clicked(self):
-        self.IPPBrowseBox.clear()
-        host = str(self.entNPTIPPHostname.text())
-        cups.setServer (host)
-        printers = classes = {}
-        try:
-            c = cups.Connection()
-            printers = c.getPrinters ()
-            classes = c.getClasses ()
-            del c
-        except RuntimeError:
-            pass
-        except cups.IPP_Error, (e, msg):
-            pass
-
-        for printer, dict in printers.iteritems ():
+        self.mainapp.busy()
+        self.entNPTIPPQueuename.clear()
+        IPPBrowseDialog(self)
+        self.mainapp.ready()
+    
+    @pyqtSignature("")
+    def on_btnIPPVerify_clicked(self):
+        uri = unicode(self.lblIPPURI.text())
+        match = re.match ("(ipp|https?)://([^/]+)(.*)/([^/]*)", uri)
+        verified = False
+        if match:
+            oldserver = cups.getServer ()
+            host = match.group(2)
+            try:
+                cups.setServer (match.group (2))
+                c = cups.Connection ()
+                attributes = c.getPrinterAttributes (uri = uri)
+                verified = True
+            except cups.IPPError, (e, msg):
+                debugprint ("Failed to get attributes: %s (%d)" % (msg, e))
+            except:
+                nonfatalException ()
+            cups.setServer (oldserver)
+        else:
+            debugprint (uri)
 
-            self.IPPBrowseBox.addItem(printer)
-#            store.set_value (iter, 0, printer)
-#            store.set_value (iter, 1, dict.get ('printer-location', ''))
-#            store.set_value (iter, 2, dict)
-        for pclass, dict in classes.iteritems ():
-            pass
-#            iter = store.append (None)
-#            store.set_value (iter, 0, pclass)
-#            store.set_value (iter, 1, dict.get ('printer-location', ''))
-#            store.set_value (iter, 2, dict)
-
-        if len (printers) + len (classes) == 0:
-            # Display 'No queues' dialog
-            QMessageBox.information(self, i18n("No queues"),i18n("There are no queues available."))
+        if verified:
+            KMessageBox.information (self, _("This print share is accessible."),
+                                    _("Print Share Verified"))
+        else:
+            KMessageBox.error (self, _("This print share is not accessible."),
+                               _("Inaccessible"))
 
     def on_tvNPDevices_cursor_changed(self):
         device = self.devices[self.tvNPDevices.currentRow()]
@@ -2580,6 +3180,8 @@ class NewPrinterGUI(QDialog):
                 self.entNPTDirectJetHostname.setText(host)
                 self.entNPTDirectJetPort.setText(str (port))
         elif device.type=="serial":
+            pass
+            """
             if not device.is_class:
                 options = device.uri.split("?")[1]
                 options = options.split("+")
@@ -2613,6 +3215,7 @@ class NewPrinterGUI(QDialog):
                             widget.set_active(nr+1) # compensate "Default"
                     else:
                         widget.set_active(0)
+            """
 
         # XXX FILL TABS FOR VALID DEVICE URIs
         elif device.type in ("ipp", "http"):
@@ -2686,6 +3289,8 @@ class NewPrinterGUI(QDialog):
         elif type == "scsi": # SCSII
             device = ""
         elif type == "serial": # Serial
+            pass
+            """
             options = []
             for widget, name, optionvalues in (
                 (self.cmbNPTSerialBaud, "baud", None),
@@ -2705,6 +3310,7 @@ class NewPrinterGUI(QDialog):
             device =  self.device.uri.split("?")[0] #"serial:/dev/ttyS%s" 
             if options:
                 device = device + "?" + options
+            """
         elif type == "smb":
             uri = unicode(self.entSMBURI.text())
             (group, host, share, u, p) = SMBURI (uri=uri).separate ()
@@ -2782,7 +3388,7 @@ class NewPrinterGUI(QDialog):
         rbtn3 = self.rbtnNPDownloadableDriverSearch.isChecked()
         self.tvNPMakes.setEnabled(rbtn1)
         self.filechooserPPD.setEnabled(rbtn2)
-
+        
         """FIXME
         if not rbtn3 and self.openprinting_query_handle:
             # Need to cancel a search in progress.
@@ -2801,8 +3407,6 @@ class NewPrinterGUI(QDialog):
 
         self.setNPButtons()
 
-    # PPD from foomatic
-
     def fillMakeList(self):
         makes = self.ppds.getMakes()
         self.tvNPMakes.clear()
@@ -2932,7 +3536,7 @@ class NewPrinterGUI(QDialog):
 
             error_text = ('<span size="larger">' +
                           i18nc("Error title", "<b>%1</b>", err_title) + '</span>\n\n' + err)
-            QMessageBox.critical(self, err_title, error_text)
+            KMessageBox.error(self, error_text, err_title)
             return None
 
         if isinstance(ppd, str) or isinstance(ppd, unicode):
@@ -2963,10 +3567,10 @@ class NewPrinterGUI(QDialog):
         else:
             name = self.mainapp.printer.name
 
-	#replace any whitespace in printer name with underscore otherwise
-	#CUPS throws an error
-	name = name.replace(" ", "_")
-	
+        #replace any whitespace in printer name with underscore otherwise
+        #CUPS throws an error
+        name = name.replace(" ", "_")
+        
         # Whether to check for missing drivers.
         check = False
         checkppd = None
@@ -2997,12 +3601,12 @@ class NewPrinterGUI(QDialog):
             for option in self.options.itervalues():
                 option.writeback()
 
-            #self.busy(self)
+            self.mainapp.busy(self)
             self.WaitWindow.setText(i18n('<b>Adding</b>') + '<br /><br />' +
                                     i18n('Adding printer'))
             #self.WaitWindow.set_transient_for (self.NewPrinterWindow)
             self.WaitWindow.show ()
-            QApplication.processEvents()
+            KApplication.processEvents()
             try:
                 self.passwd_retry = False # use cached Passwd
                 if isinstance(ppd, str) or isinstance(ppd, unicode):
@@ -3130,11 +3734,11 @@ class NewPrinterGUI(QDialog):
             """
 
     def show_IPP_Error(self, exception, message):
-	    if exception == cups.IPP_NOT_AUTHORIZED:
-		QMessageBox.critical(self, i18n('Not authorized'), i18n('The password may be incorrect.'))
-	    else:
-		QMessageBox.critical(self, i18n('CUPS server error'), i18n("There was an error during the CUPS "\
-								"operation: '%1'.", message))
+            if exception == cups.IPP_NOT_AUTHORIZED:
+                KMessageBox.error(self, i18n('The password may be incorrect.'), i18n('Not authorized'))
+            else:
+                KMessageBox.error(self, i18n("There was an error during the CUPS " "operation: '%1'.", message),
+                                        i18n('CUPS server error'))
 
     def checkDriverExists(self, name, ppd=None):
         """Check that the driver for an existing queue actually
@@ -3183,7 +3787,7 @@ class NewPrinterGUI(QDialog):
                               i18n("Printer '%1' requires the '%2' program but "
                                 "it is not currently installed.  Please "
                                 "install it before using this printer.", name, (exes + pkgs)[0]))
-                QMessageBox.error(self, "", error_text)
+                KMessageBox.error(self, error_text, "Missing Driver")
 
             """
             if pkg and response == gtk.RESPONSE_OK:
@@ -3208,43 +3812,224 @@ class NewPrinterGUI(QDialog):
     def on_entNPTIPPQueuename_textChanged(self, ent):
         self.update_IPP_URI_label ()
 
-    #FIXME obsolete?
-    def on_IPPBrowseBox_currentTextChanged(self, text):
-        self.update_IPP_URI_label()
-
     #FIXME not in gnome?
     @pyqtSignature("")
     def on_btnNPCancel_clicked(self):
         self.hide()
+        
+    #copy busy and ready functions from the mainapp
+    #since they can't be inherited from the mainapp
+    def busy (self, win = None):
+        try:
+            if not win:
+                win = self
+            win.setCursor(Qt.WaitCursor)
+            KApplication.processEvents()
+        except:
+            nonfatalException ()
+
+    def ready (self, win = None):
+        try:
+            if not win:
+                win = self
+            win.setCursor(Qt.ArrowCursor)
+            KApplication.processEvents()
+        except:
+            nonfatalException ()
 #end of class NewPrinterGUI
 
-if __name__ == "__main__":
-    """start the application"""
+class IPPBrowseDialog(QDialog):
+
+    def __init__(self, newprinter):
+        QDialog.__init__(self, newprinter)
+        self.newprinter = newprinter
+        
+        self.language = newprinter.language
+        self.dialog_mode = ""
+
+        self.WaitWindow = QMessageBox(self.newprinter)
+        self.WaitWindow.setStandardButtons(QMessageBox.NoButton)
+        
+        uic.loadUi(APPDIR + "/" + "ipp-browse-dialog.ui", self)
+        
+        self.btnIPPBrowseOk.setEnabled(False)
+        self.show()
+        
+        #create an empty data model
+        self.ippStore = self.twIPPBrowser
+        self.twIPPBrowser.sortByColumn(0, Qt.AscendingOrder)
+        
+        #Set tree header labels. Takes list of strings
+        self.ippStore.setHeaderLabels([_("Share"), _("Comment")])
+
+        self.browse_ipp_queues()
+
+    def browse_ipp_queues(self):
+        if not self.newprinter.ipp_lock.acquire(0):
+            return
+        self.browse_ipp_queues_thread()
+
+    def browse_ipp_queues_thread(self):
+        host = None
+        try:
+            store = self.ippStore
+            store.clear ()
+            items = QTreeWidgetItem(QStringList([_('Scanning...'), '']))
+            store.addTopLevelItem(items)
+
+            host = self.newprinter.entNPTIPPHostname.text()
+        except:
+            nonfatalException()
+
+        oldserver = cups.getServer ()
+        printers = classes = {}
+        failed = False
+        port = 631
+        
+        if host != None:
+            #need to pass a unicode string. urllib falls over QStrings
+            (host, port) = urllib.splitnport (unicode(host), defport=port)
+
+        try:
+            c = cups.Connection (host=host, port=port)
+            printers = c.getPrinters ()
+            del c
+        except cups.IPPError, (e, m):
+            debugprint ("IPP browser: %s" % m)
+            failed = True
+        except:
+            nonfatalException()
+            failed = True
+        cups.setServer (oldserver)
+
+        try:
+            store.clear ()
+            for printer, dict in printers.iteritems ():
+                #only these properties seem to be used from dict so 
+                #just store these instead of whole dict
+                location = dict.get('printer-location', '')
+                uri = dict.get('printer-uri-supported', 'ipp')
+                items = QTreeWidgetItem(QStringList([printer, location, uri]))
+                store.addTopLevelItem(items)
+
+            if len (printers) + len (classes) == 0:
+                # Display 'No queues' dialog
+                if failed:
+                    title = _("Not possible")
+                    text = (_("It is not possible to obtain a list of queues "
+                              "from `%s'.") % host + '\n\n' +
+                            _("Obtaining a list of queues is a CUPS extension "
+                              "to IPP.  Network printers do not support it."))
+                else:
+                    title = _("No queues")
+                    text = _("There are no queues available.")
+
+                self.hide ()
+                KMessageBox.error (self.newprinter, text, title)
+
+            try:
+                self.ready(self)
+            except:
+                nonfatalException()
+
+            self.newprinter.ipp_lock.release()
+        except:
+            nonfatalException()
+
+        
+    def on_twIPPBrowser_itemClicked(self):
+        self.btnIPPBrowseOk.setEnabled(True)
+
+    def on_btnIPPBrowseOk_clicked(self):
+        index = self.twIPPBrowser.currentIndex()
+        item = self.twIPPBrowser.itemFromIndex(index)
+        queue = item.text(0)
+        uri = unicode(item.text(2))
+        self.hide()
+        self.newprinter.entNPTIPPQueuename.setText (queue)
+        self.newprinter.entNPTIPPQueuename.show()
+        #uri = dict.get('printer-uri-supported', 'ipp')
+        match = re.match ("(ipp|https?)://([^/]+)(.*)", uri)
+        if match:
+            self.newprinter.entNPTIPPHostname.setText (match.group (2))
+            self.newprinter.entNPTIPPQueuename.setText (match.group (3))
+
+        self.newprinter.lblIPPURI.setText (uri)
+        self.newprinter.lblIPPURI.show()
+        self.newprinter.setNPButtons()
+
+    def on_btnIPPBrowseCancel_clicked(self):
+        self.hide()
+
+    def on_btnIPPBrowseRefresh_clicked(self):
+        self.browse_ipp_queues()
+    
+    #copy busy and ready functions from the mainapp
+    #since they can't be inherited from the mainapp
+    def busy (self, win = None):
+        try:
+            if not win:
+                win = self
+            win.setCursor(Qt.WaitCursor)
+            KApplication.processEvents()
+        except:
+            nonfatalException ()
+
+    def ready (self, win = None):
+        try:
+            if not win:
+                win = self
+            win.setCursor(Qt.ArrowCursor)
+            KApplication.processEvents()
+        except:
+            nonfatalException ()
+#End of class IPPBrowseDialog
 
-    appName     = "system-config-printer-kde"
-    catalogue   = "system-config-printer-kde"
-    programName = ki18n("System Config Printer KDE")
-    version     = "1.0"
-    description = ki18n("Printer configuration tool")
-    license     = KAboutData.License_GPL
-    copyright   = ki18n("2007 Tim Waugh, Red Hat Inc, 2007-2008 Canonical Ltd")
-    text        = KLocalizedString()
-    homePage    = "https://launchpad.net/system-config-printer"
-    bugEmail    = ""
-
-    aboutData   = KAboutData (appName, catalogue, programName, version, description,
-                                license, copyright, text, homePage, bugEmail)
-
-    aboutData.addAuthor(ki18n("Jonathan Riddell"), ki18n("Author"))
-    aboutData.addAuthor(ki18n("Tim Waugh/Red Hat"), ki18n("System Config Printer Author"))
-
-    options = KCmdLineOptions()
+#Needed to iterate over a QTreeWidgetItem for the user access
+#list
+class Iter(QTreeWidgetItemIterator):
+    def __init__(self, *args):
+        QTreeWidgetItemIterator.__init__(self, *args)
+    def next(self):
+        self.__iadd__(1)
+        value = self.value()
+        if not value:
+            raise StopIteration
+        else:
+            return self.value() 
+
+def CreatePlugin(widget_parent, parent, component_data):
+    u = GUI()
+    kcm = u.makeui(component_data, widget_parent)
+    return kcm
+
+#if __name__ == "__main__":
+    #"""start the application"""
+
+    #appName     = "system-config-printer-kde"
+    #catalogue   = "system-config-printer-kde"
+    #programName = ki18n("System Config Printer KDE")
+    #version     = "1.0"
+    #description = ki18n("Printer configuration tool")
+    #license     = KAboutData.License_GPL
+    #copyright   = ki18n("2007 Tim Waugh, Red Hat Inc, 2007-2008 Canonical Ltd")
+    #text        = KLocalizedString()
+    #homePage    = "https://launchpad.net/system-config-printer"
+    #bugEmail    = ""
+
+    #aboutData   = KAboutData (appName, catalogue, programName, version, description,
+                                #license, copyright, text, homePage, bugEmail)
+
+    #aboutData.addAuthor(ki18n("Jonathan Riddell"), ki18n("Author"))
+    #aboutData.addAuthor(ki18n("Tim Waugh/Red Hat"), ki18n("System Config Printer Author"))
+
+    #options = KCmdLineOptions()
 
-    KCmdLineArgs.init(sys.argv, aboutData)
-    KCmdLineArgs.addCmdLineOptions(options)
+    #KCmdLineArgs.init(sys.argv, aboutData)
+    #KCmdLineArgs.addCmdLineOptions(options)
 
-    app = KApplication()
-    args = KCmdLineArgs.parsedArgs()
+    #app = KApplication()
+    #args = KCmdLineArgs.parsedArgs()
 
-    applet = GUI()
-    sys.exit(app.exec_())
+    #applet = GUI()
+    #sys.exit(app.exec_())
Index: system-config-printer-kde/system-config-printer.ui
===================================================================
--- system-config-printer-kde/system-config-printer.ui.orig
+++ system-config-printer-kde/system-config-printer.ui
@@ -1,179 +1,230 @@
-<ui version="4.0" >
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
  <class>form</class>
- <widget class="QWidget" name="form" >
-  <property name="geometry" >
+ <widget class="QWidget" name="form">
+  <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>878</width>
-    <height>444</height>
+    <width>826</width>
+    <height>509</height>
    </rect>
   </property>
-  <property name="windowIcon" >
+  <property name="windowIcon">
    <iconset>
     <normaloff>../../../../.designer/backup/printer-128.png</normaloff>../../../../.designer/backup/printer-128.png</iconset>
   </property>
-  <layout class="QGridLayout" name="gridLayout" >
-   <item rowspan="2" row="0" column="0" >
-    <widget class="QTreeWidget" name="mainlist" >
-     <property name="sizePolicy" >
-      <sizepolicy vsizetype="Expanding" hsizetype="Fixed" >
+  <layout class="QGridLayout" name="gridLayout_4">
+   <item row="0" column="0">
+    <widget class="QTreeWidget" name="mainlist">
+     <property name="sizePolicy">
+      <sizepolicy hsizetype="Fixed" vsizetype="Expanding">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
-     <property name="rootIsDecorated" >
+     <property name="rootIsDecorated">
       <bool>true</bool>
      </property>
      <column>
-      <property name="text" >
+      <property name="text">
        <string/>
       </property>
      </column>
     </widget>
    </item>
-   <item row="0" column="1" colspan="3" >
-    <widget class="QStackedWidget" name="ntbkMain" >
-     <property name="currentIndex" >
+   <item row="0" column="1">
+    <widget class="QStackedWidget" name="ntbkMain">
+     <property name="sizePolicy">
+      <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
+       <horstretch>0</horstretch>
+       <verstretch>0</verstretch>
+      </sizepolicy>
+     </property>
+     <property name="currentIndex">
       <number>2</number>
      </property>
-     <widget class="QWidget" name="page" >
-      <layout class="QGridLayout" >
-       <item row="0" column="0" >
-        <widget class="QLabel" name="label" >
-         <property name="text" >
-          <string>Add New Printer</string>
-         </property>
-        </widget>
-       </item>
-       <item row="1" column="0" >
-        <widget class="QPushButton" name="btnNewPrinter" >
-         <property name="text" >
-          <string>New Local Printer</string>
-         </property>
-        </widget>
-       </item>
-       <item row="1" column="1" >
-        <widget class="QLabel" name="newPrinterLabel" >
-         <property name="text" >
-          <string>New printer attached to this computer.</string>
-         </property>
-        </widget>
-       </item>
-       <item row="2" column="0" >
-        <widget class="QPushButton" name="btnNewPrinterNetwork" >
-         <property name="text" >
-          <string>New Network Printer</string>
-         </property>
-        </widget>
-       </item>
-       <item row="2" column="1" >
-        <widget class="QLabel" name="newPrinterNetworkLabel" >
-         <property name="text" >
-          <string>New remote printer</string>
+     <widget class="QWidget" name="page">
+      <layout class="QVBoxLayout" name="verticalLayout_4">
+       <item>
+        <widget class="QLabel" name="label">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
          </property>
-        </widget>
-       </item>
-       <item row="3" column="0" >
-        <widget class="QPushButton" name="btnNewPrinterSpecial" >
-         <property name="text" >
-          <string>New Special Printer</string>
+         <property name="font">
+          <font>
+           <weight>75</weight>
+           <bold>true</bold>
+          </font>
          </property>
-        </widget>
-       </item>
-       <item row="3" column="1" >
-        <widget class="QLabel" name="newPrinterSpecialLabel" >
-         <property name="text" >
-          <string comment="KDE::DoNotExtract" >TextLabel</string>
-         </property>
-        </widget>
-       </item>
-       <item row="4" column="0" >
-        <widget class="QPushButton" name="btnNewClass" >
-         <property name="text" >
-          <string>New Printer Class</string>
+         <property name="text">
+          <string>Add New Printer</string>
          </property>
         </widget>
        </item>
-       <item row="4" column="1" >
-        <widget class="QLabel" name="label_5" >
-         <property name="text" >
-          <string>Add a new printer group.</string>
-         </property>
-        </widget>
+       <item>
+        <layout class="QGridLayout" name="gridLayout">
+         <item row="0" column="0">
+          <widget class="KPushButton" name="btnNewPrinter">
+           <property name="text">
+            <string>New Local Printer</string>
+           </property>
+          </widget>
+         </item>
+         <item row="0" column="1">
+          <widget class="QLabel" name="newPrinterLabel">
+           <property name="sizePolicy">
+            <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
+             <horstretch>0</horstretch>
+             <verstretch>0</verstretch>
+            </sizepolicy>
+           </property>
+           <property name="text">
+            <string>Add a new printer which is directly connected to your
+computer.</string>
+           </property>
+          </widget>
+         </item>
+         <item row="1" column="0">
+          <widget class="KPushButton" name="btnNewPrinterNetwork">
+           <property name="text">
+            <string>New Network Printer</string>
+           </property>
+          </widget>
+         </item>
+         <item row="1" column="1">
+          <widget class="QLabel" name="newPrinterNetworkLabel">
+           <property name="sizePolicy">
+            <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
+             <horstretch>0</horstretch>
+             <verstretch>0</verstretch>
+            </sizepolicy>
+           </property>
+           <property name="text">
+            <string>Add a new printer which is connected to your home
+network or on the Internet.</string>
+           </property>
+          </widget>
+         </item>
+         <item row="2" column="0">
+          <widget class="KPushButton" name="btnNewPrinterSpecial">
+           <property name="text">
+            <string>New Special Printer</string>
+           </property>
+          </widget>
+         </item>
+         <item row="2" column="1">
+          <widget class="QLabel" name="newPrinterSpecialLabel">
+           <property name="sizePolicy">
+            <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
+             <horstretch>0</horstretch>
+             <verstretch>0</verstretch>
+            </sizepolicy>
+           </property>
+           <property name="text">
+            <string>Add a new special printer such as a Fax or PDF by
+specifying an executable command.</string>
+           </property>
+          </widget>
+         </item>
+         <item row="3" column="0">
+          <widget class="KPushButton" name="btnNewClass">
+           <property name="text">
+            <string>New Printer Class</string>
+           </property>
+          </widget>
+         </item>
+         <item row="3" column="1">
+          <widget class="QLabel" name="label_5">
+           <property name="sizePolicy">
+            <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
+             <horstretch>0</horstretch>
+             <verstretch>0</verstretch>
+            </sizepolicy>
+           </property>
+           <property name="text">
+            <string>Add a new printer class to specify a group of computers to
+print to.</string>
+           </property>
+          </widget>
+         </item>
+        </layout>
        </item>
-       <item row="5" column="0" >
-        <spacer>
-         <property name="orientation" >
+       <item>
+        <spacer name="verticalSpacer_4">
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
-           <width>20</width>
-           <height>40</height>
+           <width>528</width>
+           <height>317</height>
           </size>
          </property>
         </spacer>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_3" >
-      <layout class="QGridLayout" >
-       <item row="0" column="0" colspan="2" >
-        <layout class="QHBoxLayout" >
+     <widget class="QWidget" name="page_3">
+      <layout class="QGridLayout">
+       <item row="0" column="0" colspan="2">
+        <layout class="QHBoxLayout">
          <item>
-          <widget class="QLabel" name="label_6" >
-           <property name="text" >
+          <widget class="QLabel" name="label_6">
+           <property name="text">
             <string>Basic Server Settings</string>
            </property>
           </widget>
          </item>
          <item>
-          <widget class="QLabel" name="lblClassMembers" >
-           <property name="text" >
+          <widget class="QLabel" name="lblClassMembers">
+           <property name="text">
             <string/>
            </property>
           </widget>
          </item>
          <item>
-          <widget class="QLabel" name="lblPInstallOptions" >
-           <property name="text" >
+          <widget class="QLabel" name="lblPInstallOptions">
+           <property name="text">
             <string/>
            </property>
           </widget>
          </item>
          <item>
-          <widget class="QLabel" name="lblPOptions" >
-           <property name="text" >
+          <widget class="QLabel" name="lblPOptions">
+           <property name="text">
             <string/>
            </property>
           </widget>
          </item>
         </layout>
        </item>
-       <item row="1" column="0" colspan="2" >
-        <widget class="QCheckBox" name="chkServerBrowse" >
-         <property name="text" >
+       <item row="1" column="0" colspan="2">
+        <widget class="QCheckBox" name="chkServerBrowse">
+         <property name="text">
           <string>Show printers shared by other systems</string>
          </property>
         </widget>
        </item>
-       <item row="2" column="0" colspan="2" >
-        <widget class="QCheckBox" name="chkServerShare" >
-         <property name="text" >
+       <item row="2" column="0" colspan="2">
+        <widget class="QCheckBox" name="chkServerShare">
+         <property name="text">
           <string>Share published printers connected to this system</string>
          </property>
         </widget>
        </item>
-       <item row="3" column="0" >
+       <item row="3" column="0">
         <spacer>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
-         <property name="sizeType" >
+         <property name="sizeType">
           <enum>QSizePolicy::Fixed</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>16</width>
            <height>24</height>
@@ -181,46 +232,46 @@
          </property>
         </spacer>
        </item>
-       <item row="3" column="1" >
-        <widget class="QCheckBox" name="chkServerShareAny" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Expanding" >
+       <item row="3" column="1">
+        <widget class="QCheckBox" name="chkServerShareAny">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="text" >
-          <string>Allow printing from the internet</string>
+         <property name="text">
+          <string>Allow printing from the Internet</string>
          </property>
         </widget>
        </item>
-       <item row="4" column="0" colspan="2" >
-        <widget class="QCheckBox" name="chkServerRemoteAdmin" >
-         <property name="text" >
+       <item row="4" column="0" colspan="2">
+        <widget class="QCheckBox" name="chkServerRemoteAdmin">
+         <property name="text">
           <string>Allow remote administration</string>
          </property>
         </widget>
        </item>
-       <item row="5" column="0" colspan="2" >
-        <widget class="QCheckBox" name="chkServerAllowCancelAll" >
-         <property name="text" >
+       <item row="5" column="0" colspan="2">
+        <widget class="QCheckBox" name="chkServerAllowCancelAll">
+         <property name="text">
           <string>Allow users to cancel any job (not just their own)</string>
          </property>
         </widget>
        </item>
-       <item row="6" column="0" colspan="2" >
-        <widget class="QCheckBox" name="chkServerLogDebug" >
-         <property name="text" >
+       <item row="6" column="0" colspan="2">
+        <widget class="QCheckBox" name="chkServerLogDebug">
+         <property name="text">
           <string>Save debugging information for troubleshooting</string>
          </property>
         </widget>
        </item>
-       <item row="7" column="1" >
+       <item row="7" column="1">
         <spacer>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>505</width>
            <height>131</height>
@@ -230,325 +281,1503 @@
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_2" >
-      <layout class="QGridLayout" >
-       <item row="0" column="0" >
-        <widget class="QTabWidget" name="tabWidget" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Expanding" hsizetype="Minimum" >
-           <horstretch>1</horstretch>
-           <verstretch>0</verstretch>
-          </sizepolicy>
-         </property>
-         <property name="currentIndex" >
-          <number>0</number>
-         </property>
-         <widget class="QWidget" name="settings" >
-          <attribute name="title" >
-           <string>Settings</string>
-          </attribute>
-          <layout class="QGridLayout" name="gridLayout_2" >
-           <item row="0" column="0" >
-            <widget class="QLabel" name="lblPDescription" >
-             <property name="text" >
-              <string>Description:</string>
-             </property>
-            </widget>
-           </item>
-           <item row="0" column="1" colspan="5" >
-            <widget class="QLineEdit" name="entPDescription" />
-           </item>
-           <item row="1" column="0" >
-            <widget class="QLabel" name="lblPLocation" >
-             <property name="text" >
-              <string>Location:</string>
-             </property>
-            </widget>
-           </item>
-           <item row="1" column="1" colspan="5" >
-            <widget class="QLineEdit" name="entPLocation" />
-           </item>
-           <item row="2" column="0" >
-            <widget class="QLabel" name="lblPDevice2" >
-             <property name="text" >
-              <string>Device URI:</string>
-             </property>
-            </widget>
-           </item>
-           <item row="2" column="1" colspan="4" >
-            <widget class="QLineEdit" name="entPDevice" />
-           </item>
-           <item row="2" column="5" >
-            <widget class="QPushButton" name="btnSelectDevice" >
-             <property name="text" >
-              <string>Change</string>
-             </property>
-            </widget>
-           </item>
-           <item row="3" column="0" colspan="2" >
-            <widget class="QLabel" name="lblPMakeModel2" >
-             <property name="text" >
-              <string>Make and Model:</string>
-             </property>
-            </widget>
-           </item>
-           <item row="3" column="2" colspan="3" >
-            <widget class="QLabel" name="lblPMakeModel" >
-             <property name="text" >
-              <string>-</string>
-             </property>
-             <property name="wordWrap" >
-              <bool>true</bool>
-             </property>
-            </widget>
-           </item>
-           <item row="3" column="5" >
-            <widget class="QPushButton" name="btnChangePPD" >
-             <property name="text" >
-              <string>Change</string>
-             </property>
-            </widget>
-           </item>
-           <item row="4" column="0" colspan="2" >
-            <widget class="QLabel" name="lblPState2" >
-             <property name="text" >
-              <string>Printer State:</string>
-             </property>
-            </widget>
-           </item>
-           <item row="4" column="2" colspan="4" >
-            <widget class="QLabel" name="lblPState" >
-             <property name="text" >
-              <string>-</string>
-             </property>
-            </widget>
-           </item>
-           <item row="5" column="0" colspan="2" >
-            <widget class="QLabel" name="label_12" >
-             <property name="text" >
-              <string>Default Printer:</string>
-             </property>
-            </widget>
-           </item>
-           <item row="5" column="2" colspan="3" >
-            <widget class="QLabel" name="lblPDefault" >
-             <property name="text" >
-              <string>-</string>
-             </property>
-            </widget>
-           </item>
-           <item row="5" column="5" >
-            <widget class="QPushButton" name="btnPMakeDefault" >
-             <property name="text" >
-              <string>Make Default</string>
-             </property>
-            </widget>
-           </item>
-           <item row="6" column="0" colspan="2" >
-            <widget class="QPushButton" name="btnDelete" >
-             <property name="text" >
-              <string>Remove Printer</string>
+     <widget class="QWidget" name="page_2">
+      <layout class="QGridLayout" name="gridLayout_3">
+       <item row="0" column="0">
+        <layout class="QVBoxLayout" name="verticalLayout">
+         <item>
+          <layout class="QHBoxLayout" name="horizontalLayout">
+           <item>
+            <widget class="QLabel" name="printerNameLabel">
+             <property name="font">
+              <font>
+               <weight>75</weight>
+               <bold>true</bold>
+              </font>
+             </property>
+             <property name="text">
+              <string>My Printer</string>
              </property>
             </widget>
            </item>
-           <item row="6" column="2" colspan="4" >
-            <spacer name="horizontalSpacer" >
-             <property name="orientation" >
+           <item>
+            <spacer name="horizontalSpacer_2">
+             <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
-             <property name="sizeHint" stdset="0" >
+             <property name="sizeHint" stdset="0">
               <size>
-               <width>432</width>
+               <width>468</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
-           <item row="7" column="0" colspan="6" >
-            <spacer name="verticalSpacer" >
-             <property name="orientation" >
-              <enum>Qt::Vertical</enum>
-             </property>
-             <property name="sizeHint" stdset="0" >
-              <size>
-               <width>548</width>
-               <height>84</height>
-              </size>
-             </property>
-            </spacer>
-           </item>
-           <item row="8" column="0" colspan="3" >
-            <widget class="QPushButton" name="btnPrintTestPage" >
-             <property name="text" >
-              <string>Print Test Page</string>
-             </property>
-            </widget>
-           </item>
-           <item row="8" column="3" >
-            <widget class="QPushButton" name="btnSelfTest" >
-             <property name="text" >
-              <string>Print Self-Test Page</string>
-             </property>
-            </widget>
-           </item>
-           <item row="8" column="4" colspan="2" >
-            <widget class="QPushButton" name="btnCleanHeads" >
-             <property name="text" >
-              <string>Clean Print Heads</string>
-             </property>
-            </widget>
-           </item>
           </layout>
-         </widget>
-         <widget class="QWidget" name="policies" >
-          <attribute name="title" >
-           <string>Policies</string>
-          </attribute>
-          <layout class="QGridLayout" >
-           <item row="0" column="0" >
-            <widget class="QCheckBox" name="chkPEnabled" >
-             <property name="text" >
-              <string comment="Printer policy">Enabled</string>
-             </property>
-            </widget>
-           </item>
-           <item rowspan="3" row="0" column="1" >
-            <widget class="QLabel" name="lblNotPublished" >
-             <property name="sizePolicy" >
-              <sizepolicy vsizetype="Preferred" hsizetype="Expanding" >
-               <horstretch>0</horstretch>
-               <verstretch>0</verstretch>
-              </sizepolicy>
-             </property>
-             <property name="text" >
-              <string comment="Printer policy">Not published
-See server settings</string>
-             </property>
-            </widget>
-           </item>
-           <item row="1" column="0" >
-            <widget class="QCheckBox" name="chkPAccepting" >
-             <property name="text" >
-              <string comment="Printer policy">Accepting Jobs</string>
-             </property>
-            </widget>
-           </item>
-           <item row="2" column="0" >
-            <widget class="QCheckBox" name="chkPShared" >
-             <property name="text" >
-              <string comment="Printer policy">Shared</string>
-             </property>
-            </widget>
-           </item>
-           <item row="3" column="0" >
-            <widget class="QLabel" name="label_8" >
-             <property name="sizePolicy" >
-              <sizepolicy vsizetype="Minimum" hsizetype="Minimum" >
-               <horstretch>0</horstretch>
-               <verstretch>0</verstretch>
-              </sizepolicy>
-             </property>
-             <property name="text" >
-              <string>Error Policy</string>
-             </property>
-            </widget>
-           </item>
-           <item row="3" column="1" >
-            <widget class="QComboBox" name="cmbPErrorPolicy" />
-           </item>
-           <item row="4" column="0" >
-            <widget class="QLabel" name="label_9" >
-             <property name="sizePolicy" >
-              <sizepolicy vsizetype="Preferred" hsizetype="Minimum" >
-               <horstretch>0</horstretch>
-               <verstretch>0</verstretch>
-              </sizepolicy>
-             </property>
-             <property name="text" >
-              <string>Operation Policy</string>
-             </property>
-            </widget>
-           </item>
-           <item row="4" column="1" >
-            <widget class="QComboBox" name="cmbPOperationPolicy" />
-           </item>
-           <item row="5" column="0" >
-            <widget class="QLabel" name="label_10" >
-             <property name="sizePolicy" >
-              <sizepolicy vsizetype="Preferred" hsizetype="Minimum" >
-               <horstretch>0</horstretch>
-               <verstretch>0</verstretch>
-              </sizepolicy>
-             </property>
-             <property name="text" >
-              <string>Starting Banner</string>
-             </property>
-            </widget>
-           </item>
-           <item row="5" column="1" >
-            <widget class="QComboBox" name="cmbPStartBanner" />
-           </item>
-           <item row="6" column="0" >
-            <widget class="QLabel" name="label_11" >
-             <property name="sizePolicy" >
-              <sizepolicy vsizetype="Preferred" hsizetype="Minimum" >
-               <horstretch>0</horstretch>
-               <verstretch>0</verstretch>
-              </sizepolicy>
-             </property>
-             <property name="text" >
-              <string>Ending Banner</string>
-             </property>
-            </widget>
-           </item>
-           <item row="6" column="1" >
-            <widget class="QComboBox" name="cmbPEndBanner" />
-           </item>
-           <item row="7" column="0" colspan="2" >
-            <spacer>
-             <property name="orientation" >
-              <enum>Qt::Vertical</enum>
-             </property>
-             <property name="sizeHint" stdset="0" >
-              <size>
-               <width>521</width>
-               <height>20</height>
-              </size>
-             </property>
-            </spacer>
-           </item>
-          </layout>
-         </widget>
-        </widget>
+         </item>
+         <item>
+          <widget class="QTabWidget" name="ntbkPrinter">
+           <property name="sizePolicy">
+            <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
+             <horstretch>0</horstretch>
+             <verstretch>0</verstretch>
+            </sizepolicy>
+           </property>
+           <property name="currentIndex">
+            <number>0</number>
+           </property>
+           <widget class="QWidget" name="settings">
+            <attribute name="title">
+             <string>Settings</string>
+            </attribute>
+            <layout class="QVBoxLayout" name="verticalLayout_5">
+             <item>
+              <widget class="QLabel" name="label_3">
+               <property name="font">
+                <font>
+                 <weight>75</weight>
+                 <bold>true</bold>
+                </font>
+               </property>
+               <property name="text">
+                <string>Printer Description</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <layout class="QGridLayout" name="gridLayout_8">
+               <item row="0" column="0">
+                <widget class="QLabel" name="lblPName">
+                 <property name="text">
+                  <string>Printer Name:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="0" column="1">
+                <widget class="KLineEdit" name="entPName"/>
+               </item>
+               <item row="1" column="0">
+                <widget class="QLabel" name="lblPLocation">
+                 <property name="text">
+                  <string>Location:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="1" column="1">
+                <widget class="KLineEdit" name="entPLocation"/>
+               </item>
+               <item row="2" column="0">
+                <widget class="QLabel" name="lblPDescription">
+                 <property name="text">
+                  <string>Printer Description:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="2" column="1">
+                <widget class="KLineEdit" name="entPDescription"/>
+               </item>
+               <item row="3" column="0">
+                <widget class="QLabel" name="lblPDevice2">
+                 <property name="text">
+                  <string>Device URI:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="3" column="1">
+                <widget class="KLineEdit" name="entPDevice"/>
+               </item>
+              </layout>
+             </item>
+             <item>
+              <widget class="QCheckBox" name="chkPMakeDefault">
+               <property name="enabled">
+                <bool>true</bool>
+               </property>
+               <property name="text">
+                <string>Make Default (Current Default is Foo at Bar)</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="Line" name="line">
+               <property name="orientation">
+                <enum>Qt::Horizontal</enum>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QLabel" name="label_7">
+               <property name="font">
+                <font>
+                 <weight>75</weight>
+                 <bold>true</bold>
+                </font>
+               </property>
+               <property name="text">
+                <string>Driver Details</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <layout class="QGridLayout" name="gridLayout_16">
+               <item row="0" column="0">
+                <widget class="QLabel" name="lblPMakeModel2">
+                 <property name="sizePolicy">
+                  <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
+                   <horstretch>0</horstretch>
+                   <verstretch>0</verstretch>
+                  </sizepolicy>
+                 </property>
+                 <property name="text">
+                  <string>Printer Model:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="0" column="1">
+                <widget class="QLabel" name="lblPMakeModel">
+                 <property name="sizePolicy">
+                  <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
+                   <horstretch>0</horstretch>
+                   <verstretch>0</verstretch>
+                  </sizepolicy>
+                 </property>
+                 <property name="text">
+                  <string>-</string>
+                 </property>
+                 <property name="wordWrap">
+                  <bool>true</bool>
+                 </property>
+                </widget>
+               </item>
+               <item row="0" column="2">
+                <widget class="KPushButton" name="btnChangePPD">
+                 <property name="text">
+                  <string>Change...</string>
+                 </property>
+                </widget>
+               </item>
+               <item row="1" column="0">
+                <widget class="QLabel" name="lblPType2">
+                 <property name="sizePolicy">
+                  <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
+                   <horstretch>0</horstretch>
+                   <verstretch>0</verstretch>
+                  </sizepolicy>
+                 </property>
+                 <property name="text">
+                  <string>Printer State:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="1" column="1" colspan="2">
+                <widget class="QLabel" name="lblPState">
+                 <property name="sizePolicy">
+                  <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
+                   <horstretch>0</horstretch>
+                   <verstretch>0</verstretch>
+                  </sizepolicy>
+                 </property>
+                 <property name="text">
+                  <string>-</string>
+                 </property>
+                </widget>
+               </item>
+              </layout>
+             </item>
+             <item>
+              <widget class="Line" name="line_2">
+               <property name="orientation">
+                <enum>Qt::Horizontal</enum>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QLabel" name="label_12">
+               <property name="font">
+                <font>
+                 <weight>75</weight>
+                 <bold>true</bold>
+                </font>
+               </property>
+               <property name="text">
+                <string>Printer Status</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <layout class="QHBoxLayout" name="horizontalLayout_4">
+               <item>
+                <widget class="QCheckBox" name="chkPEnabled">
+                 <property name="text">
+                  <string>enable</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <widget class="QCheckBox" name="chkPAccepting">
+                 <property name="text">
+                  <string>accepting</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <widget class="QCheckBox" name="chkPShared">
+                 <property name="text">
+                  <string>sharing</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <widget class="QLabel" name="lblNotPublished">
+                 <property name="text">
+                  <string comment="KDE::DoNotExtract" >TextLabel</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <spacer name="horizontalSpacer_10">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>40</width>
+                   <height>20</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+              </layout>
+             </item>
+             <item>
+              <layout class="QHBoxLayout" name="horizontalLayout_5">
+               <item>
+                <widget class="KPushButton" name="btnPrintTestPage">
+                 <property name="text">
+                  <string>Print Test Page</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <widget class="KPushButton" name="btnSelfTest">
+                 <property name="text">
+                  <string>Print Self Test</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <widget class="KPushButton" name="btnCleanHeads">
+                 <property name="text">
+                  <string>Clean Print Heads</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <spacer name="horizontalSpacer_5">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>99</width>
+                   <height>17</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+              </layout>
+             </item>
+             <item>
+              <layout class="QHBoxLayout" name="horizontalLayout_6">
+               <item>
+                <widget class="KPushButton" name="btnDelete">
+                 <property name="text">
+                  <string>Remove Printer</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <spacer name="horizontalSpacer_6">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>371</width>
+                   <height>17</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+              </layout>
+             </item>
+            </layout>
+           </widget>
+           <widget class="QWidget" name="policies">
+            <attribute name="title">
+             <string>Policies</string>
+            </attribute>
+            <layout class="QVBoxLayout" name="verticalLayout_6">
+             <item>
+              <widget class="QLabel" name="label_8">
+               <property name="font">
+                <font>
+                 <weight>75</weight>
+                 <bold>true</bold>
+                </font>
+               </property>
+               <property name="text">
+                <string>Banner Settings</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <layout class="QGridLayout" name="gridLayout_7">
+               <item row="0" column="0">
+                <widget class="QLabel" name="label_10">
+                 <property name="sizePolicy">
+                  <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
+                   <horstretch>0</horstretch>
+                   <verstretch>0</verstretch>
+                  </sizepolicy>
+                 </property>
+                 <property name="text">
+                  <string>Starting Banner:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="0" column="1">
+                <widget class="KComboBox" name="cmbPStartBanner"/>
+               </item>
+               <item row="0" column="2">
+                <spacer name="horizontalSpacer">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>314</width>
+                   <height>13</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+               <item row="1" column="0">
+                <widget class="QLabel" name="label_11">
+                 <property name="sizePolicy">
+                  <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
+                   <horstretch>0</horstretch>
+                   <verstretch>0</verstretch>
+                  </sizepolicy>
+                 </property>
+                 <property name="text">
+                  <string>Ending Banner:</string>
+                 </property>
+                 <property name="alignment">
+                  <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
+                 </property>
+                </widget>
+               </item>
+               <item row="1" column="1">
+                <widget class="KComboBox" name="cmbPEndBanner"/>
+               </item>
+               <item row="1" column="2">
+                <spacer name="horizontalSpacer_3">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>314</width>
+                   <height>13</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+              </layout>
+             </item>
+             <item>
+              <widget class="Line" name="line_3">
+               <property name="orientation">
+                <enum>Qt::Horizontal</enum>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QLabel" name="label_9">
+               <property name="font">
+                <font>
+                 <weight>75</weight>
+                 <bold>true</bold>
+                </font>
+               </property>
+               <property name="text">
+                <string>User and Group Permissions</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QRadioButton" name="rbtnPAllow">
+               <property name="text">
+                <string>Allow printing for everyone except these users.</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QRadioButton" name="rbtnPDeny">
+               <property name="text">
+                <string>Deny printing for everyone except these users</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QTreeWidget" name="tvPUsers">
+               <property name="rootIsDecorated">
+                <bool>false</bool>
+               </property>
+               <property name="headerHidden">
+                <bool>true</bool>
+               </property>
+               <column>
+                <property name="text">
+                 <string>1</string>
+                </property>
+               </column>
+              </widget>
+             </item>
+             <item>
+              <layout class="QHBoxLayout" name="horizontalLayout_7">
+               <item>
+                <widget class="KPushButton" name="btnPAddUser">
+                 <property name="text">
+                  <string>Add</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <widget class="KPushButton" name="btnPDelUser">
+                 <property name="text">
+                  <string>Remove</string>
+                 </property>
+                </widget>
+               </item>
+               <item>
+                <spacer name="horizontalSpacer_4">
+                 <property name="orientation">
+                  <enum>Qt::Horizontal</enum>
+                 </property>
+                 <property name="sizeHint" stdset="0">
+                  <size>
+                   <width>354</width>
+                   <height>20</height>
+                  </size>
+                 </property>
+                </spacer>
+               </item>
+              </layout>
+             </item>
+            </layout>
+           </widget>
+           <widget class="QWidget" name="tab_3">
+            <attribute name="title">
+             <string>Members</string>
+            </attribute>
+            <layout class="QGridLayout" name="gridLayout_15">
+             <item row="0" column="0" colspan="3">
+              <widget class="QLabel" name="label_47">
+               <property name="text">
+                <string>Add or Remove Members</string>
+               </property>
+              </widget>
+             </item>
+             <item row="1" column="0" rowspan="4">
+              <widget class="QListWidget" name="tvClassMembers"/>
+             </item>
+             <item row="1" column="1">
+              <spacer name="verticalSpacer_2">
+               <property name="orientation">
+                <enum>Qt::Vertical</enum>
+               </property>
+               <property name="sizeHint" stdset="0">
+                <size>
+                 <width>20</width>
+                 <height>125</height>
+                </size>
+               </property>
+              </spacer>
+             </item>
+             <item row="1" column="2" rowspan="4">
+              <widget class="QListWidget" name="tvClassNotMembers"/>
+             </item>
+             <item row="2" column="1">
+              <widget class="QPushButton" name="btnClassAddMember">
+               <property name="text">
+                <string/>
+               </property>
+              </widget>
+             </item>
+             <item row="3" column="1">
+              <widget class="QPushButton" name="btnClassDelMember">
+               <property name="text">
+                <string/>
+               </property>
+              </widget>
+             </item>
+             <item row="4" column="1">
+              <spacer name="verticalSpacer_3">
+               <property name="orientation">
+                <enum>Qt::Vertical</enum>
+               </property>
+               <property name="sizeHint" stdset="0">
+                <size>
+                 <width>20</width>
+                 <height>358</height>
+                </size>
+               </property>
+              </spacer>
+             </item>
+            </layout>
+           </widget>
+           <widget class="QWidget" name="tab_2">
+            <attribute name="title">
+             <string>Options</string>
+            </attribute>
+            <layout class="QVBoxLayout" name="verticalLayout_3">
+             <item>
+              <widget class="QWidget" name="optionsPageWidget" native="true">
+               <layout class="QGridLayout" name="gridLayout_5">
+                <item row="0" column="0">
+                 <layout class="QVBoxLayout" name="vbPOptions"/>
+                </item>
+               </layout>
+              </widget>
+             </item>
+             <item>
+              <spacer name="verticalSpacer">
+               <property name="orientation">
+                <enum>Qt::Vertical</enum>
+               </property>
+               <property name="sizeHint" stdset="0">
+                <size>
+                 <width>20</width>
+                 <height>531</height>
+                </size>
+               </property>
+              </spacer>
+             </item>
+            </layout>
+           </widget>
+           <widget class="QWidget" name="joboptions">
+            <attribute name="title">
+             <string>Job Options</string>
+            </attribute>
+            <layout class="QGridLayout" name="gridLayout_9">
+             <item row="0" column="0">
+              <widget class="QScrollArea" name="scrollArea">
+               <property name="verticalScrollBarPolicy">
+                <enum>Qt::ScrollBarAlwaysOn</enum>
+               </property>
+               <property name="widgetResizable">
+                <bool>true</bool>
+               </property>
+               <widget class="QWidget" name="scrollAreaWidgetContents">
+                <property name="geometry">
+                 <rect>
+                  <x>0</x>
+                  <y>0</y>
+                  <width>509</width>
+                  <height>1026</height>
+                 </rect>
+                </property>
+                <layout class="QHBoxLayout" name="horizontalLayout_3">
+                 <item>
+                  <widget class="QWidget" name="optionsPageWidget2" native="true">
+                   <layout class="QVBoxLayout" name="verticalLayout_2">
+                    <item>
+                     <widget class="QLabel" name="label136">
+                      <property name="text">
+                       <string>Specify the default job options for this printer.  Jobs
+arriving at this print server will have these options added
+if they are not already set by the application.</string>
+                      </property>
+                     </widget>
+                    </item>
+                    <item>
+                     <widget class="QLabel" name="label_13">
+                      <property name="text">
+                       <string>&lt;b&gt;Common Options&lt;/b&gt;</string>
+                      </property>
+                     </widget>
+                    </item>
+                    <item>
+                     <layout class="QGridLayout" name="gridLayout_11">
+                      <item row="0" column="0">
+                       <widget class="QLabel" name="label_14">
+                        <property name="text">
+                         <string>Copies</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="0" column="1">
+                       <widget class="QSpinBox" name="sbJOCopies"/>
+                      </item>
+                      <item row="0" column="2">
+                       <widget class="QPushButton" name="btnJOResetCopies">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="1" column="0">
+                       <widget class="QLabel" name="label_15">
+                        <property name="text">
+                         <string>Orientation</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="1" column="1">
+                       <widget class="QComboBox" name="cmbJOOrientationRequested">
+                        <item>
+                         <property name="text">
+                          <string>Portrait (no rotation)</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>Landscape (90°)</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>Reverse landscape (270°)</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>Reverse portrait (180°)</string>
+                         </property>
+                        </item>
+                       </widget>
+                      </item>
+                      <item row="1" column="2">
+                       <widget class="QPushButton" name="btnJOResetOrientationRequested">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="2" column="0" colspan="2">
+                       <widget class="QCheckBox" name="cbJOFitplot">
+                        <property name="text">
+                         <string>Scale to fit</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="2" column="2">
+                       <widget class="QPushButton" name="btnJOResetFitplot">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="3" column="0">
+                       <widget class="QLabel" name="label_17">
+                        <property name="text">
+                         <string>Pages per slide</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="3" column="1">
+                       <widget class="QComboBox" name="cmbJONumberUp">
+                        <item>
+                         <property name="text">
+                          <string>1</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>2</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>4</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>6</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>9</string>
+                         </property>
+                        </item>
+                        <item>
+                         <property name="text">
+                          <string>16</string>
+                         </property>
+                        </item>
+                       </widget>
+                      </item>
+                      <item row="3" column="2">
+                       <widget class="QPushButton" name="btnJOResetNumberUp">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="4" column="0" colspan="2">
+                       <layout class="QGridLayout" name="gridLayout_2">
+                        <item row="0" column="0">
+                         <widget class="QLabel" name="label_37">
+                          <property name="text">
+                           <string>Pages per side layout:</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="0" column="1" colspan="2">
+                         <widget class="QComboBox" name="cmbJONumberUpLayout">
+                          <item>
+                           <property name="text">
+                            <string>Left to right, top to bottom</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Left to right, bottom to top</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Right to left, top to bottom</string>
+                           </property>
+                          </item>
+                         </widget>
+                        </item>
+                        <item row="0" column="3">
+                         <widget class="QPushButton" name="btnJOResetNumberUpLayout">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="0">
+                         <widget class="QLabel" name="label_38">
+                          <property name="text">
+                           <string>Brightness:</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="1">
+                         <widget class="QSpinBox" name="sbJOBrightness"/>
+                        </item>
+                        <item row="1" column="2">
+                         <widget class="QLabel" name="label_44">
+                          <property name="text">
+                           <string>%</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="3">
+                         <widget class="QPushButton" name="btnJOResetBrightness">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="2" column="0">
+                         <widget class="QLabel" name="label_39">
+                          <property name="text">
+                           <string>Finishings:</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="2" column="1" colspan="2">
+                         <widget class="QComboBox" name="cmbJOFinishings">
+                          <item>
+                           <property name="text">
+                            <string>None</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Punch</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Cover</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Bind</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Saddle stitch</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Edge stitch</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Fold</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Trim</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Bale</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Booklet maker</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Job offset</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple (top left)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple (bottom left)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple (top right)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple (bottom right)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Edge stitch (left)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Edge stitch (top)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Edge stitch (right)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Edge stitch (bottom)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple dual (left)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple dual (top)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple dual (right)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Staple dual (bottom)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Bind (left)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Bind (top)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Bind (right)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Bind (bottom)</string>
+                           </property>
+                          </item>
+                         </widget>
+                        </item>
+                        <item row="2" column="3">
+                         <widget class="QPushButton" name="btnJOResetFinishings">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="3" column="0">
+                         <widget class="QLabel" name="label_42">
+                          <property name="text">
+                           <string>Job priority:</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="3" column="1" colspan="2">
+                         <widget class="QSpinBox" name="sbJOJobPriority"/>
+                        </item>
+                        <item row="3" column="3">
+                         <widget class="QPushButton" name="btnJOResetJobPriority">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="4" column="0">
+                         <widget class="QLabel" name="label_40">
+                          <property name="text">
+                           <string>Media:</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="4" column="1" colspan="2">
+                         <widget class="QComboBox" name="cmbJOMedia"/>
+                        </item>
+                        <item row="4" column="3">
+                         <widget class="QPushButton" name="btnJOResetMedia">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="5" column="0">
+                         <widget class="QLabel" name="label_41">
+                          <property name="text">
+                           <string>Sides:</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="5" column="1" colspan="2">
+                         <widget class="QComboBox" name="cmbJOSides">
+                          <item>
+                           <property name="text">
+                            <string>One-sided</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Two-sided (long edge)</string>
+                           </property>
+                          </item>
+                          <item>
+                           <property name="text">
+                            <string>Two-sided (short edge)</string>
+                           </property>
+                          </item>
+                         </widget>
+                        </item>
+                        <item row="5" column="3">
+                         <widget class="QPushButton" name="btnJOResetSides">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="6" column="0">
+                         <widget class="QLabel" name="label_43">
+                          <property name="text">
+                           <string>Hold until:</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="6" column="1" colspan="2">
+                         <widget class="QComboBox" name="cmbJOHoldUntil"/>
+                        </item>
+                        <item row="6" column="3">
+                         <widget class="QPushButton" name="btnJOResetHoldUntil">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                       </layout>
+                      </item>
+                     </layout>
+                    </item>
+                    <item>
+                     <widget class="QLabel" name="label_16">
+                      <property name="text">
+                       <string>&lt;b&gt;Image Options&lt;/b&gt;</string>
+                      </property>
+                     </widget>
+                    </item>
+                    <item>
+                     <layout class="QGridLayout" name="gridLayout_6">
+                      <item row="0" column="0" colspan="4">
+                       <widget class="QCheckBox" name="cbJOMirror">
+                        <property name="text">
+                         <string>Mirror</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="0" column="4">
+                       <widget class="QPushButton" name="btnJOResetMirror">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="1" column="0">
+                       <widget class="QLabel" name="label_18">
+                        <property name="text">
+                         <string>Scaling</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="1" column="1">
+                       <widget class="QSpinBox" name="sbJOScaling"/>
+                      </item>
+                      <item row="1" column="2">
+                       <widget class="QLabel" name="label_30">
+                        <property name="text">
+                         <string>%</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="1" column="3" colspan="2">
+                       <widget class="QPushButton" name="btnJOResetScaling">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="2" column="0" colspan="3">
+                       <layout class="QGridLayout" name="gridLayout_13">
+                        <item row="0" column="0">
+                         <widget class="QLabel" name="label_31">
+                          <property name="text">
+                           <string>Saturation</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="0" column="1">
+                         <widget class="QSpinBox" name="sbJOSaturation"/>
+                        </item>
+                        <item row="0" column="2">
+                         <widget class="QLabel" name="label_34">
+                          <property name="text">
+                           <string>%</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="0" column="3">
+                         <widget class="QPushButton" name="btnJOResetSaturation">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="0">
+                         <widget class="QLabel" name="label_32">
+                          <property name="text">
+                           <string>Hue adjustment</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="1">
+                         <widget class="QSpinBox" name="sbJOHue"/>
+                        </item>
+                        <item row="1" column="2">
+                         <widget class="QLabel" name="label_35">
+                          <property name="text">
+                           <string>°</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="3">
+                         <widget class="QPushButton" name="btnJOResetHue">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="2" column="0">
+                         <widget class="QLabel" name="label_33">
+                          <property name="text">
+                           <string>Gamma</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="2" column="1">
+                         <widget class="QSpinBox" name="sbJOGamma"/>
+                        </item>
+                        <item row="2" column="3">
+                         <widget class="QPushButton" name="btnJOResetGamma">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                       </layout>
+                      </item>
+                      <item row="2" column="3" colspan="2">
+                       <spacer name="horizontalSpacer_7">
+                        <property name="orientation">
+                         <enum>Qt::Horizontal</enum>
+                        </property>
+                        <property name="sizeHint" stdset="0">
+                         <size>
+                          <width>97</width>
+                          <height>94</height>
+                         </size>
+                        </property>
+                       </spacer>
+                      </item>
+                     </layout>
+                    </item>
+                    <item>
+                     <widget class="QLabel" name="label_19">
+                      <property name="text">
+                       <string>&lt;b&gt;Text Options&lt;/b&gt;</string>
+                      </property>
+                     </widget>
+                    </item>
+                    <item>
+                     <layout class="QGridLayout" name="gridLayout_10">
+                      <item row="0" column="0">
+                       <widget class="QLabel" name="label_20">
+                        <property name="text">
+                         <string>Character per inch:</string>
+                        </property>
+                        <property name="textFormat">
+                         <enum>Qt::PlainText</enum>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="0" column="1">
+                       <widget class="QSpinBox" name="sbJOCpi"/>
+                      </item>
+                      <item row="0" column="3">
+                       <widget class="QPushButton" name="btnJOResetCpi">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="1" column="0">
+                       <widget class="QLabel" name="label_21">
+                        <property name="text">
+                         <string>Lines per inch</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="1" column="1">
+                       <widget class="QSpinBox" name="sbJOLpi"/>
+                      </item>
+                      <item row="1" column="3">
+                       <widget class="QPushButton" name="btnJOResetLpi">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="2" column="0">
+                       <widget class="QLabel" name="label_22">
+                        <property name="text">
+                         <string>Left margin</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="2" column="1">
+                       <widget class="QSpinBox" name="sbJOPageLeft"/>
+                      </item>
+                      <item row="2" column="2">
+                       <widget class="QLabel" name="label_26">
+                        <property name="text">
+                         <string>Points</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="2" column="3">
+                       <widget class="QPushButton" name="btnJOResetPageLeft">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="3" column="0">
+                       <widget class="QLabel" name="label_23">
+                        <property name="text">
+                         <string>Right margin</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="3" column="1">
+                       <widget class="QSpinBox" name="sbJOPageRight"/>
+                      </item>
+                      <item row="3" column="2">
+                       <widget class="QLabel" name="label_27">
+                        <property name="text">
+                         <string>Points</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="3" column="3">
+                       <widget class="QPushButton" name="btnJOResetPageRight">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="4" column="0">
+                       <widget class="QLabel" name="label_24">
+                        <property name="text">
+                         <string>Top margin</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="4" column="1">
+                       <widget class="QSpinBox" name="sbJOPageTop"/>
+                      </item>
+                      <item row="4" column="2">
+                       <widget class="QLabel" name="label_28">
+                        <property name="text">
+                         <string>Points</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="4" column="3">
+                       <widget class="QPushButton" name="btnJOResetPageTop">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="5" column="0">
+                       <widget class="QLabel" name="label_25">
+                        <property name="text">
+                         <string>Bottom margin</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="5" column="1">
+                       <widget class="QSpinBox" name="sbJOPageBottom"/>
+                      </item>
+                      <item row="5" column="2">
+                       <widget class="QLabel" name="label_29">
+                        <property name="text">
+                         <string>Points</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="5" column="3">
+                       <widget class="QPushButton" name="btnJOResetPageBottom">
+                        <property name="text">
+                         <string>Reset</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item row="6" column="0" colspan="2">
+                       <layout class="QGridLayout" name="gridLayout_14">
+                        <item row="0" column="0" colspan="2">
+                         <widget class="QCheckBox" name="cbJOPrettyPrint">
+                          <property name="text">
+                           <string>Pretty print</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="0" column="2">
+                         <widget class="QPushButton" name="btnJOResetPrettyPrint">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="0" colspan="2">
+                         <widget class="QCheckBox" name="cbJOWrap">
+                          <property name="text">
+                           <string>Word wrap</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="1" column="2">
+                         <widget class="QPushButton" name="btnJOResetWrap">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="2" column="0">
+                         <widget class="QLabel" name="label_36">
+                          <property name="text">
+                           <string>Columns</string>
+                          </property>
+                         </widget>
+                        </item>
+                        <item row="2" column="1">
+                         <widget class="QSpinBox" name="sbJOColumns"/>
+                        </item>
+                        <item row="2" column="2">
+                         <widget class="QPushButton" name="btnJOResetColumns">
+                          <property name="text">
+                           <string>Reset</string>
+                          </property>
+                         </widget>
+                        </item>
+                       </layout>
+                      </item>
+                     </layout>
+                    </item>
+                    <item>
+                     <widget class="QLabel" name="label_45">
+                      <property name="text">
+                       <string/>
+                      </property>
+                     </widget>
+                    </item>
+                    <item>
+                     <widget class="QWidget" name="tblJOOtherWidget" native="true">
+                      <layout class="QGridLayout" name="gridLayout_12">
+                       <item row="0" column="0">
+                        <layout class="QGridLayout" name="tblJOOther"/>
+                       </item>
+                      </layout>
+                     </widget>
+                    </item>
+                    <item>
+                     <widget class="QLabel" name="label_46">
+                      <property name="text">
+                       <string>To add a new option, enter its name in the box below and click to add.</string>
+                      </property>
+                     </widget>
+                    </item>
+                    <item>
+                     <layout class="QHBoxLayout" name="horizontalLayout_2">
+                      <item>
+                       <widget class="QLineEdit" name="entNewJobOption"/>
+                      </item>
+                      <item>
+                       <widget class="QPushButton" name="btnNewJobOption">
+                        <property name="text">
+                         <string>Add</string>
+                        </property>
+                       </widget>
+                      </item>
+                      <item>
+                       <spacer name="horizontalSpacer_9">
+                        <property name="orientation">
+                         <enum>Qt::Horizontal</enum>
+                        </property>
+                        <property name="sizeHint" stdset="0">
+                         <size>
+                          <width>40</width>
+                          <height>20</height>
+                         </size>
+                        </property>
+                       </spacer>
+                      </item>
+                     </layout>
+                    </item>
+                   </layout>
+                  </widget>
+                 </item>
+                 <item>
+                  <spacer name="horizontalSpacer_8">
+                   <property name="orientation">
+                    <enum>Qt::Horizontal</enum>
+                   </property>
+                   <property name="sizeHint" stdset="0">
+                    <size>
+                     <width>119</width>
+                     <height>1018</height>
+                    </size>
+                   </property>
+                  </spacer>
+                 </item>
+                </layout>
+               </widget>
+              </widget>
+             </item>
+            </layout>
+           </widget>
+          </widget>
+         </item>
+        </layout>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_4" />
-    </widget>
-   </item>
-   <item row="1" column="1" >
-    <widget class="QPushButton" name="btnConflict" >
-     <property name="text" >
-      <string/>
-     </property>
-    </widget>
-   </item>
-   <item row="1" column="2" >
-    <widget class="QPushButton" name="btnPrinterPropertiesApply" >
-     <property name="text" >
-      <string>Apply</string>
-     </property>
-    </widget>
-   </item>
-   <item row="1" column="3" >
-    <widget class="QPushButton" name="btnRevert" >
-     <property name="text" >
-      <string>Revert</string>
-     </property>
+     <widget class="QWidget" name="page_4"/>
     </widget>
    </item>
   </layout>
  </widget>
+ <customwidgets>
+  <customwidget>
+   <class>KComboBox</class>
+   <extends>QComboBox</extends>
+   <header>kcombobox.h</header>
+  </customwidget>
+  <customwidget>
+   <class>KLineEdit</class>
+   <extends>QLineEdit</extends>
+   <header>klineedit.h</header>
+  </customwidget>
+  <customwidget>
+   <class>KPushButton</class>
+   <extends>QPushButton</extends>
+   <header>kpushbutton.h</header>
+  </customwidget>
+ </customwidgets>
  <resources/>
  <connections/>
 </ui>
