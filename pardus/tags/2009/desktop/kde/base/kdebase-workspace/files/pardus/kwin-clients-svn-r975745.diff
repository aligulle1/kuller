diff -Naur kwin/clients-orig/kde2/config/config.cpp kwin/clients/kde2/config/config.cpp
--- kwin/clients-orig/kde2/config/config.cpp	2008-06-03 12:34:27.000000000 +0300
+++ kwin/clients/kde2/config/config.cpp	2009-06-03 19:37:08.692139208 +0300
@@ -45,9 +45,10 @@
 //		  Configure tab in kwindecoration
 
 KDE2Config::KDE2Config( KConfig* conf, QWidget* parent )
-	: QObject( parent ), c(conf)
+	: QObject( parent )
 {
 	KGlobal::locale()->insertCatalog("kwin_clients");
+	c = new KConfig("kwinKDE2rc");
 	highcolor = QPixmap::defaultDepth() > 8;
 	gb = new KVBox( parent );
 	gb->setSpacing( KDialog::spacingHint() );
@@ -72,11 +73,6 @@
 			"for high-color displays; otherwise, no gradients are drawn.") );
 	}
 
-	// Load configuration options
-	c = new KConfig("kwinKDE2rc");
-	KConfigGroup cg(c, "General");
-	load( cg );
-
 	// Ensure we track user changes properly
 	connect( cbShowStipple, SIGNAL(clicked()), 
 			 this, SLOT(slotSelectionChanged()) );
@@ -86,6 +82,9 @@
 		connect( cbUseGradients, SIGNAL(clicked()), 
 				 this, SLOT(slotSelectionChanged()) );
 
+	// Load configuration options
+	load( KConfigGroup() );
+
 	// Make the widgets visible in kwindecoration
 	gb->show();
 }
@@ -94,6 +93,7 @@
 KDE2Config::~KDE2Config()
 {
 	delete gb;
+	delete c;
 }
 
 
@@ -107,7 +107,7 @@
 // It is passed the open config from kwindecoration to improve efficiency
 void KDE2Config::load( const KConfigGroup&  )
 {
-	KConfigGroup cg(c, "KDE2");
+	KConfigGroup cg(c, "General");
 	bool override = cg.readEntry( "ShowTitleBarStipple", true);
 	cbShowStipple->setChecked( override );
 
@@ -124,7 +124,7 @@
 // Saves the configurable options to the kwinrc config file
 void KDE2Config::save( KConfigGroup&  )
 {
-	KConfigGroup cg(c, "KDE2");
+	KConfigGroup cg(c, "General");
 	cg.writeEntry( "ShowTitleBarStipple", cbShowStipple->isChecked() );
 	cg.writeEntry( "ShowGrabBar", cbShowGrabBar->isChecked() );
 
diff -Naur kwin/clients-orig/keramik/config/keramikconfig.ui kwin/clients/keramik/config/keramikconfig.ui
--- kwin/clients-orig/keramik/config/keramikconfig.ui	2008-01-05 01:55:39.000000000 +0200
+++ kwin/clients/keramik/config/keramikconfig.ui	2009-06-03 19:37:08.695139129 +0300
@@ -1,7 +1,4 @@
 <ui version="4.0" stdsetdef="1" >
-  <author></author>
-  <comment></comment>
-  <exportmacro></exportmacro>
   <class>KeramikConfigUI</class>
   <widget class="QWidget" name="KeramikConfigUI" >
     <property name="geometry" >
@@ -61,6 +58,4 @@
       </item>
     </layout>
   </widget>
-  <layoutdefault spacing="6" margin="11" />
-  <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
-</ui>
+  </ui>
diff -Naur kwin/clients-orig/kwmtheme/kwmthemeclient.cpp kwin/clients/kwmtheme/kwmthemeclient.cpp
--- kwin/clients-orig/kwmtheme/kwmthemeclient.cpp	2008-11-19 12:18:03.000000000 +0200
+++ kwin/clients/kwmtheme/kwmthemeclient.cpp	2009-06-03 19:37:08.694139169 +0300
@@ -92,7 +92,7 @@
 
 static void create_pixmaps()
 {
-    const char *keys[] = {"wm_top", "wm_bottom", "wm_left", "wm_right",
+    const char * const keys[] = {"wm_top", "wm_bottom", "wm_left", "wm_right",
     "wm_topleft", "wm_topright", "wm_bottomleft", "wm_bottomright"};
 
     if(pixmaps_created)
@@ -292,7 +292,7 @@
     QString val;
     MyButton *btn;
     int i;
-    static const char *defaultButtons[]={"Menu","Sticky","Off","Iconify",
+    static const char * const defaultButtons[]={"Menu","Sticky","Off","Iconify",
         "Maximize","Close"};
     static const char keyOffsets[]={"ABCDEF"};
     for(i=0; i < 6; ++i){
diff -Naur kwin/clients-orig/kwmtheme/kwmtheme.desktop kwin/clients/kwmtheme/kwmtheme.desktop
--- kwin/clients-orig/kwmtheme/kwmtheme.desktop	2009-05-28 22:21:20.000000000 +0300
+++ kwin/clients/kwmtheme/kwmtheme.desktop	2009-06-03 19:37:08.693139208 +0300
@@ -9,6 +9,7 @@
 Name[bn_IN]=KWM থিম
 Name[br]=Gwiskad KWM
 Name[ca]=Tema KWM
+Name[ca@valencia]=Tema KWM
 Name[cs]=Téma KWM
 Name[csb]=Témë KWM
 Name[cy]=Thema KWM 
diff -Naur kwin/clients-orig/laptop/laptop.desktop kwin/clients/laptop/laptop.desktop
--- kwin/clients-orig/laptop/laptop.desktop	2009-05-28 22:21:20.000000000 +0300
+++ kwin/clients/laptop/laptop.desktop	2009-06-03 19:37:08.692139208 +0300
@@ -8,6 +8,7 @@
 Name[bn_IN]=ল্যাপ-টপ
 Name[br]=Hezoug
 Name[ca]=Portàtil
+Name[ca@valencia]=Portàtil
 Name[cs]=Notebook
 Name[cy]=Gluniadur
 Name[da]=Bærbar
@@ -49,6 +50,7 @@
 Name[pt]=Portátil
 Name[ru]=Ноутбук
 Name[se]=Mátkedihtor
+Name[si]=ලැප්ටොප්
 Name[sl]=Prenosnik
 Name[sr]=Лаптоп
 Name[sv]=Bärbar dator
diff -Naur kwin/clients-orig/modernsystem/modernsystem.desktop kwin/clients/modernsystem/modernsystem.desktop
--- kwin/clients-orig/modernsystem/modernsystem.desktop	2009-03-26 17:42:16.000000000 +0300
+++ kwin/clients/modernsystem/modernsystem.desktop	2009-06-03 19:37:08.696139090 +0300
@@ -9,6 +9,7 @@
 Name[bn_IN]=আধুনিক সিস্টেম
 Name[br]=Reizhiad Nevez
 Name[ca]=Sistema modern
+Name[ca@valencia]=Sistema modern
 Name[cs]=Moderní systém
 Name[csb]=Mòdernô systema
 Name[cy]=Cysawd Cyfoes
@@ -56,6 +57,7 @@
 Name[ro]=Sistem modern
 Name[ru]=Современная система
 Name[se]=Áigeguovdilis vuogádat
+Name[si]=නවතම පද්ධති
 Name[sk]=Moderný systém
 Name[sl]=Moderni sistem
 Name[sr]=Модеран систем
diff -Naur kwin/clients-orig/oxygen/config/config.cpp kwin/clients/oxygen/config/config.cpp
--- kwin/clients-orig/oxygen/config/config.cpp	2008-10-09 12:46:48.000000000 +0300
+++ kwin/clients/oxygen/config/config.cpp	2009-06-03 19:37:08.697139370 +0300
@@ -48,7 +48,7 @@
     c = new KConfig( "oxygenrc" );
     KConfigGroup cg(c, "Windeco");
     ui = new OxygenConfigUI( parent );
-    connect( ui->showStripes,   SIGNAL(clicked()), SIGNAL(changed()) );
+    connect( ui->showStripes, SIGNAL(clicked()), SIGNAL(changed()) );
     connect( ui->titleAlignmentLeft,   SIGNAL(clicked()), SIGNAL(changed()) );
     connect( ui->titleAlignmentCenter,   SIGNAL(clicked()), SIGNAL(changed()) );
     connect( ui->titleAlignmentRight,   SIGNAL(clicked()), SIGNAL(changed()) );
diff -Naur kwin/clients-orig/oxygen/config/oxygenconfig.ui kwin/clients/oxygen/config/oxygenconfig.ui
--- kwin/clients-orig/oxygen/config/oxygenconfig.ui	2008-10-09 12:46:48.000000000 +0300
+++ kwin/clients/oxygen/config/oxygenconfig.ui	2009-06-03 19:37:08.697139370 +0300
@@ -1,47 +1,48 @@
-<ui version="4.0" >
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
  <class>OxygenConfigUI</class>
- <widget class="QWidget" name="OxygenConfigUI" >
-  <property name="geometry" >
+ <widget class="QWidget" name="OxygenConfigUI">
+  <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>364</width>
-    <height>234</height>
+    <height>92</height>
    </rect>
   </property>
-  <property name="windowTitle" >
+  <property name="windowTitle">
    <string>Oxygen</string>
   </property>
-  <layout class="QVBoxLayout" >
-   <property name="margin" >
+  <layout class="QVBoxLayout">
+   <property name="margin">
     <number>0</number>
    </property>
    <item>
-    <widget class="QGroupBox" name="groupBox" >
-     <property name="title" >
+    <widget class="QGroupBox" name="groupBox">
+     <property name="title">
       <string>Title &amp;Alignment</string>
      </property>
-     <layout class="QHBoxLayout" name="horizontalLayout" >
+     <layout class="QHBoxLayout" name="horizontalLayout">
       <item>
-       <widget class="QRadioButton" name="titleAlignmentLeft" >
-        <property name="enabled" >
+       <widget class="QRadioButton" name="titleAlignmentLeft">
+        <property name="enabled">
          <bool>true</bool>
         </property>
-        <property name="text" >
+        <property name="text">
          <string>&amp;Left</string>
         </property>
        </widget>
       </item>
       <item>
-       <widget class="QRadioButton" name="titleAlignmentCenter" >
-        <property name="text" >
+       <widget class="QRadioButton" name="titleAlignmentCenter">
+        <property name="text">
          <string>Center</string>
         </property>
        </widget>
       </item>
       <item>
-       <widget class="QRadioButton" name="titleAlignmentRight" >
-        <property name="text" >
+       <widget class="QRadioButton" name="titleAlignmentRight">
+        <property name="text">
          <string>&amp;Right</string>
         </property>
        </widget>
@@ -50,19 +51,17 @@
     </widget>
    </item>
    <item>
-    <widget class="QCheckBox" name="showStripes" >
-     <property name="whatsThis" >
+    <widget class="QCheckBox" name="showStripes">
+     <property name="whatsThis">
       <string>When enabled, this option increases the visibility of the window titlebar by showing stripes</string>
      </property>
-     <property name="text" >
+     <property name="text">
       <string>Show stripes next to the title</string>
      </property>
     </widget>
    </item>
   </layout>
  </widget>
- <layoutdefault spacing="6" margin="11" />
- <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
- <resources/>
+  <resources/>
  <connections/>
 </ui>
diff -Naur kwin/clients-orig/oxygen/lib/helper.cpp kwin/clients/oxygen/lib/helper.cpp
--- kwin/clients-orig/oxygen/lib/helper.cpp	2009-02-27 00:16:05.000000000 +0200
+++ kwin/clients/oxygen/lib/helper.cpp	2009-06-03 19:37:08.696139090 +0300
@@ -45,6 +45,7 @@
 
     m_backgroundCache.setMaxCost(64);
     m_windecoButtonCache.setMaxCost(64);
+    m_windecoButtonGlowCache.setMaxCost(64);
 }
 
 KSharedConfigPtr OxygenHelper::config() const
@@ -106,6 +107,7 @@
 {
     m_backgroundCache.clear();
     m_windecoButtonCache.clear();
+    m_windecoButtonGlowCache.clear();
 }
 
 bool OxygenHelper::lowThreshold(const QColor &color)
@@ -284,7 +286,7 @@
 
 QPixmap OxygenHelper::windecoButton(const QColor &color, bool pressed, int size)
 {
-    quint64 key = (quint64(color.rgba()) << 32) | (size << 1) | pressed;
+    quint64 key = (quint64(color.rgba()) << 32) | (size << 1) | (int)pressed;
     QPixmap *pixmap = m_windecoButtonCache.object(key);
 
     if (!pixmap)
@@ -298,35 +300,42 @@
 
         double u = size/21.0;
 
-        QColor light = calcLightColor(color);
-        QColor dark = alphaColor(calcShadowColor(color), 0.6);
+        QColor light  = calcLightColor(color);
+        QColor dark   = calcDarkColor(color);
+        QColor shadow = calcShadowColor(color);
 
         QRectF rect(0.0, 0.0, size, size);
-        QRectF buttonRect = rect.adjusted(3*u,3*u,-3*u,-3*u);
+        QRectF buttonRect = rect.adjusted(2*u,2*u,-2*u,-2*u);
+
+        QLinearGradient fill(QPointF(0.0, 0.0*u),
+                QPointF(0.0, 21.0*u));
+        fill.setColorAt(0.0, alphaColor(light, 0.7));
+        fill.setColorAt(1.0, alphaColor(dark, 0.7));
 
-        p.setBrush(color);
+        p.setBrush(fill);
         p.drawEllipse(buttonRect);
         p.setBrush(Qt::NoBrush);
 
-        QLinearGradient darkgr(QPointF(1.0*u, 0.0),
-                QPointF(20.0*u, 0.0));
-        darkgr.setColorAt(0.0, Qt::transparent);
-        darkgr.setColorAt(0.5, dark);
-        darkgr.setColorAt(1.0, Qt::transparent);
-
-        QLinearGradient lightgr(QPointF(1.0*u, 0.0),
-                QPointF(20.0*u, 0.0));
+        // shadow
+        if (pressed)
+        {
+            p.setPen(alphaColor(dark, 0.4));
+            p.drawEllipse(buttonRect.adjusted(0.9, 0.6, -0.7, -0.7).adjusted(1.7,1.7,-1.7,-1.7));
+            p.setPen(alphaColor(dark, 0.8));
+            p.drawEllipse(buttonRect.adjusted(0.9, 0.6, -0.7, -0.7).adjusted(1.2,1.2,-1.2,-1.2));
+        }
+        p.setPen(QPen(KColorUtils::mix(dark, shadow, 0.12), 2.0));
+        p.drawEllipse(buttonRect.adjusted(0.9, 0.6, -0.7, -0.7).adjusted(0,0.1,0,-0.1));
+        p.setPen(QPen(KColorUtils::mix(dark, shadow, 0.6), 1.2));
+        p.drawEllipse(buttonRect.adjusted(1.0, 1.4, -0.8, -0.8));
+
+        // reflection
+        QLinearGradient lightgr(QPointF(0.0, 0.0*u),
+                QPointF(0.0, 21.0*u));
         lightgr.setColorAt(0.0, Qt::transparent);
-        lightgr.setColorAt(0.5, light);
-        lightgr.setColorAt(1.0, Qt::transparent);
-
-        p.setPen(QPen(darkgr, 1.5));
-        p.drawEllipse(buttonRect);
-        p.setPen(QPen(lightgr, 1.5));
-        if (!pressed)
-            p.drawEllipse(buttonRect.adjusted(0.0, 1.0, 0.0, 1.0));
-        else
-            p.drawEllipse(buttonRect.adjusted(1.0, 1.5, -1.0, 1.0));
+        lightgr.setColorAt(1.0, light);
+        p.setPen(QPen(lightgr, 1.7));
+        p.drawEllipse(buttonRect.adjusted(0.0, -0.5, -0.1, 0.0));
 
         m_windecoButtonCache.insert(key, pixmap);
     }
@@ -334,6 +343,48 @@
     return *pixmap;
 }
 
+QPixmap OxygenHelper::windecoButtonGlow(const QColor &color, int size)
+{
+    quint64 key = (quint64(color.rgba()) << 32) | size;
+    QPixmap *pixmap = m_windecoButtonGlowCache.object(key);
+
+    if (!pixmap)
+    {
+        pixmap = new QPixmap(size, size);
+        pixmap->fill(Qt::transparent);
+
+        QPainter p(pixmap);
+        p.setRenderHints(QPainter::Antialiasing);
+        p.setPen(Qt::NoPen);
+
+        double u = size/21.0;
+        QRectF rect(0.0, 0.0, size, size);
+        QRectF buttonRect = rect.adjusted(2*u,2*u,-2*u,-2*u);
+
+        //mask
+        p.setBrush(QColor(0,0,0,125));
+        p.drawEllipse(rect.adjusted(u, 0, -u, -2*u));
+
+        //glow
+        QColor dark  = calcDarkColor(color);
+        QColor light = calcLightColor(color);
+
+        QRadialGradient glow(QPointF(size/2.0, size/2.0 + 0.25), size/2.0);
+        glow.setColorAt(12.0 / 21.0, Qt::transparent);
+        glow.setColorAt(16.0 / 21.0, dark);
+        glow.setColorAt(18.0 / 21.0, alphaColor(light, 0.25));
+        glow.setColorAt(20.0 / 21.0, Qt::transparent);
+
+        p.setCompositionMode(QPainter::CompositionMode_SourceIn);
+        p.setBrush(glow);
+        p.drawEllipse(rect);
+
+        m_windecoButtonGlowCache.insert(key, pixmap);
+    }
+
+    return *pixmap;
+}
+
 QPixmap OxygenHelper::glow(const QColor &color, int size, int rsize)
 {
     QPixmap pixmap(rsize, rsize);
diff -Naur kwin/clients-orig/oxygen/lib/helper.h kwin/clients/oxygen/lib/helper.h
--- kwin/clients-orig/oxygen/lib/helper.h	2009-01-01 18:30:15.000000000 +0200
+++ kwin/clients/oxygen/lib/helper.h	2009-06-03 19:37:08.696139090 +0300
@@ -65,6 +65,7 @@
     QLinearGradient decoGradient(const QRect &r, const QColor &color);
 
     QPixmap windecoButton(const QColor &color, bool pressed, int size = 21);
+    QPixmap windecoButtonGlow(const QColor &color, int size = 21);
 
     void drawFloatFrame(QPainter *p, const QRect r, const QColor &color, bool drawUglyShadow=true, bool isActive=false, const QColor &frameColor=QColor()) const;
 
@@ -83,6 +84,7 @@
 
     QCache<quint64, QPixmap> m_backgroundCache;
     QCache<quint64, QPixmap> m_windecoButtonCache;
+    QCache<quint64, QPixmap> m_windecoButtonGlowCache;
 };
 
 #endif // __OXYGEN_HELPER_H
diff -Naur kwin/clients-orig/oxygen/oxygenbutton.cpp kwin/clients/oxygen/oxygenbutton.cpp
--- kwin/clients-orig/oxygen/oxygenbutton.cpp	2009-01-01 18:25:47.000000000 +0200
+++ kwin/clients/oxygen/oxygenbutton.cpp	2009-06-03 19:37:08.697139370 +0300
@@ -200,11 +200,13 @@
 
     dark.setAlpha(120);
 
-    if(client_.isActive()) {
+    if (client_.isActive())
+    {
         helper_.drawSeparator(&painter, QRect(x, titleHeight-1.5, w, 2), color, Qt::Horizontal);
     }
     
-    if (type_ == ButtonMenu) {
+    if (type_ == ButtonMenu)
+    {
         // we paint the mini icon (which is 16 pixels high)
         int dx = (width() - 16) / 2;
         int dy = (height() - 16) / 2;
@@ -214,27 +216,44 @@
 
 
     if(client_.maximizeMode() == OxygenClient::MaximizeRestore)
+    {
         painter.translate(0,-1);
+    }
 
     QColor bg = helper_.backgroundTopColor(pal.window().color());
 
+    // get icon color
     color = buttonDetailColor(pal);
-    if(status_ == Oxygen::Hovered || status_ == Oxygen::Pressed) {
-        if(type_ == ButtonClose)
+    if (status_ == Oxygen::Hovered || status_ == Oxygen::Pressed)
+    {
+        if (type_ == ButtonClose)
+        {
             color = KColorScheme(pal.currentColorGroup()).foreground(KColorScheme::NegativeText).color();
+        }
         else
+        {
             color = KColorScheme(pal.currentColorGroup()).decoration(KColorScheme::HoverColor).color();
+        }
     }
-    QLinearGradient lg = helper_.decoGradient(QRect(4,4,13,13), color);
+
+    // draw button
     painter.drawPixmap(0, 0, helper_.windecoButton(pal.window().color(), status_ == Oxygen::Pressed));
 
-    if (client_.isActive()) {
+    // draw glow on hover
+    if (status_ == Oxygen::Hovered)
+    {
+        painter.drawPixmap(0, 0, helper_.windecoButtonGlow(color));
+    }
+
+    if (client_.isActive())
+    {
         painter.setRenderHints(QPainter::Antialiasing);
         painter.setBrush(Qt::NoBrush);
-        painter.setPen(QPen(lg, 2.2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));
+        painter.setPen(QPen(color, 1.4, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));
         drawIcon(&painter, pal, type_);
     }
-    else {
+    else
+    {
         // outlined mode
         QPixmap pixmap(size());
         pixmap.fill(Qt::transparent);
diff -Naur kwin/clients-orig/oxygen/oxygenclient.cpp kwin/clients/oxygen/oxygenclient.cpp
--- kwin/clients-orig/oxygen/oxygenclient.cpp	2009-01-17 13:00:20.000000000 +0200
+++ kwin/clients/oxygen/oxygenclient.cpp	2009-06-03 19:37:08.697139370 +0300
@@ -122,6 +122,7 @@
 int OxygenClient::layoutMetric(LayoutMetric lm, bool respectWindowState, const KCommonDecorationButton *btn) const
 {
     bool maximized = maximizeMode()==MaximizeFull && !options()->moveResizeMaximizedWindows();
+    int frameWidth = OxygenFactory::borderSize();
 
     switch (lm) {
         case LM_BorderLeft:
@@ -131,7 +132,13 @@
             if (respectWindowState && maximized) {
                 return 0;
             } else {
-                return BFRAMESIZE;
+                // Even for thin borders (2px wide) we want to preserve
+                // the rounded corners having a minimum height of 7px
+                if (lm == LM_BorderBottom) {
+                    return qMax(frameWidth, 7);
+                } else {
+                    return frameWidth;
+                }
             }
         }
 
@@ -273,8 +280,6 @@
     Q_UNUSED(e)
     if (!OxygenFactory::initialized()) return;
 
-    updateButtons();
-
     QPalette palette = widget()->palette();
     QPainter painter(widget());
 
@@ -339,12 +344,14 @@
         if (align & Qt::AlignLeft) {
             int left = titleLeft + QFontMetrics(options()->font(isActive(), false)).width(caption()) + 4;
             int right = titleLeft + titleWidth;
-            drawScratch(&painter, palette, left, right, titleTop+6);
+            if (left < right)
+                drawStripes(&painter, palette, left, right, titleTop+6);
         }
         if (align & Qt::AlignRight) {
             int left = titleLeft;
             int right = titleLeft + titleWidth - QFontMetrics(options()->font(isActive(), false)).width(caption()) - 4;
-            drawScratch(&painter, palette, right, left, titleTop+6);
+            if (left < right)
+                drawStripes(&painter, palette, right, left, titleTop+6);
         }
         if (align & Qt::AlignHCenter) {
             int textWidth = QFontMetrics(options()->font(isActive(), false)).width(caption());
@@ -352,8 +359,10 @@
             int centerLeft = titleLeft + titleWidth/2 - textWidth/2 - 4;
             int centerRight = titleLeft + titleWidth/2 + textWidth/2 + 4;
             int right = titleLeft + titleWidth;
-            drawScratch(&painter, palette, centerLeft, left, titleTop+6);
-            drawScratch(&painter, palette, centerRight, right, titleTop+6);
+            if (left < centerLeft && right > centerRight) {
+                drawStripes(&painter, palette, centerLeft, left, titleTop+6);
+                drawStripes(&painter, palette, centerRight, right, titleTop+6);
+            }
         }
     }
 
@@ -384,19 +393,19 @@
     renderDot(&painter, QPointF(6.5, 2.5), 1.8);
 }
 
-void OxygenClient::drawScratch(QPainter *p, QPalette &palette, const int start, const int end, const int topMargin)
+void OxygenClient::drawStripes(QPainter *p, QPalette &palette, const int start, const int end, const int topMargin)
 {
-    QLinearGradient scratchlg(QPoint(start,0), QPoint(end,0));
-    scratchlg.setColorAt(0.0, Qt::transparent);
-    scratchlg.setColorAt(0.05, KDecoration::options()->color(ColorTitleBar));
-    scratchlg.setColorAt(1.0, Qt::transparent);
-    QPen pen1(scratchlg, 0.5);
-
-    QLinearGradient scratchlg2(QPoint(start,0), QPoint(end,0));
-    scratchlg2.setColorAt(0.0, Qt::transparent);
-    scratchlg2.setColorAt(0.05, helper_.calcLightColor(palette.color(QPalette::Window)));
-    scratchlg2.setColorAt(1.0, Qt::transparent);
-    QPen pen2(scratchlg2, 0.5);
+    QLinearGradient stripeGradient(QPoint(start,0), QPoint(end,0));
+    stripeGradient.setColorAt(0.0, Qt::transparent);
+    stripeGradient.setColorAt(0.05, KDecoration::options()->color(ColorTitleBar));
+    stripeGradient.setColorAt(1.0, Qt::transparent);
+    QPen pen1(stripeGradient, 0.5);
+
+    QLinearGradient stripeGradient2(QPoint(start,0), QPoint(end,0));
+    stripeGradient2.setColorAt(0.0, Qt::transparent);
+    stripeGradient2.setColorAt(0.05, helper_.calcLightColor(palette.color(QPalette::Window)));
+    stripeGradient2.setColorAt(1.0, Qt::transparent);
+    QPen pen2(stripeGradient2, 0.5);
 
     bool antialiasing = p->testRenderHint(QPainter::Antialiasing);
     p->setRenderHint(QPainter::Antialiasing, false);
diff -Naur kwin/clients-orig/oxygen/oxygenclient.h kwin/clients/oxygen/oxygenclient.h
--- kwin/clients-orig/oxygen/oxygenclient.h	2008-10-23 02:03:39.000000000 +0300
+++ kwin/clients/oxygen/oxygenclient.h	2009-06-03 19:37:08.697139370 +0300
@@ -56,7 +56,7 @@
 
 private:
     void paintEvent(QPaintEvent *e);
-    void drawScratch(QPainter *p, QPalette &palette, const int start, const int end, const int topMargin);
+    void drawStripes(QPainter *p, QPalette &palette, const int start, const int end, const int topMargin);
     QColor titlebarTextColor(const QPalette &palette);
     bool colorCacheInvalid_;
     QColor cachedTitlebarTextColor_;
diff -Naur kwin/clients-orig/oxygen/oxygen.cpp kwin/clients/oxygen/oxygen.cpp
--- kwin/clients-orig/oxygen/oxygen.cpp	2008-11-28 17:33:22.000000000 +0200
+++ kwin/clients/oxygen/oxygen.cpp	2009-06-03 19:37:08.697139370 +0300
@@ -51,6 +51,7 @@
 bool OxygenFactory::initialized_ = false;
 Qt::Alignment OxygenFactory::titleAlignment_ = Qt::AlignLeft;
 bool OxygenFactory::showStripes_ = true;
+int OxygenFactory::borderSize_ = 4; // BorderSize::BorderNormal
 
 //////////////////////////////////////////////////////////////////////////////
 // OxygenFactory()
@@ -100,6 +101,31 @@
         resetDecorations(changed);
         return false;
     }
+
+    // taken from plastik
+    switch(KDecoration::options()->preferredBorderSize( this )) {
+    case BorderTiny:
+        borderSize_ = 2;
+        break;
+    case BorderLarge:
+        borderSize_ = 8;
+        break;
+    case BorderVeryLarge:
+        borderSize_ = 12;
+        break;
+    case BorderHuge:
+        borderSize_ = 18;
+        break;
+    case BorderVeryHuge:
+        borderSize_ = 27;
+        break;
+    case BorderOversized:
+        borderSize_ = 40;
+        break;
+    case BorderNormal:
+    default:
+        borderSize_ = 4;
+    }
 }
 
 //////////////////////////////////////////////////////////////////////////////
@@ -123,10 +149,36 @@
     else if (value == "Right")
         titleAlignment_ = Qt::AlignRight;
 
-    bool oldstripes = showStripes;    
+    int oldBorderSize = borderSize_;
+    switch(KDecoration::options()->preferredBorderSize( this )) {
+    case BorderTiny:
+        borderSize_ = 2;
+        break;
+    case BorderLarge:
+        borderSize_ = 8;
+        break;
+    case BorderVeryLarge:
+        borderSize_ = 12;
+        break;
+    case BorderHuge:
+        borderSize_ = 18;
+        break;
+    case BorderVeryHuge:
+        borderSize_ = 27;
+        break;
+    case BorderOversized:
+        borderSize_ = 40;
+        break;
+    case BorderNormal:
+    default:
+        borderSize_ = 4;
+    }
+
+    bool oldstripes = showStripes_;    
     showStripes_ = group.readEntry( "ShowStripes", true );
 
-    if (oldalign == titleAlignment_ && oldstripes == showStripes_)
+    if (oldalign == titleAlignment_ && oldstripes == showStripes_
+            && oldBorderSize == borderSize_)
         return false;
     else
         return true;
@@ -158,6 +210,15 @@
     };
 }
 
+QList< OxygenFactory::BorderSize >
+OxygenFactory::borderSizes() const
+{
+    // the list must be sorted
+    return QList< BorderSize >() << BorderTiny << BorderNormal <<
+	BorderLarge << BorderVeryLarge <<  BorderHuge <<
+	BorderVeryHuge << BorderOversized;
+}
+
 //////////////////////////////////////////////////////////////////////////////
 // Shadows
 
diff -Naur kwin/clients-orig/oxygen/oxygen.h kwin/clients/oxygen/oxygen.h
--- kwin/clients-orig/oxygen/oxygen.h	2008-10-23 02:03:39.000000000 +0300
+++ kwin/clients/oxygen/oxygen.h	2009-06-03 19:37:08.697139370 +0300
@@ -35,9 +35,6 @@
 
 static const int OXYGEN_BUTTONSIZE      = 22;
 #define TFRAMESIZE 3
-#define BFRAMESIZE 5
-#define LFRAMESIZE 5
-#define RFRAMESIZE 5
 
 enum ButtonType {
     ButtonHelp=0,
@@ -61,6 +58,7 @@
     virtual KDecoration *createDecoration(KDecorationBridge *b);
     virtual bool reset(unsigned long changed);
     virtual bool supports( Ability ability ) const;
+    QList< BorderSize > borderSizes() const;
 
     virtual QList< QList<QImage> > shadowTextures();
     virtual int shadowTextureList( ShadowType type ) const;
@@ -70,6 +68,7 @@
     static bool initialized();
     static Qt::Alignment titleAlignment();
     static bool showStripes();
+    static int borderSize();
 
 private:
     bool readConfig();
@@ -78,6 +77,7 @@
     static bool initialized_;
     static Qt::Alignment titleAlignment_;
     static bool showStripes_;
+    static int borderSize_;
 };
 
 inline bool OxygenFactory::initialized()
@@ -89,6 +89,9 @@
 inline bool OxygenFactory::showStripes()
     { return showStripes_; }
 
+inline int OxygenFactory::borderSize()
+    { return borderSize_; }
+
 } //namespace Oxygen
 
 #endif
diff -Naur kwin/clients-orig/ozone/config/oxygenconfig.ui kwin/clients/ozone/config/oxygenconfig.ui
--- kwin/clients-orig/ozone/config/oxygenconfig.ui	2008-10-23 02:03:39.000000000 +0300
+++ kwin/clients/ozone/config/oxygenconfig.ui	2009-06-03 19:37:08.693139208 +0300
@@ -71,8 +71,6 @@
    </item>
   </layout>
  </widget>
- <layoutdefault spacing="6" margin="11" />
- <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
- <resources/>
+  <resources/>
  <connections/>
 </ui>
diff -Naur kwin/clients-orig/ozone/lib/helper.cpp kwin/clients/ozone/lib/helper.cpp
--- kwin/clients-orig/ozone/lib/helper.cpp	2009-02-27 00:16:02.000000000 +0200
+++ kwin/clients/ozone/lib/helper.cpp	2009-06-03 19:37:08.693139208 +0300
@@ -45,6 +45,7 @@
 
     m_backgroundCache.setMaxCost(64);
     m_windecoButtonCache.setMaxCost(64);
+    m_windecoButtonGlowCache.setMaxCost(64);
 }
 
 KSharedConfigPtr OxygenHelper::config() const
@@ -106,6 +107,7 @@
 {
     m_backgroundCache.clear();
     m_windecoButtonCache.clear();
+    m_windecoButtonGlowCache.clear();
 }
 
 bool OxygenHelper::lowThreshold(const QColor &color)
@@ -284,7 +286,7 @@
 
 QPixmap OxygenHelper::windecoButton(const QColor &color, bool pressed, int size)
 {
-    quint64 key = (quint64(color.rgba()) << 32) | (size << 1) | pressed;
+    quint64 key = (quint64(color.rgba()) << 32) | (size << 1) | (int)pressed;
     QPixmap *pixmap = m_windecoButtonCache.object(key);
 
     if (!pixmap)
@@ -298,35 +300,42 @@
 
         double u = size/21.0;
 
-        QColor light = calcLightColor(color);
-        QColor dark = alphaColor(calcShadowColor(color), 0.6);
+        QColor light  = calcLightColor(color);
+        QColor dark   = calcDarkColor(color);
+        QColor shadow = calcShadowColor(color);
 
         QRectF rect(0.0, 0.0, size, size);
-        QRectF buttonRect = rect.adjusted(3*u,3*u,-3*u,-3*u);
+        QRectF buttonRect = rect.adjusted(2*u,2*u,-2*u,-2*u);
+
+        QLinearGradient fill(QPointF(0.0, 0.0*u),
+                QPointF(0.0, 21.0*u));
+        fill.setColorAt(0.0, alphaColor(light, 0.7));
+        fill.setColorAt(1.0, alphaColor(dark, 0.7));
 
-        p.setBrush(color);
+        p.setBrush(fill);
         p.drawEllipse(buttonRect);
         p.setBrush(Qt::NoBrush);
 
-        QLinearGradient darkgr(QPointF(1.0*u, 0.0),
-                QPointF(20.0*u, 0.0));
-        darkgr.setColorAt(0.0, Qt::transparent);
-        darkgr.setColorAt(0.5, dark);
-        darkgr.setColorAt(1.0, Qt::transparent);
-
-        QLinearGradient lightgr(QPointF(1.0*u, 0.0),
-                QPointF(20.0*u, 0.0));
+        // shadow
+        if (pressed)
+        {
+            p.setPen(alphaColor(dark, 0.4));
+            p.drawEllipse(buttonRect.adjusted(0.9, 0.6, -0.7, -0.7).adjusted(1.7,1.7,-1.7,-1.7));
+            p.setPen(alphaColor(dark, 0.8));
+            p.drawEllipse(buttonRect.adjusted(0.9, 0.6, -0.7, -0.7).adjusted(1.2,1.2,-1.2,-1.2));
+        }
+        p.setPen(QPen(KColorUtils::mix(dark, shadow, 0.12), 2.0));
+        p.drawEllipse(buttonRect.adjusted(0.9, 0.6, -0.7, -0.7).adjusted(0,0.1,0,-0.1));
+        p.setPen(QPen(KColorUtils::mix(dark, shadow, 0.6), 1.2));
+        p.drawEllipse(buttonRect.adjusted(1.0, 1.4, -0.8, -0.8));
+
+        // reflection
+        QLinearGradient lightgr(QPointF(0.0, 0.0*u),
+                QPointF(0.0, 21.0*u));
         lightgr.setColorAt(0.0, Qt::transparent);
-        lightgr.setColorAt(0.5, light);
-        lightgr.setColorAt(1.0, Qt::transparent);
-
-        p.setPen(QPen(darkgr, 1.5));
-        p.drawEllipse(buttonRect);
-        p.setPen(QPen(lightgr, 1.5));
-        if (!pressed)
-            p.drawEllipse(buttonRect.adjusted(0.0, 1.0, 0.0, 1.0));
-        else
-            p.drawEllipse(buttonRect.adjusted(1.0, 1.5, -1.0, 1.0));
+        lightgr.setColorAt(1.0, light);
+        p.setPen(QPen(lightgr, 1.7));
+        p.drawEllipse(buttonRect.adjusted(0.0, -0.5, -0.1, 0.0));
 
         m_windecoButtonCache.insert(key, pixmap);
     }
@@ -334,6 +343,48 @@
     return *pixmap;
 }
 
+QPixmap OxygenHelper::windecoButtonGlow(const QColor &color, int size)
+{
+    quint64 key = (quint64(color.rgba()) << 32) | size;
+    QPixmap *pixmap = m_windecoButtonGlowCache.object(key);
+
+    if (!pixmap)
+    {
+        pixmap = new QPixmap(size, size);
+        pixmap->fill(Qt::transparent);
+
+        QPainter p(pixmap);
+        p.setRenderHints(QPainter::Antialiasing);
+        p.setPen(Qt::NoPen);
+
+        double u = size/21.0;
+        QRectF rect(0.0, 0.0, size, size);
+        QRectF buttonRect = rect.adjusted(2*u,2*u,-2*u,-2*u);
+
+        //mask
+        p.setBrush(QColor(0,0,0,125));
+        p.drawEllipse(rect.adjusted(u, 0, -u, -2*u));
+
+        //glow
+        QColor dark  = calcDarkColor(color);
+        QColor light = calcLightColor(color);
+
+        QRadialGradient glow(QPointF(size/2.0, size/2.0 + 0.25), size/2.0);
+        glow.setColorAt(12.0 / 21.0, Qt::transparent);
+        glow.setColorAt(16.0 / 21.0, dark);
+        glow.setColorAt(18.0 / 21.0, alphaColor(light, 0.25));
+        glow.setColorAt(20.0 / 21.0, Qt::transparent);
+
+        p.setCompositionMode(QPainter::CompositionMode_SourceIn);
+        p.setBrush(glow);
+        p.drawEllipse(rect);
+
+        m_windecoButtonGlowCache.insert(key, pixmap);
+    }
+
+    return *pixmap;
+}
+
 QPixmap OxygenHelper::glow(const QColor &color, int size, int rsize)
 {
     QPixmap pixmap(rsize, rsize);
diff -Naur kwin/clients-orig/ozone/lib/helper.h kwin/clients/ozone/lib/helper.h
--- kwin/clients-orig/ozone/lib/helper.h	2009-01-01 18:30:10.000000000 +0200
+++ kwin/clients/ozone/lib/helper.h	2009-06-03 19:37:08.693139208 +0300
@@ -65,6 +65,7 @@
     QLinearGradient decoGradient(const QRect &r, const QColor &color);
 
     QPixmap windecoButton(const QColor &color, bool pressed, int size = 21);
+    QPixmap windecoButtonGlow(const QColor &color, int size = 21);
 
     void drawFloatFrame(QPainter *p, const QRect r, const QColor &color, bool drawUglyShadow=true, bool isActive=false, const QColor &frameColor=QColor()) const;
 
@@ -83,6 +84,7 @@
 
     QCache<quint64, QPixmap> m_backgroundCache;
     QCache<quint64, QPixmap> m_windecoButtonCache;
+    QCache<quint64, QPixmap> m_windecoButtonGlowCache;
 };
 
 #endif // __OXYGEN_HELPER_H
diff -Naur kwin/clients-orig/ozone/oxygenclient.cpp kwin/clients/ozone/oxygenclient.cpp
--- kwin/clients-orig/ozone/oxygenclient.cpp	2009-01-17 13:00:20.000000000 +0200
+++ kwin/clients/ozone/oxygenclient.cpp	2009-06-03 19:37:08.693139208 +0300
@@ -277,8 +277,6 @@
     Q_UNUSED(e)
     if (!OxygenFactory::initialized()) return;
 
-    updateButtons();
-
     QPalette palette = widget()->palette();
     QPainter painter(widget());
 
diff -Naur kwin/clients-orig/plastik/config/configdialog.ui kwin/clients/plastik/config/configdialog.ui
--- kwin/clients-orig/plastik/config/configdialog.ui	2008-11-19 12:18:03.000000000 +0200
+++ kwin/clients/plastik/config/configdialog.ui	2009-06-03 19:37:08.692139208 +0300
@@ -95,9 +95,7 @@
    </item>
   </layout>
  </widget>
- <layoutdefault spacing="6" margin="11" />
- <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
- <customwidgets>
+  <customwidgets>
   <customwidget>
    <class>KButtonGroup</class>
    <extends>QGroupBox</extends>
diff -Naur kwin/clients-orig/plastik/plastik.desktop kwin/clients/plastik/plastik.desktop
--- kwin/clients-orig/plastik/plastik.desktop	2009-03-26 17:42:16.000000000 +0300
+++ kwin/clients/plastik/plastik.desktop	2009-06-03 19:37:08.692139208 +0300
@@ -28,6 +28,7 @@
 Name[ro]=Plastic
 Name[ru]=Пластик
 Name[se]=Plastihkka
+Name[si]=3
 Name[sr]=Пластика
 Name[sr@latin]=Plastika
 Name[ta]=திட்டம்
diff -Naur kwin/clients-orig/quartz/quartz.desktop kwin/clients/quartz/quartz.desktop
--- kwin/clients-orig/quartz/quartz.desktop	2009-02-26 16:16:54.000000000 +0200
+++ kwin/clients/quartz/quartz.desktop	2009-06-03 19:37:08.693139208 +0300
@@ -27,6 +27,7 @@
 Name[pt_BR]=Quartzo
 Name[ro]=Cuarț
 Name[ru]=Кварц
+Name[si]=3Quartz
 Name[sr]=Кварц
 Name[sr@latin]=Kvarc
 Name[ta]=குவார்ட்ஸ்
diff -Naur kwin/clients-orig/test/test.desktop kwin/clients/test/test.desktop
--- kwin/clients-orig/test/test.desktop	2009-03-26 17:42:16.000000000 +0300
+++ kwin/clients/test/test.desktop	2009-06-03 19:37:08.695139129 +0300
@@ -8,6 +8,7 @@
 Name[bn]=Kwin পরীক্ষা
 Name[bn_IN]=KWin পরীক্ষা
 Name[ca]=Test de KWin
+Name[ca@valencia]=Test de KWin
 Name[csb]=Test KWin
 Name[cy]=arbrawf KWin
 Name[da]=KWin-test
