Index: kdebase-workspace-4.2.3/plasma/dataengines/hotplug/hotplugengine.cpp
===================================================================
--- kdebase-workspace-4.2.3.orig/plasma/dataengines/hotplug/hotplugengine.cpp
+++ kdebase-workspace-4.2.3/plasma/dataengines/hotplug/hotplugengine.cpp
@@ -30,7 +30,9 @@
 #include <solid/devicenotifier.h>
 #include <solid/device.h>
 #include <solid/deviceinterface.h>
+#include <solid/genericinterface.h>
 #include <solid/predicate.h>
+#include <knotification.h>
 
 HotplugEngine::HotplugEngine(QObject* parent, const QVariantList& args)
     : Plasma::DataEngine(parent, args)
@@ -41,7 +43,7 @@ HotplugEngine::HotplugEngine(QObject* pa
         sortByPreference(files);
 
     foreach (const Solid::Device &dev, Solid::Device::allDevices()) {
-        onDeviceAdded(dev.udi());
+        onDeviceAdded(dev.udi(), true);
     }
 
     connect(Solid::DeviceNotifier::instance(), SIGNAL(deviceAdded(const QString &)),
@@ -52,7 +54,7 @@ HotplugEngine::HotplugEngine(QObject* pa
 
 HotplugEngine::~HotplugEngine()
 {
-
+    pluggedDevices.clear();
 }
 
 bool lessThan(const QString &s1, const QString &s2)
@@ -76,10 +78,21 @@ void HotplugEngine::sortByPreference(QSt
     qSort(desktops.begin(), desktops.end(), ::lessThan);
 }
 
-void HotplugEngine::onDeviceAdded(const QString &udi)
+void HotplugEngine::onDeviceAdded(const QString &udi, const bool firstRun)
 {
     bool new_device = false;
     Solid::Device device(udi);
+    QString deviceInfo = device.vendor() + " " + device.product();
+
+    // Notify when a new device plugged-in
+    Solid::GenericInterface *interface = device.as<Solid::GenericInterface>();
+    if (interface) {
+        if (interface->property("info.subsystem").toString() == "usb_device"){
+            pluggedDevices.insert(udi, deviceInfo);
+            if (!firstRun)
+                KNotification::event (KNotification::Notification, i18n("Device <b>%1</b> plugged in.", deviceInfo));
+        }
+    }
 
     QStringList interestingDesktopFiles;
     //search in all desktop configuration file if the device inserted is a correct device
@@ -117,6 +130,13 @@ void HotplugEngine::onDeviceAdded(const 
 
 void HotplugEngine::onDeviceRemoved(const QString &udi)
 {
+
+    if (pluggedDevices.contains(udi)) {
+        QString deviceInfo = pluggedDevices[udi];
+        KNotification::event (KNotification::Notification, i18n("Device <b>%1</b> plugged out.", deviceInfo));
+        pluggedDevices.remove(udi);
+    }
+
     removeSource(udi);
 
     kDebug() << "remove hardware solid : " << udi;
Index: kdebase-workspace-4.2.3/plasma/dataengines/hotplug/hotplugengine.h
===================================================================
--- kdebase-workspace-4.2.3.orig/plasma/dataengines/hotplug/hotplugengine.h
+++ kdebase-workspace-4.2.3/plasma/dataengines/hotplug/hotplugengine.h
@@ -23,6 +23,7 @@
 
 #include <QObject>
 #include <QString>
+#include <QHash>
 #include <QList>
 
 #include <Plasma/DataEngine>
@@ -38,10 +39,11 @@ class HotplugEngine : public Plasma::Dat
         HotplugEngine( QObject* parent, const QVariantList& args);
         ~HotplugEngine();
     protected slots :
-        void onDeviceAdded(const QString &udi);
+        void onDeviceAdded(const QString &udi, const bool firstRun = false);
         void onDeviceRemoved(const QString &udi);
     private :
         QStringList files;
+        QHash<QString, QString> pluggedDevices;
         void sortByPreference(QStringList& desktops);
         bool lessThan(const QString &s1, const QString &s2);
 };
