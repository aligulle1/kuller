diff -Nur -x '*.orig' -x '*~' foomatic-filters-4.0.2/ChangeLog foomatic-filters-4.0.2.new/ChangeLog
--- foomatic-filters-4.0.2/ChangeLog	2009-06-24 13:54:33.000000000 +0200
+++ foomatic-filters-4.0.2.new/ChangeLog	2009-07-13 11:27:59.000000000 +0200
@@ -1,3 +1,15 @@
+2009-07-01  Till Kamppeter <till.kamppeter@gmail.com>
+
+	* foomaticrip.c: Do not use JCL which is preceeded to the input
+	  data. We can generate it on our own and even merge it with the JCL
+	  coming from the driver.
+
+	* renderer.c: Make sure that "@PJL SET ..." commands from the PPD
+	  file do not get nmerged into the driver's PJL header too early,
+	  expecially not before "@PJL JOB ..." lines, as then the commands
+	  get ignored. This happened especially with the "InputSlot"
+	  option for the "cdnj500" driver.
+
 2009-06-24  Till Kamppeter <till.kamppeter@gmail.com>
 
 	* Tagged branch for release 4.0.2.
diff -Nur -x '*.orig' -x '*~' foomatic-filters-4.0.2/foomaticrip.c foomatic-filters-4.0.2.new/foomaticrip.c
--- foomatic-filters-4.0.2/foomaticrip.c	2009-06-24 13:54:33.000000000 +0200
+++ foomatic-filters-4.0.2.new/foomaticrip.c	2009-07-13 11:28:00.000000000 +0200
@@ -965,10 +965,13 @@
     n = fread(buf, 1, sizeof(buf) - 1, file);
     buf[n] = '\0';
     type = guess_file_type(buf, n, &startpos);
-    if (startpos > 0) {
+    /* We do not use any JCL preceeded to the inputr data, as it is simply
+       the PJL commands from the PPD file, and these commands we can also
+       generate, end we even merge them with PJl from the driver */
+    /*if (startpos > 0) {
         jobhasjcl = 1;
         write_output(buf, startpos);
-    }
+    }*/
     if (file != stdin)
         rewind(file);
 
diff -Nur -x '*.orig' -x '*~' foomatic-filters-4.0.2/renderer.c foomatic-filters-4.0.2.new/renderer.c
--- foomatic-filters-4.0.2/renderer.c	2009-06-24 13:54:33.000000000 +0200
+++ foomatic-filters-4.0.2.new/renderer.c	2009-07-13 11:28:00.000000000 +0200
@@ -248,7 +248,7 @@
 {
     char *p = strstr(original_opts[0], jclstr);
     char header[128];
-    char **optsp;
+    char **optsp1 = NULL, **optsp2 = NULL;
 
     /* No JCL options in original_opts, just prepend opts */
     if (argv_count(original_opts) == 1)
@@ -284,18 +284,30 @@
     header[p - original_opts[0]] = '\0';
     fprintf(stream, "%s", header);
 
-    for (optsp = opts; *optsp; optsp++)
-        if (!jcl_options_find_keyword(original_opts, *optsp, jclstr))
-	    fprintf(stream, "%s\n", *optsp);
-
-    for (optsp = original_opts; *(optsp + 1); optsp++) {
-        if (optsp != original_opts) p = *optsp;
+    /* Insert the JCL commands from the PPD file right before the first
+       "@PJL SET ..." line from the, if there are no "@PJL SET ..." lines,
+       directly before "@PJL ENTER LANGUAGE ...", otherwise after the JCL
+       commands from the driver */
+    for (optsp1 = original_opts; *(optsp1 + 1); optsp1++) {
+        if (optsp2 == NULL &&
+	    ((strstr(*optsp1, "ENTER LANGUAGE") != NULL) ||
+	     (strncasecmp(*optsp1, "@PJL SET ", 9) == 0))) {
+	    for (optsp2 = opts; *optsp2; optsp2++)
+	        if (!jcl_options_find_keyword(original_opts, *optsp2, jclstr))
+		    fprintf(stream, "%s\n", *optsp2);
+	}
+        if (optsp1 != original_opts) p = *optsp1;
         if (jcl_options_find_keyword(opts, p, jclstr))
 	  fprintf(stream, "%s\n", jcl_options_find_keyword(opts, p, jclstr));
 	else
             fprintf(stream, "%s\n", p);
     }
-    write_binary_data(stream, *optsp, readbinarybytes);
+    if (optsp2 == NULL)
+        for (optsp2 = opts; *optsp2; optsp2++)
+            if (!jcl_options_find_keyword(original_opts, *optsp2, jclstr))
+	        fprintf(stream, "%s\n", *optsp2);
+
+    write_binary_data(stream, *optsp1, readbinarybytes);
 
     return 1;
 }
