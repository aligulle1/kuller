diff -up synergy-1.3.1/lib/arch/CArchDaemonUnix.cpp~ synergy-1.3.1/lib/arch/CArchDaemonUnix.cpp
--- synergy-1.3.1/lib/arch/CArchDaemonUnix.cpp~	2008-06-02 20:22:31.000000000 +0200
+++ synergy-1.3.1/lib/arch/CArchDaemonUnix.cpp	2008-06-02 20:22:31.000000000 +0200
@@ -38,6 +38,8 @@ CArchDaemonUnix::~CArchDaemonUnix()
 int
 CArchDaemonUnix::daemonize(const char* name, DaemonFunc func)
 {
+	int dummy;
+	
 	// fork so shell thinks we're done and so we're not a process
 	// group leader
 	switch (fork()) {
@@ -58,7 +60,7 @@ CArchDaemonUnix::daemonize(const char* n
 	setsid();
 
 	// chdir to root so we don't keep mounted filesystems points busy
-	chdir("/");
+	dummy = chdir("/");
 
 	// mask off permissions for any but owner
 	umask(077);
@@ -72,7 +74,7 @@ CArchDaemonUnix::daemonize(const char* n
 	// of standard I/O safely goes in the bit bucket.
 	open("/dev/null", O_RDONLY);
 	open("/dev/null", O_RDWR);
-	dup(1);
+	dummy = dup(1);
 
 	// invoke function
 	return func(1, &name);
diff -up synergy-1.3.1/lib/arch/CArchNetworkBSD.cpp~ synergy-1.3.1/lib/arch/CArchNetworkBSD.cpp
--- synergy-1.3.1/lib/arch/CArchNetworkBSD.cpp~	2008-06-02 20:25:02.000000000 +0200
+++ synergy-1.3.1/lib/arch/CArchNetworkBSD.cpp	2008-06-02 20:27:12.000000000 +0200
@@ -314,8 +314,10 @@ CArchNetworkBSD::pollSocket(CPollEntry p
 	if (n > 0 && unblockPipe != NULL && (pfd[num].revents & POLLIN) != 0) {
 		// the unblock event was signalled.  flush the pipe.
 		char dummy[100];
+		int ignore;
+
 		do {
-			read(unblockPipe[0], dummy, sizeof(dummy));
+			ignore = read(unblockPipe[0], dummy, sizeof(dummy));
 		} while (errno != EAGAIN);
 
 		// don't count this unblock pipe in return value
@@ -487,7 +489,9 @@ CArchNetworkBSD::unblockPollSocket(CArch
 	const int* unblockPipe = getUnblockPipeForThread(thread);
 	if (unblockPipe != NULL) {
 		char dummy = 0;
-		write(unblockPipe[1], &dummy, 1);
+		int ignore;
+
+		ignore = write(unblockPipe[1], &dummy, 1);
 	}
 }
 
