Subject: Use same PAM for generic greeter
From: Dirk Mueller, Lubos Lunak
Patch-upstream: no
Bug: ?

This patch makes KDM and screen lock use the same PAM for classic and generic
authentication plugins. It also does some modifications that make it possible
to preselect a user even with generic plugin, although I(=Lubos) am not
completely sure about what exactly those parts do.

--- workspace/kdm/backend/client.c.sav	2010-03-09 11:10:47.000000000 +0100
+++ workspace/kdm/backend/client.c	2010-03-09 11:52:35.000000000 +0100
@@ -537,7 +537,8 @@ verify( GConvFunc gconv, int rootok )
 #ifdef USE_PAM
 
 	pnopass = False;
-	if (!strcmp( curtype, "classic" )) {
+        pdata.usecur = False;
+	if (!strcmp( curtype, "classic" ) || !strcmp( curtype, "generic" )) {
 		if (!gconv( GCONV_USER, 0 ))
 			return False;
 		if (isNoPassAllowed( curuser )) {
@@ -550,11 +551,11 @@ verify( GConvFunc gconv, int rootok )
 				psrv = PAMService;
 		} else
 			psrv = PAMService;
-		pdata.usecur = True;
+		if (!strcmp( curtype, "classic"))
+			pdata.usecur = True;
 	} else {
 		sprintf( psrvb, "%.31s-%.31s", PAMService, curtype );
 		psrv = psrvb;
-		pdata.usecur = False;
 	}
 	pdata.gconv = gconv;
 	if (!doPAMAuth( psrv, &pdata ))
--- workspace/kcheckpass/checkpass_pam.c.sav	2010-03-09 11:10:47.000000000 +0100
+++ workspace/kcheckpass/checkpass_pam.c	2010-03-09 11:52:35.000000000 +0100
@@ -140,12 +140,14 @@ AuthReturn Authenticate(const char *call
   openlog("kcheckpass", LOG_PID, LOG_AUTH);
 
   PAM_data.conv = conv;
-  if (strcmp(method, "classic")) {
-    sprintf(pservb, "%.31s-%.31s", caller, method);
-    pam_service = pservb;
-  } else {
+  if (strcmp(method, "classic") == 0) {
     /* PAM_data.classic = 1; */
     pam_service = caller;
+  } else if (strcmp(method, "generic") == 0) {
+    pam_service = caller;
+  } else {
+    sprintf(pservb, "%.31s-%.31s", caller, method);
+    pam_service = pservb;
   }
   pam_error = pam_start(pam_service, user, &PAM_conversation, &pamh);
   if (pam_error != PAM_SUCCESS)
--- workspace/libs/kdm/kgreet_generic.cpp.sav	2010-03-09 11:52:17.000000000 +0100
+++ workspace/libs/kdm/kgreet_generic.cpp	2010-03-09 11:53:26.000000000 +0100
@@ -156,6 +156,7 @@ KGenericGreeter::textPrompt( const char
 	exp =
 		exp >= 0 ||
 		func != Authenticate ||
+		!echo ||
 		!(kgreeterplugin_info.flags & KGreeterPluginInfo::Presettable);
 
 	if (!exp && !fixedUser.isEmpty()) {
@@ -325,7 +326,7 @@ static bool init( const QString &,
 	echoMode = getConf( ctx, "EchoMode", QVariant( -1 ) ).toInt();
 	// Fielded entities are not supported per se.
 	// This implies that the first field is the presettable entity, if any.
-	if (getConf( ctx, "generic.Presettable", QVariant( false ) ).toBool())
+//	if (getConf( ctx, "generic.Presettable", QVariant( false ) ).toBool())
 		kgreeterplugin_info.flags |= KGreeterPluginInfo::Presettable;
 	KGlobal::locale()->insertCatalog( "kgreet_generic" );
 	return true;
