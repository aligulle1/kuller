diff --git a/CMakeLists.txt b/CMakeLists.txt
index a099c11..2b0f6be 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -219,8 +219,9 @@ QT4_ADD_TRANSLATION ( juffed_QM ${juffed_TS} )
 # definitions for the project
 ADD_DEFINITIONS(
 	-Wall 
-#	-DQT_NO_DEBUG
-	-DJUFF_DEBUG
+	-DQT_NO_DEBUG
+    -DQT_NO_DEBUG_STREAM
+#	-DJUFF_DEBUG
 #	-DJUFF_FULL_DEBUG
 	${QT_DEFINITIONS}
 )
diff --git a/include/Log.h b/include/Log.h
index 2b4fd2f..183388f 100644
--- a/include/Log.h
+++ b/include/Log.h
@@ -29,6 +29,7 @@ namespace Log {
 	void debug(const char*, bool canBeSkipped = false);
 	void debug(int, bool canBeSkipped = false);
 	void debug(const QRect&, bool canBeSkipped = false);
+    void warning(const QString& str, bool canBeSkipped = false);
 };
 
 #ifdef JUFF_FULL_DEBUG
@@ -40,6 +41,7 @@ namespace Log {
 #define JUFFDEBUG(x) Log::debug(QString("DEBUG (%1:%2): %3").arg(QFileInfo(__FILE__).fileName()).arg(__LINE__).arg(x))
 #define JUFFDEBUG2(x) Log::debug(QString("DEBUG2 (%1:%2): %3").arg(QFileInfo(__FILE__).fileName()).arg(__LINE__).arg(x))
 #define JUFFENTRY2 JUFFENTRY
+#define JUFFWARNING(x) Log::warning(QString("WARNING (%1:%2): %3").arg(QFileInfo(__FILE__).fileName()).arg(__LINE__).arg(x))
 
 #else	//	JUFF_FULL_DEBUG
 
@@ -51,12 +53,14 @@ namespace Log {
 #define JUFFENTRY Log::debug(QString("Entering %1 (%2:%3)").arg(__FUNCTION__).arg(QFileInfo(__FILE__).fileName()).arg(__LINE__))
 #define JUFFDTOR Log::debug(QString("Destructor: %1").arg(__FUNCTION__))
 #define JUFFDEBUG(x) Log::debug(QString("DEBUG (%1:%2): %3").arg(QFileInfo(__FILE__).fileName()).arg(__LINE__).arg(x))
+#define JUFFWARNING(x) Log::warning(QString("WARNING (%1:%2): %3").arg(QFileInfo(__FILE__).fileName()).arg(__LINE__).arg(x))
 
 #else	//	JUFF_DEBUG
 
 #define JUFFENTRY ;
 #define JUFFDTOR ;
 #define JUFFDEBUG(x) ;
+#define JUFFWARNING(x) ;
 
 #endif	//	JUFF_DEBUG
 //-----------------
diff --git a/src/JuffApp.cpp b/src/JuffApp.cpp
index c81f671..d7eceb7 100644
--- a/src/JuffApp.cpp
+++ b/src/JuffApp.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
diff --git a/src/JuffScintilla.cpp b/src/JuffScintilla.cpp
index a81c25e..9b55842 100644
--- a/src/JuffScintilla.cpp
+++ b/src/JuffScintilla.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -341,7 +339,6 @@ void JuffScintilla::cancelRectInput() {
 
 void JuffScintilla::keyPressEvent(QKeyEvent* e) {
 	if ( hasSelectedText() && SendScintilla(SCI_SELECTIONISRECTANGLE) ) {
-		qDebug() << "yes";
 		int line, col;
 		getCursorPosition(&line, &col);
 
diff --git a/src/LexerStorage.cpp b/src/LexerStorage.cpp
index ad32f20..ef342b0 100644
--- a/src/LexerStorage.cpp
+++ b/src/LexerStorage.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -171,7 +169,7 @@ void LSInterior::readCustomStyle(const QString& name) {
 
 	QFile file(fileName);
 	if ( !file.open(QIODevice::ReadOnly) ) {
-		Log::debug(QString("Can't open file '%1'").arg(fileName));
+		Log::warning(QString("Can't open file '%1'").arg(fileName));
 		return;
 	}
 	else {
@@ -700,7 +698,6 @@ QsciLexer* LSInterior::lexer(const QString& name) {
 #endif // JUFF_FORTRAN_LEXER
 
 		if ( newLexer != 0 ) {
-			qDebug() << "==========" << "Lexer Created" << "==========";
 			lexers_[name] = newLexer;
 			if ( !name.isEmpty() && name.compare("none") != 0 ) {
 				readCustomStyle(name);
diff --git a/src/Manager.cpp b/src/Manager.cpp
index a14ab97..7ec32af 100644
--- a/src/Manager.cpp
+++ b/src/Manager.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -707,10 +705,8 @@ void Manager::createDoc(const QString& type, const QString& fileName) {
 	
 	DocHandler* h = mInt_->handlers_[type];
 	if ( h ) {
-		qDebug() << "          Handler found";
 		Document* doc = h->createDoc(fileName);
 		if ( doc ) {
-			qDebug() << "          Doc created";
 			QString fName = doc->fileName();
 			
 			connect(doc, SIGNAL(modified(bool)), SLOT(docModified(bool)));
diff --git a/src/PluginManager.cpp b/src/PluginManager.cpp
index 76fef3c..10fba18 100644
--- a/src/PluginManager.cpp
+++ b/src/PluginManager.cpp
@@ -199,7 +199,7 @@ void PluginManager::loadPlugin(const QString& path) {
 
 	QPluginLoader loader(path);
 	if ( !loader.load() ) {
-		Log::debug(QString("Plugin '%1' was NOT loaded: %2").arg(path).arg(loader.errorString()));
+		Log::warning(QString("Plugin '%1' was NOT loaded: %2").arg(path).arg(loader.errorString()));
 		return;
 	}
 	
@@ -237,7 +237,7 @@ void PluginManager::loadPlugin(const QString& path) {
 			}
 		}
 		else {
-			Log::debug("Error while casting to JuffPlugin type");
+			Log::warning("Error while casting to JuffPlugin type");
 		}
 	}
 	else {
diff --git a/src/SciDoc.cpp b/src/SciDoc.cpp
index f3a9666..e13823f 100644
--- a/src/SciDoc.cpp
+++ b/src/SciDoc.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -991,7 +989,6 @@ QString SciDoc::syntax() const {
 }
 
 void SciDoc::setSyntax(const QString& lexName) {
-	qDebug() << "Syntax:" << lexName;
 	if ( lexName.isEmpty() )
 		return;
 
diff --git a/src/SocketListener.cpp b/src/SocketListener.cpp
index 9fb176f..8c7b878 100644
--- a/src/SocketListener.cpp
+++ b/src/SocketListener.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -52,7 +50,7 @@ void SocketListener::onNewConnection() {
 	
 	QLocalSocket* socket = server_->nextPendingConnection();
 	if ( !socket->waitForReadyRead(1000) ) {
-		qDebug() << "Couldn't read data:" << socket->errorString();
+		JUFFDEBUG(QString("Couldn't read data: %1").arg(socket->errorString()));
 		return;
 	}
 	
diff --git a/src/gui/GUIManager.cpp b/src/gui/GUIManager.cpp
index 874a296..b58e232 100644
--- a/src/gui/GUIManager.cpp
+++ b/src/gui/GUIManager.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -52,7 +50,6 @@ void GUIManager::saveLastStates() {
 				visible = tb->isVisible();
 			else
 				visible = tbLastState_[tb];
-			qDebug() << "Saving toolbar" << tb->windowTitle() << "is" << (visible ? "" : "not") << "visible";
 			GUISettings::saveToolBarLastState(tb, visible);
 		}
 		it++;
@@ -67,7 +64,6 @@ void GUIManager::saveLastStates() {
 				visible = w->parentWidget()->isVisible();
 			else
 				visible = dockLastState_[w];
-			qDebug() << "Saving dock" << w->parentWidget()->windowTitle() << "is" << (visible ? "" : "not") << "visible";
 			GUISettings::saveDockLastState(w, visible);
 		}
 		it2++;
@@ -82,7 +78,6 @@ void GUIManager::loadLastStates() {
 		foreach (QToolBar* tb, list) {
 			bool visible = GUISettings::toolBarLastState(tb);
 			tbLastState_[tb] = visible;
-			qDebug() << "Loading toolbar" << tb->windowTitle() << "is" << (visible ? "" : "not") << "visible";
 		}
 		it++;
 	}
@@ -93,7 +88,6 @@ void GUIManager::loadLastStates() {
 		foreach (QWidget* w, list) {
 			bool visible = GUISettings::dockLastState(w);
 			dockLastState_[w] = visible;
-			qDebug() << "Loading dock" << w->parentWidget()->windowTitle() << "is" << (visible ? "" : "not") << "visible";
 		}
 		it2++;
 	}
@@ -172,7 +166,6 @@ void GUIManager::setCurType(const QString& type) {
 		foreach(QToolBar* tb, toolBars_[curType_]) {
 			tbLastState_[tb] = tb->isVisible();
 			tb->hide();
-//			qDebug() << "Hiding" << tb->windowTitle() << "toolbar";
 		}
 		
 		
@@ -195,7 +188,6 @@ void GUIManager::setCurType(const QString& type) {
 		foreach (QToolBar* tb, toolBars_["all"]) {
 			bool visible = tbLastState_[tb];
 			tb->setVisible(visible);
-//			qDebug() << "1: Toolbar" << tb->windowTitle() << "is" << (visible ? "" : "not") << "visible";
 		}
 		foreach (QWidget* w, docks_["all"]) {
 			bool visible = dockLastState_[w];
@@ -210,7 +202,6 @@ void GUIManager::setCurType(const QString& type) {
 			if ( tbLastState_.contains(tb) ) {
 				if ( tbLastState_[tb] ) {
 					tb->show();
-	//				qDebug() << "Showing" << tb->windowTitle() << "toolbar";
 				}
 			}
 			else {
@@ -224,7 +215,6 @@ void GUIManager::setCurType(const QString& type) {
 			if ( dockLastState_.contains(w) ) {
 				if ( dockLastState_[w] ) {
 					w->parentWidget()->show();
-	//				qDebug() << "Showing" << tb->windowTitle() << "toolbar";
 				}
 			}
 			else {
@@ -248,11 +238,9 @@ void GUIManager::setCurType(const QString& type) {
 	// showing controls of "all" type (if needed)
 	foreach(QToolBar* tb, toolBars_["all"]) {
 		tbLastState_ [tb] = tb->isVisible();
-//		qDebug() << "3: Toolbar" << tb->windowTitle() << "is" << (tb->isVisible() ? "" : "not") << "visible";
 	}
 	foreach(QWidget* w, docks_["all"]) {
 		dockLastState_ [w] = w->parentWidget()->isVisible();
-//		qDebug() << "3: Toolbar" << tb->windowTitle() << "is" << (tb->isVisible() ? "" : "not") << "visible";
 	}
 	foreach(QAction* act, actions_["all"]) {
 		act->setVisible(true);
diff --git a/src/gui/SettingsDlg.cpp b/src/gui/SettingsDlg.cpp
index b0fb411..3824259 100644
--- a/src/gui/SettingsDlg.cpp
+++ b/src/gui/SettingsDlg.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -383,5 +381,5 @@ bool SettingsDlg::isPluginEnabled(const QString& pluginName) {
 
 
 void SettingsDlg::somethingChanged(bool changed) {
-	qDebug() << "Something is changed:" << (changed ? "TRUE" : "FALSE");
+	JUFFWARNING(QString("Something is changed: ").arg(changed));
 }
diff --git a/src/gui/Viewer.cpp b/src/gui/Viewer.cpp
index a390e78..a8671ec 100644
--- a/src/gui/Viewer.cpp
+++ b/src/gui/Viewer.cpp
@@ -1,4 +1,3 @@
-#include <QDebug>
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
diff --git a/src/lib/CommandStorage.cpp b/src/lib/CommandStorage.cpp
index 6c079b6..c9c2c36 100644
--- a/src/lib/CommandStorage.cpp
+++ b/src/lib/CommandStorage.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -189,7 +187,6 @@ void CommandStorage::updateShortcuts() {
 		QAction* a = action((CommandID)id);
 		if ( NULL != a ) {
 			if ( KeySettings::contains((CommandID)id) ) {
-				qDebug() << "Updating:" << id << KeySettings::keySequence((CommandID)id);
 				a->setShortcut(KeySettings::keySequence((CommandID)id));
 			}
 		}
diff --git a/src/lib/Log.cpp b/src/lib/Log.cpp
index 8438ffd..a1d256f 100644
--- a/src/lib/Log.cpp
+++ b/src/lib/Log.cpp
@@ -92,5 +92,13 @@ namespace Log {
 	void debug(const QRect& r, bool canBeSkipped) {
 		debug(QString("%1,%2,%3,%4").arg(r.left()).arg(r.top()).arg(r.width()).arg(r.height()), canBeSkipped);
 	}
+    
+    void warning(const QString& str, bool canBeSkipped) {
+#ifdef Q_OS_WIN
+		printToLog(str, canBeSkipped);
+#else
+		qWarning() << QDateTime::currentDateTime().toString("[hh:mm:ss]") << str;
+#endif
+    }
 };
 
diff --git a/src/lib/SettingsCheckItem.cpp b/src/lib/SettingsCheckItem.cpp
index 98453c8..873ac41 100644
--- a/src/lib/SettingsCheckItem.cpp
+++ b/src/lib/SettingsCheckItem.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -32,8 +30,6 @@ SettingsCheckItem::SettingsCheckItem(const QString& section, const QString& key,
 	readValue();
 	
 	connect(cb, SIGNAL(toggled(bool)), SLOT(onChecked(bool)));
-	
-//	qDebug() << "section:" << section << ", key:" << key;
 }
 
 void SettingsCheckItem::readValue() {
diff --git a/src/lib/SettingsSelectItem.cpp b/src/lib/SettingsSelectItem.cpp
index 095a39d..6e05b05 100644
--- a/src/lib/SettingsSelectItem.cpp
+++ b/src/lib/SettingsSelectItem.cpp
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2009 Mikhail Murzin
@@ -32,8 +30,6 @@ SettingsSelectItem::SettingsSelectItem(const QString& section, const QString& ke
 	readValue();
 	
 	connect(cb, SIGNAL(activated(int)), SLOT(onSelected(int)));
-	
-//	qDebug() << "section:" << section << ", key:" << key;
 }
 
 void SettingsSelectItem::readValue() {
